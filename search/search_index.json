{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#_1","title":"\u5173\u4e8e\u6211\u4eec","text":"<p>So Proficient\uff0c\u6765\u81ea\u5317\u4eac\u7406\u5de5\u5927\u5b66\uff0c\u961f\u5458\u6709 Durant_Lee\u3001SkqLiiiao \u548c vandoor\uff08Codeforces ID\u5b57\u5178\u5e8f\u5347\u5e8f\u6392\u5217\uff09\u3002</p> <p>2021\u5e74\uff1aCCPC\uff08\u6842\u6797\uff09\u94f6\u724c\u3001ICPC\uff08\u6c88\u9633\uff09\u94f6\u724c\u3001ICPC\uff08\u6d4e\u5357\uff09\u94f6\u724c\u3001ICPC\uff08EC final\uff09\u94dc\u724c\u3002</p> <p>2022\u5e74\uff1aCCPC\uff08\u5a01\u6d77\uff09\u94f6\u724c\u3001ICPC\uff08\u897f\u5b89\uff09\u94f6\u724c\u3001ICPC\uff08\u5408\u80a5\uff09\u91d1\u724c\u3002</p> <p>\u672cWiki\u4e3b\u8981\u8bb0\u5f55\u5e73\u65f6vp\u4ee5\u53caCodeforces/AtCoder/\u591a\u6821\u7b49\u6bd4\u8d5b\u7684\u90e8\u5206\u9898\u7684\u9898\u89e3\uff0c\u66f4\u65b0\u9891\u7387\u548c\u8bed\u8a00\u98ce\u683c\u4e0d\u5b9a\u3002</p>"},{"location":"#_2","title":"\u66f4\u65b0\u8bb0\u5f55","text":"\u6bd4\u8d5b\u540d\u79f0 \u66f4\u65b0\u65e5\u671f 2018-2019 9th BSUIR Open Programming Championship. Final 2022-11-02 2020-2021 Russia Team Open, High School Programming Contest (VKOSHP 20) 2022-10-25 2019-2020 ICPC Southeastern European Regional Programming Contest (SEERC 2019) 2022-10-22 2019-2020 ICPC Northwestern European Regional Programming Contest (NWERC 2019) 2022-10-18 2018-2019 9th BSUIR Open Programming Championship. Semifinal 2022-10-18 2022 Shanghai Collegiate Programming Contest 2022-10-05 CCPC2022\u7f51\u7edc\u8d5b 2022-09-13 2022\u201c\u676d\u7535\u676f\u201d\u4e2d\u56fd\u5927\u5b66\u751f\u7b97\u6cd5\u8bbe\u8ba1\u8d85\u7ea7\u8054\u8d5b\uff088\uff09 2022-08-13 2022\u725b\u5ba2\u591a\u6821\uff087\uff09 2022-08-10 2022\u725b\u5ba2\u591a\u6821\uff086\uff09 2022-08-07 2022\u201c\u676d\u7535\u676f\u201d\u4e2d\u56fd\u5927\u5b66\u751f\u7b97\u6cd5\u8bbe\u8ba1\u8d85\u7ea7\u8054\u8d5b\uff086\uff09 2022-08-05 2022\u201c\u676d\u7535\u676f\u201d\u4e2d\u56fd\u5927\u5b66\u751f\u7b97\u6cd5\u8bbe\u8ba1\u8d85\u7ea7\u8054\u8d5b\uff085\uff09 2022-08-03 CodeTON Round 2 (Div.1 + Div.2) 2022-08-01 2022\u201c\u676d\u7535\u676f\u201d\u4e2d\u56fd\u5927\u5b66\u751f\u7b97\u6cd5\u8bbe\u8ba1\u8d85\u7ea7\u8054\u8d5b\uff081\uff09 2022-07-31 2022\u201c\u676d\u7535\u676f\u201d\u4e2d\u56fd\u5927\u5b66\u751f\u7b97\u6cd5\u8bbe\u8ba1\u8d85\u7ea7\u8054\u8d5b\uff083\uff09 2022-07-26 2022\u725b\u5ba2\u591a\u6821\uff083\uff09 2022-07-26 2022\u201c\u676d\u7535\u676f\u201d\u4e2d\u56fd\u5927\u5b66\u751f\u7b97\u6cd5\u8bbe\u8ba1\u8d85\u7ea7\u8054\u8d5b\uff082\uff09 2022-07-25 AtCoder Beginner Contest 254 2022-06-04 XXII Open Cup, Grand Prix of Korea 2022-05-05 XXII Open Cup, Grand Prix of Southeastern Europe 2022-05-03 XXI Open Cup, Grand Prix of Korea 2022-05-02 AtCoder Beginner Contest 249 2022-04-26 The 2021 ICPC Asia Kunming Regional Programming Contest 2022-04-25 AtCoder Beginner Contest 229 2022-04-19 Samara Farewell Contest 2020 (XXI Open Cup, Grand Prix of Samara) 2022-04-18 AtCoder Beginner Contest 248 2022-04-18 2021-2022 Russia Team Open, High School Programming Contest (VKOSHP XXII) 2022-04-15 AtCoder Beginner Contest 232 2022-04-15 NERC2022 2022-04-14 AtCoder Beginner Contest 236 2022-04-13 AtCoder Beginner Contest 246 2022-04-12 AtCoder Beginner Contest 235 2022-04-12 2022 \u6b66\u6c49\u5927\u5b66\u65b0\u751f\u8d5b 2022-04-11 AtCoder Beginner Contest 247 2022-04-11 AtCoder Beginner Contest 245 2022-04-11 AtCoder Beginner Contest 244 2022-04-11 AtCoder Beginner Contest 243 2022-04-11 AtCoder Beginner Contest 242 2022-04-11 AtCoder Beginner Contest 241 2022-04-11"},{"location":"atcoder/abc/abc-g/","title":"ABC G\u9898\u6c47\u603b","text":""},{"location":"atcoder/abc/abc-g/#abc-270-g-sequence-in-mod-p","title":"ABC 270 G - Sequence in mod P","text":"<p>\u9898\u610f\uff1a\u5e8f\u5217 \\(f\\) \u6ee1\u8db3 \\(f_0=s,f_{i}=a\\times f_{i-1}+b(i\\geq 1)\\pmod p\\)\u3002\u7ed9\u5b9a \\(a,b,s,p,g\\)\uff0c\u6c42\u6700\u5c0f\u7684 \\(n\\) \u6ee1\u8db3 \\(f_n=g\\)\u3002</p> <p>\u9650\u5236\uff1a \\(0\\leq a,b,s,p,g\\leq 10^9\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc270/tasks/abc270_g</p> <p>\u9898\u89e3\uff1aBSGS</p> <p>\u7528 \\(h_i(x)\\) \u8868\u793a\u5f53\u7b2c \\(0\\) \u9879\u4e3a \\(x\\) \u65f6\uff0c\u5e8f\u5217\u7b2c \\(i\\) \u9879\u7684\u503c\uff0c\u5219 \\(f_{n=pT-q}=g\\) \u7b49\u4ef7\u4e8e \\(h_{pT}(s)=h_q(g)\\)\u3002</p> <p>\u53d8\u6362 \\(f\\) \u7684\u9012\u63a8\u5f0f\uff0c\u8bbe \\(h_i(x)=a_i\\times x+b_i\\)\uff0c\u5219 \\(a_i=a_{i-1}\\times a,b_{i}=b_{i-1}\\times a+b\\)\u3002</p> <p>\u4ee4 \\(T=\\lceil\\sqrt{p}\\rceil\\) \uff0c\u9884\u5904\u7406 \\(h_q(g):h_1(g),h_2(g),\\cdots,h_T(g)\\)\uff0c\u7136\u540e\u54c8\u5e0c\u8868\u4e2d\u4f9d\u6b21\u5bfb\u627e \\(h_{pT}(s):h_T(s),h_{2T}(s),\\cdots,h_{T^2}(s)\\)\uff0c\u6700\u7ec8\u5f97\u5230 \\(n=pT-q\\)\u3002</p> <p>\u5df2\u77e5 \\(h_{iT}(s)\\)\uff0c\u5219 \\(h_{(i+1)T}(s)=h_{T}(h_{iT}(s))=a_T\\times h_{iT}(s)+b_{T}\\)\uff0c\u800c \\(a_T,b_T\\) \u53ef\u4ee5\u5728\u9884\u5904\u7406 \\(h_{q}(g)\\) \u65f6\u5f97\u5230\uff0c\u56e0\u6b64 \\(h\\) \u7684\u6bcf\u4e00\u9879\u90fd\u53ef\u4ee5 \\(O(1)\\) \u8ba1\u7b97\u3002</p> <p>\u5355\u7ec4\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a \\(O(\\sqrt{p})\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc270/submissions/35189357</p>"},{"location":"atcoder/abc/abc-g/#abc-239-g-builder-takahashi","title":"ABC 239 G - Builder Takahashi","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u5220\u9664\u70b9 \\(i\\) \u7684\u82b1\u8d39\u4e3a \\(c_i\\)\u3002\u53ef\u4ee5\u9009\u62e9 \\(2\\sim n-1\\) \u53f7\u70b9\u4e2d\u7684\u82e5\u5e72\u4e2a\u70b9\u5220\u9664\uff08\u5e76\u5220\u9664\u4e0e\u5176\u76f8\u8fde\u7684\u6240\u6709\u8fb9\uff09\uff0c\u4f7f\u5f97 \\(1\\) \u53f7\u70b9\u548c \\(n\\) \u53f7\u70b9\u4e0d\u8fde\u901a\u3002\u6c42\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 100\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc239/tasks/abc239_g</p> <p>\u9898\u89e3\uff1a\u6700\u5927\u6d41</p> <p>\u62c6\u70b9\u5e76\u5efa\u56fe\uff0c\u8fde\u8fb9 \\((i, i', c_i)\\)\u3002\u5bf9\u4e8e\u6bcf\u6761\u8fb9 \\((u,v)\\)\uff0c\u8fde\u8fb9 \\((u',v,\\infty),(v',u,\\infty)\\)\u3002</p> <p>\u6700\u5c0f\u82b1\u8d39\u4e3a \\(1'\\rightarrow n\\) \u7684\u6700\u5927\u6d41\uff0c\u88ab\u5220\u9664\u7684\u70b9\u4e3a\u6700\u5c0f\u5272\u4e0a\u7684\u5272\u8fb9\uff08\u663e\u7136\u8fd9\u4e9b\u8fb9\u90fd\u5f62\u5982 \\(i\\rightarrow i'\\)\uff09\u5bf9\u5e94\u7684\u70b9\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6700\u5c0f\u5272\u4e0a\u7684\u8fb9\u5e76\u4e0d\u7b49\u4ef7\u4e8e\u6d41\u91cf\u6d41\u6ee1\uff08flow=capcity\uff09\u7684\u8fb9\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(\\text{maxflow}(n, m))\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc239/submissions/35192622</p>"},{"location":"atcoder/abc/abc-g/#abc-237-g-range-sort-query","title":"ABC 237 G - Range Sort Query","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a \\(n\\) \u7684\u6392\u5217\uff0c\u6709 \\(q\\) \u6b21\u64cd\u4f5c\u3002\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u4e3a\u5c06\u5b50\u533a\u95f4 \\([l_i,r_i]\\) \u7684\u5143\u7d20\u5347\u5e8f/\u964d\u5e8f\u6392\u5e8f\u3002\u6c42\u7ecf\u8fc7 \\(q\\) \u6b21\u64cd\u4f5c\u540e\uff0c\u5143\u7d20 \\(x\\) \u7684\u4e0b\u6807\u662f\u591a\u5c11\u3002</p> <p>\u9650\u5236\uff1a\\(n,q\\leq 10^5\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc237/tasks/abc237_g</p> <p>\u9898\u89e3\uff1a\u7ebf\u6bb5\u6811</p> <p>\u533a\u95f4\u6392\u5e8f\u65f6\uff0c\u53ea\u9700\u8981\u77e5\u9053 \\(\\geq x\\)\uff08\u6216\u8005 \\(\\leq x\\)\uff09\u7684\u5143\u7d20\u4e2a\u6570\u540e\u5c06\u5de6\u53f3\u533a\u95f4\u5206\u522b\u8986\u76d6\u6210 \\(0/1\\) \uff0c\u5e76\u66f4\u65b0 \\(x\\) \u7684\u4f4d\u7f6e\u3002</p> <p>\u7ef4\u62a4\u4e00\u68f5\u533a\u95f4\u6c42\u548c\u3001\u533a\u95f4\u8986\u76d6\u7684\u7ebf\u6bb5\u6811\uff0c\u590d\u6742\u5ea6 \\(O(q\\log{n})\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc237/submissions/35194796</p>"},{"location":"atcoder/abc/abc-g/#abc-247-g-dream-team","title":"ABC 247 G - Dream Team","text":"<p>\u9898\u610f\uff1a\u6709 \\(n\\) \u4e2a\u4eba\uff0c\u7b2c \\(i\\) \u4e2a\u4eba\u5c5e\u4e8e \\(a_i\\) \u5927\u5b66\uff0c\u64c5\u957f\u5b66\u79d1\u4e3a \\(b_i\\)\uff0c\u80fd\u529b\u4e3a \\(c_i\\)\u3002\u6c42\u6070\u597d\u9009\u62e9 \\(1,2,\\cdots\\) \u4e2a\u4eba\u65f6\uff0c\u5728\u6ee1\u8db3\u4efb\u610f\u4e24\u4e2a\u4eba\u7684\u5927\u5b66\u4e0d\u540c\u4e14\u64c5\u957f\u5b66\u79d1\u4e0d\u540c\u7684\u6761\u4ef6\u4e0b\uff0c\u80fd\u529b\u503c\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 3\\times 10^4,1\\leq a_i,b_i\\leq 150\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc247/tasks/abc247_g</p> <p>\u9898\u89e3\uff1a\u8d39\u7528\u6d41</p> <p>\u6bcf\u6240\u5927\u5b66\u548c\u5b66\u79d1\u90fd\u53ea\u80fd\u88ab\u9009\u62e9\u4e00\u6b21\uff0c\u8fd9\u662f\u7ecf\u5178\u7684\u7f51\u7edc\u6d41\u6a21\u578b\u3002</p> <p>\\(s\\rightarrow a_i\\)\uff0c\u6d41\u91cf\u4e3a \\(1\\)\uff0c\u8d39\u7528\u4e3a \\(0\\)\uff1b\\(b_i\\rightarrow t\\)\uff0c\u6d41\u91cf\u4e3a \\(1\\) \uff0c\u8d39\u7528\u4e3a \\(0\\)\uff1b\\(a_i\\rightarrow b_i\\)\uff0c\u6d41\u91cf\u4e3a \\(1\\)\uff0c\u8d39\u7528\u4e3a \\(-c_i\\)\u3002</p> <p>\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\u6bcf\u589e\u5e7f\u4e00\u6b21\uff0c\u6d41\u91cf\u589e\u52a0 \\(1\\)\uff0c\u5373\u591a\u9009\u4e00\u4e2a\u4eba\uff0c\u7d2f\u8ba1\u7684\u603b\u8d39\u7528\u5373\u4e3a\u6b64\u65f6\u7684\u80fd\u529b\u503c\u4e4b\u548c\u3002</p> <p>\u6ce8\u610f\u8981\u7528\u589e\u5e7f\u7684\u65b9\u5f0f\u8dd1\u8d39\u7528\u6d41\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u4ece \\(s\\) \u589e\u52a0\u4e00\u6761\u8fb9\u5bb9\u91cf\u4e3a \\(1\\) \u7684\u8fb9\u518d\u91cd\u65b0\u8dd1pushRelabel\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc247/submissions/35195856</p>"},{"location":"atcoder/abc/abc-g/#abc-238-g-cubic","title":"ABC 238 G - Cubic?","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u957f\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\)\uff0c\u6709 \\(q\\) \u4e2a\u8be2\u95ee\u3002\u7b2c \\(i\\) \u6b21\u8be2\u95ee\u7ed9\u5b9a \\(l_i,r_i\\)\uff0c\u67e5\u8be2 \\(\\prod\\limits_{j=l_i}^{r_i}{a_j}\\) \u662f\u5426\u662f\u7acb\u65b9\u6570\u3002</p> <p>\u9650\u5236\uff1a\\(n,q\\leq 2\\times 10^5,1\\leq a_i\\leq 10^6\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc238/tasks/abc238_g</p> <p>\u9898\u89e31\uff1a\u83ab\u961f</p> <p>\u5bf9 \\(a_i\\) \u505a\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u4e0d\u96be\u53d1\u73b0\u81f3\u591a \\(8\\) \u4e2a\u8d28\u56e0\u6570\uff08\\(2\\times 3\\times 5\\times 7\\times 11\\times 13\\times 17\\times 19=9,699,690&gt;1,000,000\\)\uff09\u3002\u800c\u7acb\u65b9\u6570\u53ea\u9700\u8981\u6ee1\u8db3\u6bcf\u4e2a\u8d28\u56e0\u5b50\u7684\u5e42\u6307\u6570\u90fd\u4e3a \\(3\\) \u7684\u500d\u6570\u3002\u56e0\u6b64\u53ef\u4ee5\u7528\u83ab\u961f\u7ef4\u62a4\u533a\u95f4\u4e2d\u6bcf\u4e2a\u8d28\u56e0\u5b50\u7684\u5e42\u6307\u6570\u3002\u590d\u6742\u5ea6 \\(O(q\\sqrt{n})\\)\u3002</p> <p>\u5176\u5b9e\u83ab\u961f\u7684\u90e8\u5206\u8dd1\u7684\u5e76\u4e0d\u6162\uff0c\u4f46\u5982\u679c\u5728\u9884\u5904\u7406\u7684\u65f6\u5019\u66b4\u529b\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u90a3\u5c31\u5bc4\u4e86\uff0c\u9700\u8981\u7528\u57c3\u6c0f\u7b5b\u9884\u5904\u7406\u6bcf\u4e2a\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u6570\uff0c\u5373\u53ef\u5b9e\u73b0 \\(O(\\log{a_i})\\) \u5206\u89e3\u3002</p> <p>\u9898\u89e32\uff1a\u54c8\u5e0c</p> <p>\u5206\u6790\u540c\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u662f\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u5e42\u6307\u6570\u3002\u4e0d\u96be\u53d1\u73b0\u4e0d\u540c\u8d28\u56e0\u5b50\u4e4b\u95f4\u4e92\u4e0d\u5e72\u6270\u3002\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u7684\u65b9\u5f0f\u7ef4\u62a4\u6bcf\u4e2a\u524d\u7f00\u533a\u95f4\u7684 \\(\\sum\\limits_{p\\in \\text{prime}}{p\\times (cnt[p]\\bmod 3)}\\) \uff0c\u5176\u4e2d \\(cnt[p]\\) \u4e3a\u8d28\u56e0\u5b50 \\(p\\) \u7684\u51fa\u73b0\u6b21\u6570\u3002\u82e5\u4e24\u524d\u7f00\u503c\u76f8\u7b49\uff0c\u5219\u8bf4\u660e\u8be5\u533a\u95f4\u4e2d\u6240\u6709\u8d28\u56e0\u5b50\u7684\u5e42\u6307\u6570\u90fd\u662f \\(3\\) \u7684\u500d\u6570\u3002\u590d\u6742\u5ea6 \\(O(n\\log{a_i})\\)\u3002</p> <p>\u7531\u4e8e\u672c\u65b9\u6cd5\u590d\u6742\u5ea6\u4f4e\uff0c\u56e0\u6b64\u5373\u4f7f\u4f60\u66b4\u529b\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u4ee3\u7801\u8dd1\u7684\u4e5f\u4e0d\u6162\u3002\u3002</p> <p>\u4ee3\u78011\uff1ahttps://atcoder.jp/contests/abc238/submissions/35207997</p> <p>\u4ee3\u78012\uff1ahttps://atcoder.jp/contests/abc238/submissions/35208067</p>"},{"location":"atcoder/abc/abc-g/#abc-267-g-increasing-k-times","title":"ABC 267 G - Increasing K Times","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u957f\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\)\uff0c\u6c42\u6709\u591a\u5c11\u4e2a \\(1\\sim n\\) \u7684\u6392\u5217 \\(p\\) \uff0c\u6ee1\u8db3\u6070\u597d\u5b58\u5728 \\(k\\) \u4e2a \\(i\\) \u6ee1\u8db3 \\(a_{p_i}&lt;a_{p_{i+1}}\\)\u3002\u7b54\u6848\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 5000\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc267/tasks/abc267_g</p> <p>\u9898\u89e3\uff1aDP</p> <p>\u95ee\u9898\u7b49\u4ef7\u4e8e\u6c42 \\(a\\) \u6709\u591a\u5c11\u79cd\u6392\u5217\u65b9\u5f0f \\(b\\)\uff0c\u6ee1\u8db3\u5b58\u5728 \\(k\\) \u4e2a\u300c\u6b63\u5e8f\u5bf9\u300d\uff08 \\(b_i&lt;b_{i+1}\\)\uff09\u3002\u8003\u8651\u5c06 \\(a\\) \u5347\u5e8f\u6392\u5e8f\u540e\uff0c\u9010\u4e2a\u63d2\u5165\u7a7a\u5e8f\u5217\u4e2d\uff0c\u5219\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u65b0\u5e8f\u5217\u7684\u300c\u6b63\u5e8f\u5bf9\u300d\u4e2a\u6570\u8981\u4e48\u4e0d\u53d8\uff0c\u8981\u4e48\u589e\u52a0 \\(1\\)\u3002</p> <p>\u5c06 \\(a_i\\) \u63d2\u5165\u5728 \\(b_j,b_{j+1}\\) \u4e4b\u95f4\uff08\u4ee4 \\(b_{-1}=b_{|b|+1}=0\\)\uff09\uff0c\u6839\u636e\u5927\u5c0f\u5173\u7cfb\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\\(a_i&gt;b_j,b_j\\geq b_{j+1}\\)\uff1a\u4e2a\u6570\u52a0\u4e00</li> <li>\u5176\u4ed6\uff1a\u4e2a\u6570\u4e0d\u53d8</li> </ul> <p>\u8bb0 \\(f(i,j)\\)  \u4e3a\u524d \\(i\\) \u4e2a\u6570\uff0c\u7ec4\u6210 \\(j\\) \u4e2a\u300c\u6b63\u5e8f\u5bf9\u300d\u7684\u65b9\u6848\u6570\u3002\uff08\u8bb0 \\(cnt[a_i]\\) \u4e3a \\(a_i\\) \u7684\u5f53\u524d\u51fa\u73b0\u6b21\u6570\uff09</p> <ul> <li>\\(f(i,j)\\rightarrow f(i+1,j)\\)\uff1a\u63d2\u5728\u4e0e \\(a_i\\) \u76f8\u7b49\u7684\u6570 / \\(b_j&lt;b_{j+1}\\) \u4e4b\u95f4\uff0c\u5171 \\(cnt[a_i]+j+1\\) \u79cd\u65b9\u5f0f</li> <li>\\(f(i,j)\\rightarrow f(i+1,j+1)\\)\uff1a\u5171 \\(i-j-cnt[a_i]\\) \u79cd\u65b9\u5f0f</li> </ul> <p>\u7b54\u6848\u4e3a \\(f(n,k)\\)\uff0c\u590d\u6742\u5ea6 \\(O(nk)\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc267/submissions/35214949</p>"},{"location":"atcoder/abc/abc-g/#abc-256-g-black-and-white-stones","title":"ABC 256 G - Black and White Stones","text":"<p>\u9898\u610f\uff1a\u5c06\u82e5\u5e72\u4e2a\u9ed1\u767d\u77f3\u5b50\u6446\u6210\u6bcf\u6761\u8fb9\u4e0a\u6709 \\(d+1\\) \u4e2a\u77f3\u5b50\u7684 \\(n\\) \u8fb9\u5f62\uff0c\u8981\u6c42\u6bcf\u6761\u8fb9\u4e0a\u7684\u767d\u8272\u77f3\u5b50\u4e2a\u6570\u76f8\u540c\uff0c\u6c42\u65b9\u6848\u6570\u3002\u7b54\u6848\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 10^{14}, d\\leq 10^4\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc256/tasks/abc256_g</p> <p>\u9898\u89e3\uff1a\u77e9\u9635\u5feb\u901f\u5e42</p> <p>\u679a\u4e3e\u6bcf\u6761\u8fb9\u7684\u767d\u8272\u77f3\u5b50\u6570 \\(m\\)\uff0c\u8bbe \\(f^m_{0/1}(i,0/1)\\)\uff0c\u8868\u793a\u5df2\u7ecf\u653e\u7f6e\u4e86 \\(i\\) \u6761\u8fb9\uff0c\u5176\u4e2d\u7b2c \\(1\\) \u6761\u8fb9\u7684\u9996\u548c\u7b2c \\(i\\) \u8fb9\u7684\u5c3e\u5206\u522b\u4e3a\u9ed1/\u767d\u77f3\u5b50\u7684\u65b9\u6848\u6570\uff0c\u5219\u7b54\u6848\u4e3a \\(\\sum\\limits_{m=0}^{d+1}{f^m_1(n,1)+f^m_0(n,0)}\\)\u3002</p> <p>\u5219\u8f6c\u79fb\u65b9\u7a0b \\(f^m_*(i)=a^m\\times f^m_*(i-1)\\) \u4e3a\uff1a $$ \\begin{bmatrix} f(i, 0)\\ f(i, 1)\\ \\end{bmatrix} = \\begin{bmatrix} {d-1\\choose m-2}\\ {d-1\\choose m-1}\\ {d-1\\choose m-1}\\ {d-1\\choose m}\\ \\end{bmatrix}\\times \\begin{bmatrix} f(i-1, 0)\\ f(i-1, 1)\\ \\end{bmatrix} $$ \u8fd9\u4e2a\u65b9\u7a0b\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u8f6c\u79fb\uff0c\u603b\u590d\u6742\u5ea6 \\(O(d\\times \\log{n})\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc256/submissions/35216315</p>"},{"location":"atcoder/abc/abc-g/#abc-246-g-game-on-tree-3","title":"ABC 246 G - Game on Tree 3","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u9664\u6839\u8282\u70b9\u5916\u7684\u4efb\u610f\u70b9 \\(i\\) \u90fd\u6709\u6743\u503c \\(a_i\\)\u3002Alice\u548cBob\u8f6e\u6d41\u64cd\u4f5c\uff0c\u4ece\u6839\u8282\u70b9\u51fa\u53d1\u3002\u5728\u6bcf\u4e2a\u56de\u5408\u4e2d\uff0cAlice\u9996\u5148\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u5c06\u5176\u6743\u503c\u7f6e\u4e3a \\(0\\)\uff0c\u7136\u540eBob\u4ece\u5f53\u524d\u70b9\u79fb\u52a8\u5230\u5b83\u7684\u4efb\u610f\u4e00\u4e2a\u5b50\u8282\u70b9\u4e2d\uff0c\u5e76\u53ef\u4ee5\u9009\u62e9\u7acb\u523b\u7ed3\u675f\u6e38\u620f\uff08\u82e5\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u6e38\u620f\u81ea\u52a8\u7ed3\u675f\uff09\u3002\u6e38\u620f\u5f97\u5206\u662f\u7ed3\u675f\u6e38\u620f\u524d\u4ed6\u6240\u5728\u70b9\u7684\u6743\u503c\uff0cAlice\u60f3\u8981\u6700\u5c0f\u5316\uff0cBob\u60f3\u8981\u6700\u5927\u5316\u3002\u5982\u679c\u53cc\u65b9\u5747\u91c7\u53d6\u6700\u4f18\u7b56\u7565\uff0c\u6c42\u6700\u7ec8\u5f97\u5206\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 2\\times 10^5,1\\leq a_i\\leq 10^9\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc246/tasks/abc246_g</p> <p>\u9898\u89e31\uff1a\u4e8c\u5206\u7b54\u6848+\u6811\u5f62DP</p> <p>\u9996\u5148\u4e8c\u5206\u7b54\u6848 \\(x\\)\uff0c\u5c06\u6743\u503c\u5c0f\u4e8e \\(x\\) \u7684\u70b9\u7684\u6743\u503c \\(b_i\\) \u7f6e\u4e3a \\(0\\)\uff0c\u5426\u5219\u7f6e\u4e3a \\(1\\)\u3002\u95ee\u9898\u53d8\u6210Bob\u80fd\u5426\u8fbe\u5230\u4e00\u4e2a\u6743\u503c\u4e3a \\(1\\) \u7684\u70b9\u3002</p> <p>\u8bbe \\(f(x)\\) \u8868\u793a\u5982\u679c\u4e0b\u4e00\u6b65\u8d70\u5230 \\(x\\) \u70b9\uff0c\u5728\u6b64\u4e4b\u524d\uff0cAlice\u9700\u8981\u81f3\u5c11\u591a\u5c11\u6b21\u7f6e \\(0\\) \u624d\u80fd\u963b\u6b62\u672a\u6765Bob\u5230\u8fbe\u6743\u503c\u4e3a \\(1\\) \u7684\u70b9\u3002\u8f6c\u79fb\u65b9\u7a0b\u4e3a \\(f(x)=\\max(-1+\\sum\\limits_{y\\in son[y]}{f(v)},0)+b_x\\)\uff0c\u6700\u540e\u53ea\u9700\u8981\u5224\u65ad \\(f(1)\\) \u662f\u5426\u4e3a \\(0\\)\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n\\log{a_i})\\)\u3002</p> <p>\u9898\u89e32\uff1a\u7ebf\u6bb5\u6811</p> <p>\u540c\u6837\u662f\u81ea\u5e95\u5411\u4e0a\u8003\u8651\u3002\u8d2a\u5fc3\u5730\u60f3\uff0c\u5f53\u524d\u5728 \\(x\\) \u70b9\uff0cAlice\u4e0b\u4e00\u56de\u5408\u4f1a\u7f6e \\(0\\) \u7684\u70b9\u5e94\u8be5\u662f \\(x\\) \u5b50\u6811\u4e2d\uff08\u4e0d\u5305\u62ec \\(x\\)\uff09\u5269\u4f59\u70b9\u4e2d\u7684\u6700\u5927\u503c\u3002\u56e0\u6b64\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5b50\u6811\u6700\u5927\u503c\uff0c\u81ea\u5e95\u5411\u4e0a\u8f6c\u79fb\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n\\log{n})\\)\u3002</p> <p>\u4ee3\u78011\uff1ahttps://atcoder.jp/contests/abc246/submissions/35227917</p> <p>\u4ee3\u78012\uff1ahttps://atcoder.jp/contests/abc246/submissions/me</p>"},{"location":"atcoder/abc/abc-g/#abc-234-g-divide-a-sequence","title":"ABC 234 G - Divide a Sequence","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u957f\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\)\uff0c\u5171\u6709 \\(2^n\\) \u79cd\u65b9\u5f0f\u5c06\u5176\u5212\u5206\u6210\u957f\u5ea6\u4e3a \\(m=1,2,\\cdots,n\\) \u7684\u975e\u7a7a\u8fde\u7eed\u5b50\u5e8f\u5217 \\(b_1,b_2,\\cdots,b_m\\)\u3002\u5bf9\u4e8e\u4efb\u610f\u5212\u5206\uff0c\u5b9a\u4e49\u5176\u6743\u503c\u4e3a \\(\\prod{\\max(b_i)-\\min(b_i)}\\)\u3002\u6c42\u8fd9 \\(2^n\\) \u4e2a\u5212\u5206\u7684\u6743\u503c\u4e4b\u548c\uff0c\u7b54\u6848\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 3\\times 10^5\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc234/tasks/abc234_g</p> <p>\u9898\u89e3\uff1a\u5355\u8c03\u6808</p> <p>\\(f(i)\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u6570\u7684\u6240\u6709\u5212\u5206\u7684\u6743\u503c\u4e4b\u548c\uff0c\u5219 \\(f(i)=\\sum\\limits_{j&lt;i}{f(j)\\times (\\max\\limits_{k=j+1}^{i}{a_k}-\\min\\limits_{k=j+1}^{i}{a_k})}\\)\u3002</p> <p>\u5c06\u540e\u5f0f\u7684 \\(\\max\\) \u548c \\(\\min\\) \u62c6\u5f00\u7ef4\u62a4\uff0c\u663e\u7136 \\([1,i-1]\\) \u53ef\u4ee5\u5212\u5206\u51fa\u82e5\u5e72\u6bb5\u8fde\u7eed\u533a\u95f4\uff0c\u5176\u533a\u95f4 \\(\\max\\) / \\(\\min\\) \u662f\u76f8\u7b49\u7684\uff0c\u4e14\u533a\u95f4\u7684\u4ece\u5de6\u5230\u53f3 \\(\\max/\\min\\) \u503c\u662f\u9012\u51cf/\u9012\u589e\u7684\u3002</p> <p>\u56e0\u6b64\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u8fd9\u4e9b \\(\\max/\\min\\) \u7684\u533a\u95f4 \\(f\\) \u503c\u4e4b\u548c\uff0c\u5f39\u51fa\u6808\u9876\u7684\u540c\u65f6\u8ba1\u7b97\u51fa\u5b83\u7684\u8d21\u732e\u589e\u91cf\u3002\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc234/submissions/35230774</p>"},{"location":"atcoder/abc/abc-g/#abc-223-g-vertex-deletion","title":"ABC 223 G - Vertex Deletion","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u70b9\u6ee1\u8db3\u5728\u5220\u9664\u5b83\u4e4b\u540e\uff0c\u6700\u5927\u5339\u914d\u6570\u4e0d\u53d8\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 2\\times 10^5\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc223/tasks/abc223_g</p> <p>\u9898\u89e3\uff1a\u6362\u6839DP</p> <p>\u6c42\u6811\u7684\u6700\u5927\u5339\u914d\u6709 \\(O(n)\\) \u7684\u6811\u5f62DP\uff0c\u5373 \\(f[x][0/1]\\) \u8868\u793a \\(x\\) \u5b50\u6811\u4e2d\u7684\u6700\u5927\u5339\u914d\u6570\uff0c\u4e14 \\(x\\) \u662f\u5426\u4e0e\u5b83\u7236\u4eb2\u8fde\u8fb9\u3002</p> <p>\u8f6c\u79fb\u65b9\u7a0b\u4e3a \\(f[x][1]=\\sum\\limits_{y\\in son[x]}{f[y][0]},f[x][0]=\\sum\\limits_{y\\in son[x]}{f[y][0]}+\\max\\limits_{y\\in son[x]}{f[y][1]+1-f[y][0]}\\)\u3002</p> <p>\u540c\u65f6\u8bb0\u5f55 \\(x\\) \u7684\u5b50\u8282\u70b9\u4e2d\uff0c\\(f[y][1]+1-f[y][0]\\) \u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u6765\u6e90\uff0c\u8bb0\u4e3a \\(from[x][0/1]\\)\u3002</p> <p>\u6362\u6839DP\uff0c \\(x\\rightarrow y\\) \u65f6\u7ef4\u62a4 \\(f[x][*],f[y][*],from[x][*],from[y][*]\\) \u7684\u53d8\u5316\u503c\u5373\u53ef\uff0c\u5176\u4ed6\u70b9\u7684\u503c\u4e0d\u53d8\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc223/submissions/35242470</p>"},{"location":"atcoder/abc/abc-g/#abc-230-g-gcd-permutation","title":"ABC 230 G - GCD Permutation","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a \\(n\\) \u7684\u6392\u5217 \\(p\\)\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u6570\u5bf9 \\((i,j)(i\\leq j)\\) \u6ee1\u8db3 \\(\\gcd(i,j)\\not=1\\) \u4e14 \\(\\gcd(p_i,p_j)\\not=1\\)\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 2\\times 10^5\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc230/tasks/abc230_g</p> <p>\u9898\u89e3\uff1a\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14</p> <p>\u8bbe \\(f(a,b;i,j)\\) \u8868\u793a\u3010 \\(i,j\\) \u662f \\(a\\) \u7684\u500d\u6570\uff0c\u4e14 \\(p_i,p_j\\) \u662f \\(b\\) \u7684\u500d\u6570\u3011\u3002</p> <p>\u7531 \\(\\sum\\limits_{d|n}\\tilde\\mu(d)=[n\\geq 2]\\)\uff0c\u679a\u4e3e\u4f4d\u7f6e \\(i,j\\) \uff0c\u5e76\u679a\u4e3e\u516c\u56e0\u6570 \\(a,b\\)\uff0c\u5219\u7b54\u6848\u4e3a \\(\\sum_\\limits{1\\leq i\\leq j\\leq n}\\sum\\limits_{a=1}^{n}\\sum\\limits_{b=1}^{n}{\\tilde\\mu(a)\\tilde\\mu(b)f(a,b;i,j)}\\)\uff0c\u5176\u4e2d \\(\\mu(a)\\) \u4e3a\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u3002</p> <p>\u8bb0 \\(h(a,b)\\) \u4e3a\u6ee1\u8db3 \\(i|a\\) \u4e14 \\(p_i|b\\) \u7684 \\(i\\) \u7684\u4e2a\u6570\uff0c\u5219 \\(\\sum\\limits_{1\\leq i\\leq j\\leq n}{f(a,b;i,j)}=\\frac{h(a,b)(h(a,b)+1)}{2}\\)\uff0c\u7b54\u6848\u5316\u7b80\u4e3a \\(\\sum\\limits_{a=1}^{n}\\sum\\limits_{b=1}^{n}\\tilde\\mu(a)\\tilde\\mu(b)\\frac{h(a,b)(h(a,b)+1)}{2}\\)\u3002</p> <p>\u5148\u679a\u4e3e \\(a\\)\uff0c\u65e0\u9700\u679a\u4e3e \\(b\\)\u3002\u6b64\u65f6\u6ee1\u8db3 \\(i|a\\) \u7684\u6570\u4e3a \\(p_{a},p_{2a},\\cdots,p_{ka}\\)\uff0c\u5219 \\(b\\) \u9700\u8981\u662f\u4ed6\u4eec\u7684\u56e0\u6570\u4e4b\u4e00\u4e14 \\(\\tilde\\mu(b)\\not=0\\)\u3002\u56e0\u6b64\u5bf9\u4e8e \\(p_{ia}\\) \uff0c\u904d\u5386\u5b83\u7684\u6240\u6709 \\(\\tilde\\mu(d)\\not=0\\) \u7684\u56e0\u5b50 \\(d\\)\uff0c\u5e76\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\u3002</p> <p>\u679a\u4e3e\u7684\u6570\u603b\u4e2a\u6570 \\(\\{p_{ia}\\}=\\sum\\limits_{i=1}^{n}{\\lfloor\\frac{n}{i}\\rfloor}=O(n\\log{n})\\) \uff0c\u800c \\(\\leq 2\\times 10^5\\) \u7684\u6570\u7684\u8d28\u56e0\u5b50\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7 \\(7\\) \u4e2a\uff0c\u56e0\u800c \\(\\tilde\\mu\\not=0\\) \u7684\u56e0\u6570\u4e2a\u6570\u4e0d\u8d85\u8fc7 \\(2^7\\) \u4e2a\uff0c\u603b\u590d\u6742\u5ea6 \\(O(63n\\log{n})\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc230/submissions/35244167</p>"},{"location":"atcoder/abc/abc-g/#abc-236-g-good-vertices","title":"ABC 236 G - Good Vertices","text":"<p>\u9898\u610f\uff1a\\(n\\) \u4e2a\u70b9\u7684\u6709\u5411\u56fe\uff0c\u5728\u7b2c \\(0\\) \u79d2\u65f6\u6ca1\u6709\u8fb9\u3002\u5728\u7b2c \\(i(1\\leq i\\leq t)\\) \u79d2\uff0c\u52a0\u5165\u6709\u5411\u8fb9 \\(u_i\\rightarrow v_i\\)\u3002\u5bf9\u4e8e\u4efb\u610f\u70b9 \\(t\\)\uff0c\u6c42\u957f\u5ea6\u6070\u597d\u4e3a \\(L\\) \u6761\u8fb9\u7684\u8def\u5f84 \\(1\\to t\\) \u7684\u6700\u65e9\u51fa\u73b0\u65f6\u95f4\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 100, t\\leq n^2,L\\leq 10^9\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc236/tasks/abc236_g</p> <p>\u9898\u89e3\uff1a\u77e9\u9635\u5feb\u901f\u5e42</p> <p>\u8bbe \\(f(i,j)\\) \u8868\u793a\u5230\u8fbe\u7ecf\u8fc7\u6070\u597d \\(i\\) \u6761\u8fb9\u5230\u8fbe \\(j\\) \u70b9\u7684\u6240\u6709\u8def\u5f84\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u8fb9\u7684\u6700\u5c0f\u503c\uff0c\u7b54\u6848\u4e3a \\(f(L,1),\\cdots,f(L,n)\\)\u3002</p> <p>\u8f6c\u79fb\u65b9\u7a0b\uff1a\\(f(i,j)=\\min\\limits_{1\\leq j\\leq n}\\{\\max(f(i-1,j),W(j,i))\\}\\)\uff0c\u5176\u4e2d \\(W(j,i)\\) \u4e3a\u8fb9 \\(j\\rightarrow i\\) \u51fa\u73b0\u7684\u65f6\u95f4\uff0c\u82e5\u4e0d\u5b58\u5728\u7f6e\u4e3a \\(\\infty\\)\u3002</p> <p>\u521d\u503c \\(f(0,1)=0,f(0,i)=\\infty(2\\leq i\\leq n)\\)\u3002</p> <p>\u5c06 \\(\\max\\) \u5b9a\u4e49\u4e3a \\(+\\)\uff0c\\(\\min\\) \u5b9a\u4e49\u4e3a \\(\\times\\)\uff0c\u5219\u4e0a\u5f0f\u53ef\u4ee5\u5199\u6210\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f \\(f_{n\\times 1}(i)=W_{n\\times n}\\times f_{n\\times 1}(i-1)\\)\u3002</p> <p>\u7531\u4e8e \\(\\max,\\min\\) \u6ee1\u8db3\u5206\u914d\u5f8b\u3001\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff0c\u56e0\u6b64\u53ef\u4ee5\u6539\u53d8\u8fd0\u7b97\u987a\u5e8f\uff0c\u5bf9\u8fd9\u4e2a\u5f0f\u5b50\u505a\u77e9\u9635\u5feb\u901f\u5e42\uff0c\u5f97\u5230 \\(f(L,i)=W^L(i,1)\\)\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n^3\\log{L})\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc236/submissions/35326063</p>"},{"location":"atcoder/abc/abc-g/#abc-249-g-xor-cards","title":"ABC 249 G - Xor Cards","text":"<p>\u9898\u610f\uff1a\u6709 \\(n\\) \u5f20\u5361\u7247\uff0c\u7b2c \\(i\\) \u5f20\u5361\u7247\u6b63\u9762\u5199\u7740 \\(a_i\\)\uff0c\u80cc\u9762\u5199\u7740 \\(b_i\\)\u3002\u73b0\u5728\u9009\u62e9\u82e5\u5e72\u5f20\u5361\u7247\uff0c\u6c42\u5728\u6ee1\u8db3\u6b63\u9762\u7684\u5f02\u6216\u548c\u4e0d\u8d85\u8fc7 \\(k\\) \u7684\u6761\u4ef6\u4e0b\uff0c\u80cc\u9762\u7684\u5f02\u6216\u548c\u7684\u6700\u5927\u503c\u3002</p> <p>\u9650\u5236\uff1a \\(n\\leq 1000,0\\leq a_i,b_i,k\\leq 2^{30}\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc249/tasks/abc249_g</p> <p>\u9898\u89e3\uff1a\u7ebf\u6027\u57fa</p> <p>\u6839\u636e\u7ebf\u6027\u57fa\u5b9a\u7406\uff0c\\(n\\) \u4e2a\u6570\u7684\u4efb\u610f\u5b50\u96c6\u7684\u5f02\u6216\u548c\u53ea\u9700\u8981 \\(O(\\log{V})\\) \u4e2a\u6570\u7684\u7ebf\u6027\u57fa\u5373\u53ef\u8868\u793a\u3002</p> <p>\u5bf9\u4e8e\u4e24\u5f20\u5361\u7247 \\((a,b),(c,d)\\)\uff0c\u5b83\u4eec\u7b49\u4ef7\u4e8e \\((a\\oplus c,b\\oplus d),(c,d)\\)\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u4e00\u8fb9\u6784\u9020 \\(a_i\\) \u7684\u7ebf\u6027\u57fa \\(la\\)\uff0c\u5e76\u628a\u6240\u6709\u80fd\u7528\u7ebf\u6027\u57fa\u8868\u793a\u7684\u5361\u7247 \\((a_i,b_i)\\) \u8f6c\u6362\u6210 \\((0,b_i')\\)\u3002</p> <p>\u6b64\u65f6\u5269\u4e0b\u82e5\u5e72\u4e2a \\((0,b_i')\\) \u548c\u4e00\u4e2a\u7ebf\u6027\u57fa \\(la\\)\uff0c\u524d\u8005\u53ef\u4ee5\u518d\u6784\u9020\u51fa\u4e00\u4e2a\u5bf9 \\(k\\) \u7684\u9650\u5236\u65e0\u5f71\u54cd\u7684\u7ebf\u6027\u57fa \\(lb\\)\u3002</p> <p>\u6b64\u65f6\u8003\u8651\u5982\u4f55\u6ee1\u8db3 \\(k\\) \u7684\u9650\u5236\u3002</p> <p>\u679a\u4e3e \\(i\\)\uff0c\u7528 \\(la\\) \u6784\u9020\u51fa\u524d \\(i-1\\) \u4f4d\u4e0e \\(k\\) \u76f8\u540c\uff0c\u4e14\u5f53\u524d\u4f4d\u4e3a \\(0\\) \u800c \\(k_{(i)}=1\\) \u7684\u72b6\u6001\uff0c\u6b64\u65f6\u4efb\u610f\u53d6\u540e\u9762\u7684\u4f4d\u90fd\u6ee1\u8db3\u9650\u5236\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u540e\u9762\u4f4d\u7684 \\(b_i\\) \u63d2\u5165 \\(lb\\) \u4e2d\uff0c\u5e76\u67e5\u8be2\u5f02\u6216\u6700\u5927\u503c\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n\\log{V}+\\log^3{V})\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc249/submissions/35388300</p>"},{"location":"atcoder/abc/abc-g/#abc-248-g-gcd-cost-on-the-tree","title":"ABC 248 G - GCD cost on the tree","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u70b9 \\(i\\) \u6709\u70b9\u6743 \\(a_i\\)\u3002\u5b9a\u4e49 \\(f(u,v)\\) \u4e3a \\(u,v\\) \u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u70b9\u6570\u4e0e\u6700\u77ed\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u6743\u503c\u7684 \\(\\gcd\\) \u7684\u4e58\u79ef\u3002\u6c42 \\(\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=i+1}^{n}{f(i,j)}\\)\u3002</p> <p>\u9650\u5236\uff1a\\(1\\leq n,a_i\\leq 10^5,\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc248/tasks/abc248_g</p> <p>\u9898\u89e3\uff1a\u6811\u5f62DP</p> <p>\u5e94\u8be5\u7b97\u662f\u4e2a\u66b4\u529b\uff0c\u4e5f\u4e0d\u77e5\u9053\u590d\u6742\u5ea6\u5bf9\u4e0d\u5bf9\uff0c\u4e0d\u8fc7\u8dd1\u7684\u98de\u5feb\u3002</p> <p>\u7ef4\u62a4 \\(f(i)=\\{(x,y)\\}\\) \uff0c\u8868\u793a \\(i\\) \u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u70b9\uff0c\u4ece \\(i\\) \u51fa\u53d1\uff0c\u8def\u5f84 \\(\\gcd=x\\) \u7684\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u4e3a \\(y\\)\u3002</p> <p>\u90a3\u4e48\u5408\u5e76 \\(f(i)\\) \u548c\u5176\u5b50\u8282\u70b9 \\(f(j)\\) \u65f6\uff0c\u53ea\u9700\u8981\u5206\u522b\u679a\u4e3e \\((x_1,y_1)\\in f(i)\\) \u548c \\((x_2,y_2)\\in f(j)\\)\uff0c\u8d21\u732e\u4e3a \\([y_1\\times x_2+x_1\\times y_2-(2\\times dep(i) - 1)\\times (y_1\\times y_2)] \\times \\gcd(x_1,x_2)\\)\u3002</p> <p>\u6ce8\u610f\u5230\uff0c\u867d\u7136\u770b\u8d77\u6765 \\(x\\) \u7684\u53d6\u503c\u6709\u5f88\u591a\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u81f3\u591a\u53ea\u6709 \\(d(a_i)\\) \u4e2a\u3002\u800c\u6839\u636e\u7ecf\u5178\u8001\u56fe\uff0c\\(\\max\\{d(10^5)\\}=128\\)\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u4e0a\u754c\u662f \\(O(128^2\\times n)\\)\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fdc\u8fdc\u8dd1\u4e0d\u6ee1\u3002</p> <p></p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc248/submissions/35390296</p>"},{"location":"atcoder/abc/abc-g/#abc-225-g-x","title":"ABC 225 G - X","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a \\(n\\times m\\) \u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u683c\u5b50\u6709\u6743\u503c \\(w(i,j)\\)\u3002\u73b0\u5728\u53ef\u4ee5\u9009\u62e9\u82e5\u5e72\u4e2a\u683c\u5b50\u753b\"X\"\uff0c\u5373\u4e24\u6761\u5bf9\u89d2\u7ebf\u3002\u6700\u540e\u7684\u5f97\u5206\u4e3a\u6240\u6709\u753b\"X\"\u7684\u683c\u5b50\u7684\u6743\u503c\u4e4b\u548c- \\(C\\times\\) \u9700\u8981\u753b\u7684\u5bf9\u89d2\u7ebf\u6570\u91cf\uff08\u6bcf\u6b21\u753b\u5bf9\u89d2\u7ebf\u53ef\u4ee5\u7a7f\u8d8a\u591a\u4e2a\u683c\u5b50\uff09\u3002\u8981\u6c42\u6bcf\u4e2a\u683c\u5b50\u8981\u4e48\u753b\"X\"\uff0c\u8981\u4e48\u4ec0\u4e48\u90fd\u6ca1\u753b\u3002\u6c42\u5f97\u5206\u7684\u6700\u5927\u503c\u3002</p> <p>\u9650\u5236\uff1a\\(n,m\\leq 100\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc225/tasks/abc225_g</p> <p>\u9898\u89e3\uff1a\u6700\u5927\u6d41</p> <p>\u73b0\u5728\u7684\u5f97\u5206\u662f\u4e24\u90e8\u5206\u7684\u5dee\uff0c\u4e0d\u592a\u597d\u7b97\u3002\u5148\u5047\u8bbe\u6240\u6709\u683c\u5b50\u90fd\u88ab\u753b\"X\"\u83b7\u5f97 \\(\\sum{w(i,j)}\\) \u7684\u5206\u6570\uff0c\u518d\u51cf\u53bb\u4ed8\u51fa\u4ee3\u4ef7\u7684\u6700\u5c0f\u503c\uff0c\u5982\u6b64\u5f97\u5230\u7684\u7ed3\u679c\u5e94\u4e0e\u7b54\u6848\u76f8\u540c\u3002</p> <p>\u5148\u8003\u8651\u53f3\u4e0b\u65b9\u5411\u7684\u5bf9\u89d2\u7ebf\uff0c\u5b83\u7684\u4ee3\u4ef7\u5e94\u8be5\u662f \\(C\\times\\) \u3010 \\((i,j)\\) \u753b\"X\"\uff0c\u4f46\u662f \\((i-1,j-1)\\) \u4e0d\u753b\u7684\u6570\u91cf\u3011\uff0c\u540c\u7406\u5de6\u4e0b\u65b9\u5411\u7684\u3002</p> <p>\u56e0\u6b64\u6784\u56fe\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <ul> <li>\\(s\\rightarrow (i,j)\\)\uff0c\u6d41\u91cf\u4e3a \\(w(i,j)\\)</li> <li>\\((i,j)\\rightarrow (i-1,j-1)\\)\uff0c\u6d41\u91cf\u4e3a \\(c\\)\uff08\u5b58\u5728 \\((i-1,j-1)\\)\uff09</li> <li>\\((i,j)\\rightarrow (i-1,j+1)\\)\uff0c\u6d41\u91cf\u4e3a \\(c\\)\uff08\u5b58\u5728 \\((i-1,j+1)\\)\uff09</li> <li>\\((0,j)/(i,0)\\rightarrow t\\)\uff0c\u6d41\u91cf\u4e3a \\(c\\)</li> <li>\\((0,j)/(i,m)\\rightarrow t\\)\uff0c\u6d41\u91cf\u4e3a \\(c\\) </li> </ul> <p>\u7b54\u6848\u4e3a \\(\\sum{w(i,j)}-\\text{maxflow}(s,t)\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc225/submissions/35391979</p>"},{"location":"atcoder/abc/abc-g/#abc-271-g-access-counter","title":"ABC 271 G - Access Counter","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u957f\u4e3a \\(24\\) \u7684\u5b57\u7b26\u4e32\uff0c\\(s[i]=a\\) \u8868\u793a\u6bcf\u5929 \\(i\\) \u70b9\u949fAlice\u6709 \\(x\\) \u7684\u6982\u7387\u8bbf\u95ee\u7f51\u9875\uff0c\\(s[i]=b\\) \u8868\u793a\u6bcf\u5929 \\(i\\) \u70b9\u949fBob\u6709 \\(y\\) \u7684\u6982\u7387\u8bbf\u95ee\u7f51\u9875\u3002\u4ece\u67d0\u5929\u7684 \\(0\\) \u70b9\u5f00\u59cb\u6e38\u620f\uff0c\u6c42\u7b2c \\(n\\) \u6b21\u8bbf\u95ee\u7f51\u9875\u6070\u597d\u662fAlice\u5b8c\u6210\u7684\u6982\u7387\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 10^{18}\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc271/submissions/35417575</p> <p>\u9898\u89e3\uff1a\u77e9\u9635\u5feb\u901f\u5e42</p> <p>\u8bbe \\(f(i,j,k)\\) \u8868\u793a\u7b2c \\(2^i\\) \u6b21\u8bbf\u95ee\u7f51\u9875\u5728 \\(k\\) \u70b9\u949f\uff0c\u4e0a\u4e00\u6b21\u8bbf\u95ee\u5728 \\(j\\) \u70b9\u949f\u7684\u6982\u7387\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e3a \\(f(i,j,k)=\\sum\\limits_{l=0}^{23}{f(i-1,j,l)\\times f(i-1,l,k)}\\)\u3002</p> <p>\u8ba1\u7b97\u521d\u503c\uff0c\u5047\u8bbe\u7b2c \\(1\\) \u6b21\u8bbf\u95ee\u7f51\u9875\u662f\u5728 \\(i\\) \u70b9\u949f\uff0c\u5219\u5b83\u9700\u8981\u7ecf\u8fc7 \\(n(n\\geq 0)\\)\u5929\u7684\u5931\u8d25\uff0c\u4ee5\u53ca \\([0,i-1]\\) \u70b9\u949f\u7684\u5931\u8d25\u548c \\(i\\) \u70b9\u949f\u7684\u6210\u529f\uff0c\u6982\u7387\u4e3a \\(g(i)=\\sum_\\limits{n=0}^{\\infty}{q^n\\times \\prod\\limits_{j=0}^{i-1}{(1-p_j)}\\times p_i}\\)\uff0c\u5176\u4e2d \\(q=\\prod{(1-p_i)}\\)\uff0c\\(p_i\\) \u4e3a \\(i\\) \u70b9\u949f\u8bbf\u95ee\u7f51\u9875\u7684\u6982\u7387\u3002</p> <p>\u6839\u636e\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u516c\u5f0f\uff0c\\(g(i)=\\frac{1}{1-q}\\times\\prod\\limits_{j=0}^{i-1}{(1-p_j)}\\times p_i\\)\u3002</p> <p>\u8ba1\u7b97\u51fa \\(g(i)\\) \u540e\uff0c\u901a\u8fc7\u679a\u4e3e\u7b2c \\(1\\) \u6b21\u548c\u7b2c \\(2\\) \u6b21\u8bbf\u95ee\u65f6\u95f4\u53ef\u4ee5\u5f97\u5230\u521d\u503c \\(f(1,*,*)\\)\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\u8f6c\u79fb\u65b9\u7a0b\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u5feb\u901f\u5e42\u6c42\u7b2c \\(n\\) \u6b21\u8bbf\u95ee\u7684\u6982\u7387 \\(h(*,*)\\)\uff0c\u7b54\u6848\u4e3a \\(\\sum h(23,i)\\)\uff0c\u5176\u4e2d \\(i\\) \u6ee1\u8db3 \\(s[i]=a\\)\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(24^3\\log{n})\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc271/tasks/abc271_g</p>"},{"location":"atcoder/abc/abc-g/#abc-235-g-gardens","title":"ABC 235 G - Gardens","text":"<p>\u9898\u610f\uff1a\u6709\u4e09\u79cd\u77f3\u5b50\uff0c\u5206\u522b\u6709 \\(a,b,c\\) \u4e2a\u653e\u7f6e\u5728 \\(n\\) \u4e2a\u6709\u6807\u53f7\u7684\u76d2\u5b50\u4e2d\u3002\u8981\u6c42\u6bcf\u4e2a\u76d2\u5b50\u81f3\u5c11\u653e\u7f6e\u4e00\u4e2a\u77f3\u5b50\uff0c\u6bcf\u4e2a\u76d2\u5b50\u4e2d\u81f3\u591a\u4e00\u4e2a\u540c\u79cd\u77f3\u5b50\uff0c\u800c\u4e14\u4e0d\u5fc5\u653e\u5b8c\u6240\u6709\u77f3\u5b50\u3002\u6c42\u65b9\u6848\u6570\u3002</p> <p>\u9650\u5236\uff1a\\(n \\leq 5\\times 10^6\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc235/tasks/abc235_g</p> <p>\u9898\u89e3\uff1a\u53cd\u6f14</p> <p>\u5148\u8003\u8651\u81f3\u5c11 \\(i\\) \u4e2a\u76d2\u5b50\u4e3a\u7a7a\u7684\u65b9\u6848\u6570\uff0c\\(\\binom{n}{i}\\sum\\limits_{x=0}^{\\min(a,n-i)}\\binom{a}{i}\\sum\\limits_{y=0}^{\\min(b,n-i)}\\binom{b}{y}\\sum\\limits_{z=0}^{\\min(c,n-i)}\\binom{c}{z}\\)\u3002</p> <p>\u5219\u7b54\u6848\u4e3a\u6070\u597d \\(0\\) \u4e2a\u76d2\u5b50\u4e3a\u7a7a\u7684\u65b9\u6848\u6570\uff0c\u5bb9\u65a5\u4e00\u4e0b\uff0c\u5f97\u5230 \\(\\sum\\limits_{i=0}^{n}(-1)^{i}\\binom{n}{i}\\sum\\limits_{x=0}^{\\min(a,n-i)}\\binom{a}{i}\\sum\\limits_{y=0}^{\\min(b,n-i)}\\binom{b}{y}\\sum\\limits_{z=0}^{\\min(c,n-i)}\\binom{c}{z}\\)</p> <p>\u7528 \\(f_M(N)\\) \u8868\u793a \\(\\sum\\limits_{i=0}^{\\min(N,M)}\\binom{N}{i}\\)\uff0c\u5219\u7b54\u6848\u5316\u7b80\u4e3a \\(\\sum\\limits_{i=0}^{n}(-1)^{n-i}\\binom{n}{i}f_a(i)f_b(i)f_c(i)\\)\u3002</p> <p>\u73b0\u5728\u8003\u8651\u5982\u4f55\u4ece \\(f_M(N)\\) \u5feb\u901f\u8ba1\u7b97\u51fa\u5230 \\(f_M(N+1)\\)\u3002</p> <p>\u5982\u679c \\(N+1\\leq M\\)\uff0c\u6839\u636e\u4e8c\u9879\u5f0f\u5b9a\u7406\uff0c \\(f_M(N)=\\sum\\limits_{i=0}^{N}{\\binom{N}{i}}=2^N\\)\uff0c\\(f_M(N+1)=2^{N+1}\\)\uff0c\u5f97 \\(f_M(N+1)=2f_M(N)\\)\u3002</p> <p>\u5426\u5219 \\(f_M(N)=\\sum\\limits_{i=0}^{M}\\binom{N}{i}\\)\uff0c\\(f_M(N+1)=\\sum\\limits_{i=0}^{M}\\binom{N+1}{i}\\)\u3002</p> <p>\u6839\u636e \\(\\binom{N}{M}=\\binom{N-1}{M}+\\binom{N-1}{M-1}\\)\uff0c\u5219 \\(2\\sum\\limits_{i=0}^{M}\\binom{N}{i}=\\sum\\limits_{i=0}^{M}\\binom{N+1}{i}-\\binom{N}{M}\\)\u3002</p> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u56fe\u8003\u8651\u5b83\u7684\u610f\u4e49\uff1a</p> <p></p> <p>\u4ece\u5de6\u4e0b\u89d2\u51fa\u53d1\uff0c\u6bcf\u6b21\u5411\u53f3/\u4e0a\u79fb\u52a8\u4e00\u683c\uff0c\u5219\u5230\u8fbe\u9ec4\u8272\u70b9\u7684\u65b9\u6848\u6570\u4e4b\u548c\u4e3a \\(f_M(N)\\)\uff0c\u5230\u8fbe\u84dd\u8272\u70b9\u7684\u65b9\u6848\u6570\u4e3a \\(f_M(N+1)\\)\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\u9664\u4e86\u53f3\u4e0b\u89d2\u7684\u9ec4\u70b9\u65e0\u6cd5\u5411\u53f3\u79fb\u52a8\u4ee5\u5916\uff0c\u5176\u4ed6\u70b9\u90fd\u6709\u5411\u4e0a/\u53f3\u79fb\u52a8\u4e24\u79cd\u65b9\u6848\uff0c\u56e0\u6b64 \\(f_M(N+1)=2f_M(N)-\\binom{N}{M}\\)\u3002</p> <p>\u5982\u6b64\u6bcf\u6b21\u8f6c\u79fb\u5c31\u662f \\(O(1)\\) \u7684\u4e86\uff0c\u603b\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc235/submissions/35426630</p>"},{"location":"atcoder/abc/abc-g/#abc-232-g-modulo-shortest-path","title":"ABC 232 G - Modulo Shortest Path","text":"<p>\u9898\u610f\uff1a\u6709 \\(n\\) \u4e2a\u70b9\u7684\u6709\u5411\u5b8c\u5168\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u6743\u503c \\(a_i\\) \u548c \\(b_i\\)\u3002\u6709\u5411\u8fb9 \\(i\\rightarrow j\\) \u7684\u8fb9\u6743\u4e3a \\((a_i+b_j)\\bmod m\\) \uff0c\u6c42 \\(1\\to n\\) \u7684\u6700\u77ed\u8def\u3002</p> <p>\u9650\u5236\uff1a\\(n\\leq 2\\times 10^5, 0\\leq a_i,b_i\\leq m,2\\leq m\\leq 10^9\\)</p> <p>\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/abc232/tasks/abc232_g</p> <p>\u9898\u89e3\uff1a\u5efa\u56fe+\u6700\u77ed\u8def</p> <p>\u663e\u7136\u9700\u8981\u628a\u8fb9\u7684\u6570\u91cf\u964d\u4e0b\u6765\u624d\u80fd\u7528dijkstra\u6c42\u6700\u77ed\u8def\uff0c\u56e0\u6b64\u8003\u8651\u6784\u5efa\u4e0e\u539f\u56fe\u7b49\u4ef7\u7684\u65b0\u56fe\u3002</p> <p>\u5bf9\u4e8e\u6743\u503c \\(0\\sim m-1\\) \u5206\u522b\u5efa\u4e00\u4e2a\u65b0\u70b9\uff0c\\([i]\\rightarrow [(i+1)\\bmod m]\\) \u8fb9\u6743\u4e3a \\(1\\)\uff0c\u53ef\u4ee5\u60f3\u8c61\u5c06\u8fd9 \\(m\\) \u4e2a\u70b9\u6392\u5217\u6210\u4e00\u4e2a\u987a\u6307\u9488\u7684\u5706\u73af\u3002</p> <p>\u5bf9\u4e8e\u539f\u56fe\u4e0a\u7684 \\(n\\) \u4e2a\u70b9\uff0c\\(i\\rightarrow j\\) \u7684\u8fb9\u6743\u4e3a \\((a_i+b_j)\\bmod m\\)\uff0c\u8003\u8651\u7528\u8fd9\u4e2a\u5706\u73af\u4e0a\u7684\u8fb9\u66ff\u4ee3\uff0c\u5219\u53ef\u4ee5\u7528 \\(i\\rightarrow [m-a_i]\\) \u8fde\u8fb9\u6743\u4e3a \\(0\\) \u7684\u8fb9\uff0c\u518d\u8fde\u4e00\u6761 \\([b_j]\\rightarrow j\\) \u8fb9\u6743\u4e3a \\(0\\) \u7684\u8fb9\u3002\u6b64\u65f6 \\(i\\rightarrow j\\) \u5c31\u53ef\u4ee5\u6cbf\u7740\u5706\u73af\u8d70\uff0c\u8def\u4e0a\u7684\u8fb9\u6743\u548c\u4ecd\u7136\u4e3a \\((a_i+b_j)\\bmod m\\)\u3002</p> <p>\u663e\u7136\u4e0d\u662f\u5706\u73af\u4e0a\u7684\u6240\u6709\u70b9\u90fd\u6709\u7528\uff0c\u90a3\u4e9b\u9664\u5706\u73af\u5916\u6ca1\u6709\u5165\u5ea6\u7684\u70b9\u53ef\u4ee5\u88ab\u5220\u9664\u5408\u5e76\uff0c\u8fd9\u6837\u5706\u73af\u4e0a\u81f3\u591a\u7559\u4e0b \\(2n\\) \u4e2a\u70b9\u3002</p> <p>\u73b0\u5728\u4e00\u5171 \\(3n\\) \u4e2a\u70b9\uff0c\\(4n\\) \u6761\u8fb9\uff0c\u53ef\u4ee5\u7528dijkstra \\(O(n\\log{n})\\) \u6c42\u51fa \\(1\\to n\\) \u7684\u6700\u77ed\u8def\u3002</p> <p>\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/abc232/submissions/35428237</p>"},{"location":"atcoder/abc/abc229/","title":"AtCoder Beginner Contest 229","text":"<p>G - Longest Y</p> <p>\u7ed9\u5b9a\u4e00\u4e2a<code>01</code>\u5b57\u7b26\u4e32\uff0c\u95ee\u901a\u8fc7\u81f3\u591a \\(k\\) \u6b21\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\uff0c\u80fd\u5f97\u5230\u7684\u5168<code>1</code>\u5b50\u4e32\u7684\u6700\u5927\u957f\u5ea6\u3002</p> <p>\\(|s|\\leq 2\\times 10^5,k\\leq 10^{12}\\)</p> <p>\u6b64\u9898\u7684\u6838\u5fc3\u5728\u4e00\u4e2a\u8f6c\u5316\uff1a\u5b9a\u4e49 \\(a_i\\) \u4e3a\u7b2c \\(i\\) \u4e2a<code>1</code>\u7684\u4e0b\u6807\uff0c \\(b_i=a_i-i\\)\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u7eed\u5168<code>1</code>\u5b50\u4e32\uff0c\\(b_i\\) \u5e94\u76f8\u7b49\u4e14\u8fde\u7eed\u3002</p> <p>\u800c\u4ea4\u6362\u4e00\u6b21\u76f8\u90bb\u7684 \\(10\\) \u5bf9 \\(b\\)  \u7684\u5f71\u54cd\u4e3a \\(b_i\\) \u52a0 \\(1\\) \u6216\u51cf \\(1\\)\u3002</p> <p>\u5047\u8bbe\u6700\u7ec8\u8fde\u7eed\u5168<code>1</code>\u5b50\u4e32\u7684\u957f\u5ea6\u4e3a \\(l\\)\uff0c\u901a\u8fc7\u7b2c \\(x\\sim x+l-1\\) \u4e2a<code>1</code> \u7ec4\u6210\u3002\u90a3\u4e48\u9700\u8981\u7684\u4ea4\u6362\u6b21\u6570\u5e94\u8be5\u4e3a \\(f(x)=\\sum\\limits_{i=x}^{x+l-1}{b_i-p}\\)\uff0c\\(p\\) \u53ef\u4ee5\u7406\u89e3\u4e3a\u5b50\u4e32\u7684\u4f4d\u7f6e\u3002\u663e\u7136\u5f53 \\(p=b_{i+\\lfloor{\\frac{l}{2}}\\rfloor}\\) \u65f6 \\(f(x)\\) \u6700\u5c0f\u3002</p> <p>\u663e\u7136 \\(l\\) \u662f\u53ef\u4e8c\u5206\u7684\u3002\u6bcf\u6b21\u5bf9\u4e8e\u5f53\u524d \\(l\\)\uff0c\u53ef\u4ee5 \\(O(n)\\) \u679a\u4e3e \\(x\\) \u6765\u5224\u5b9a\u53ef\u884c\u6027\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n\\log{n})\\)\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint main() {\n    string s;\n    long long k;\n    cin &gt;&gt; s &gt;&gt; k;\n    vector&lt;int&gt; v;\n\n    for (int i = 0; i &lt; s.size(); ++i) {\n        if (s[i] == 'Y') {\n            v.push_back(i - v.size());\n        }\n    }\n\n    if (v.empty()) {\n        cout &lt;&lt; 0 &lt;&lt; endl;\n        return 0;\n    }\n\n    int n = v.size();\n    vector&lt;long long&gt; sum(n);\n    sum[0] = v[0];\n\n    for (int i = 1; i &lt; n; ++i) {\n        sum[i] = sum[i - 1] + v[i];\n    }\n\n    int l = 1, r = n, ans = -1;\n\n    auto check = [&amp;](int x) {\n        for (int i = x - 1; i &lt; n; ++i) {\n            int p = i - x / 2;\n            long long a = 1ll * (p - (i - x)) * v[p] - (sum[p] - (i == x - 1 ? 0 : sum[i - x]));\n            long long b = sum[i] - sum[p] - 1ll * (i - p) * v[p];\n\n            if (a + b &lt;= k)\n                return true;\n        }\n\n        return false;\n    };\n\n    while (l &lt;= r) {\n        int m = (l + r) / 2;\n\n        if (check(m)) {\n            l = m + 1;\n            ans = m;\n        } else\n            r = m - 1;\n    }\n\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"atcoder/abc/abc232/","title":"AtCoder Beginner Contest 232","text":"<p>F - Simple Operations on Sequence</p> <p>\u7ed9\u5b9a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\) \u548c \\(b\\)\u3002\u5e0c\u671b\u901a\u8fc7\u6267\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u4f7f\u5f97 \\(a\\) \u4e0e \\(b\\) \u76f8\u540c\u3002 \u6709\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u82b1\u8d39 \\(x\\)\uff0c\u4f7f \\(a[i]\\) \u589e\u5927\u6216\u51cf\u5c0f \\(1\\)</li> <li>\u82b1\u8d39 \\(y\\)\uff0c\u4ea4\u6362 \\(a[i]\\) \u548c \\(a[i+1]\\)</li> <li>\u6c42\u6700\u5c0f\u82b1\u8d39\u3002</li> </ul> <p>\\(n\\leq 18\\)</p> <p>\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c \\(2\\) \u786e\u5b9a \\(a\\) \u7684\u6700\u7ec8\u6392\u5217 \\(p\\) \u540e\uff0c\u64cd\u4f5c \\(1\\) \u6240\u9700\u7684\u6b21\u6570\u662f\u56fa\u5b9a\u7684\uff0c\u4e3a \\(\\sum{|a[p[i]]-b[i]|}\\)\u3002</p> <p>\u5c06 \\((1,2,\\cdots,n)\\) \u8f6c\u6362\u6210 \\((p_1,p_2,\\cdots,p_n)\\) \u6240\u9700\u7684\u4ea4\u6362\u6b21\u6570\u4e3a \\(p\\) \u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002</p> <p>\u800c\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u53ef\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u72ec\u7acb\u7b97\u51fa\uff0c\u5373\u5bf9\u4e8e\u67d0\u4e2a\u5177\u4f53\u4f4d\u7f6e \\(p_i\\)\uff0c\u4e0e\u4ed6\u6709\u5173\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u53ea\u4e0e \\(\\{p_1,\\cdots, p_{i-1}\\}\\) \u8fd9\u4e2a\u96c6\u5408\u6709\u5173\uff0c\u4e0e\u5b83\u4eec\u7684\u5177\u4f53\u6392\u5217\u987a\u5e8f\u65e0\u5173\u3002</p> <p>\u56e0\u6b64\u4e0d\u9700\u8981\u679a\u4e3e\u6240\u6709\u6392\u5217\uff0c\u53ea\u9700\u8981\u72b6\u538b\u6392\u5217\u524d \\(i\\) \u4f4d\u7528\u5230\u7684\u5143\u7d20\u96c6\u5408\u3002</p> <p>\\(f(s,i)\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u6570\u7684\u96c6\u5408\u4e3a \\(s\\) \u65f6\u7684\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\u679a\u4e3e\u7b2c \\(p[i+1]\\) \u4e3a \\(q\\)\uff0c\u663e\u7136 \\(q\\not\\in s\\)\uff0c\u5219\u5b83\u9700\u8981\u6267\u884c\u64cd\u4f5c \\(1\\) \u7684\u82b1\u8d39\u4e3a \\(x\\times |a[q]-b[i]|\\)\uff0c\u800c \\(q\\) \u4e0e \\(s\\) \u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e5f\u53ef\u4ee5 \\(O(n)\\) \u7b97\u51fa\u3002</p> <p>\u7531\u4e8e <code>__builtin_popcount(s)=i</code>\uff0c\u56e0\u6b64\u7b2c\u4e8c\u7ef4\u53ef\u4ee5\u7701\u7565\u3002</p> <p>\u9884\u5904\u7406\u51fa\u6765 \\([0,2^n-1]\\) \u4e2d\u6bcf\u4e2a\u6570\u4e8c\u8fdb\u5236\u7684 \\(1\\) \u7684\u4e2a\u6570 \\(one[i]\\)\uff0c\u7136\u540e\u6309\u7167 \\(one[i]\\) \u9012\u589e\u7684\u987a\u5e8f\u8f6c\u79fb\u5373\u53ef\u3002</p> <p>\u521d\u503c\u4e3a \\(f[0]=0\\)\uff0c\u6700\u7ec8\u7b54\u6848\u4e3a \\(f[2^n-1]\\)\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(2^n\\times n^2)\\) \u6216 \\(O(2^n\\times n)\\)\uff0c\u8ba1\u7b97\u9006\u5e8f\u5bf9\u4e2a\u6570\u53ef\u4ee5\u4f18\u5316\u5230\u5e73\u5747 \\(O(1)\\)\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n    long long vx, vy;\n    cin &gt;&gt; n &gt;&gt; vx &gt;&gt; vy;\n    vector&lt;long long&gt; a(n), b(n);\n\n    for (auto &amp;x : a)\n        cin &gt;&gt; x;\n\n    for (auto &amp;x : b)\n        cin &gt;&gt; x;\n\n    vector&lt;vector&lt;int&gt;&gt; v(n + 1);\n\n    for (int i = 0; i &lt; (1 &lt;&lt; n); ++i)\n        v[__builtin_popcount(i)].push_back(i);\n\n    vector&lt;long long&gt; f(1 &lt;&lt; n, LLONG_MAX);\n    f[0] = 0;\n\n    for (int i = 0; i &lt; n; ++i) {\n\n        for (auto x : v[i]) {\n            for (int j = n - 1, num = 0; j &gt;= 0; --j) {\n\n                if ((x &gt;&gt; j) &amp; 1) {\n                    ++num;\n                    continue;\n                }\n\n                auto val = f[x] + vy * num + vx * abs(a[j] - b[i]);\n                f[x | (1 &lt;&lt; j)] = min(f[x | (1 &lt;&lt; j)], val);\n            }\n        }\n    }\n\n    cout &lt;&lt; f[(1 &lt;&lt; n) - 1] &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"atcoder/abc/abc235/","title":"AtCoder Beginner Contest 235","text":"<p>F - Variety of Digits</p> <p>\u7ed9\u5b9a\u6570\u5b57\u96c6\u5408 \\(M\\)\uff0c\u6c42 \\(1\\sim N\\) \u4e2d\u6ee1\u8db3\u6570\u4f4d\u96c6\u5408\u5305\u542b \\(M\\) \u7684\u6570\u7684\u548c\uff0c\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\u4f8b\u5982 \\(M=\\{1,2\\}\\)\uff0c\\(x=123\\)\uff0c\u5219 \\(x\\) \u7684\u6570\u4f4d\u96c6\u5408\u4e3a \\(\\{1,2,3\\}\\) \u5305\u542b \\(\\{1,2\\}\\)\uff0c\u56e0\u6b64\u7b26\u5408\u6761\u4ef6\u3002</p> <p>\\(N\\leq 10^{10^4}\\)</p> <p>\u6570\u4f4dDP\uff0c\u8bb0\u72b6\u6001 \\(f(n,k,zero,limit)\\) \u548c \\(g(n,k,zero,limit)\\)\u3002</p> <ul> <li> <p>\\(n\\) \u8868\u793a\u5f53\u524d\u586b\u5199\u7b2c \\(n\\) \u4f4d</p> </li> <li> <p>\\(k\\) \u8868\u793a\u5f53\u524d\u6570\u4f4d\u96c6\u5408\u4e0e \\(M\\) \u7684\u5dee\u96c6\u4e3a \\(k\\) \uff08\u5373\u8fd8\u6709\u54ea\u4e9b\u9700\u8981\u51fa\u73b0\u7684\u6570\u6ca1\u51fa\u73b0\uff09</p> </li> <li> <p>\\(zero\\) \u8868\u793a\u5f53\u524d\u4f4d\u662f\u5426\u4e3a\u6700\u9ad8\u4f4d\uff08\u82e5\u524d\u9762\u4e00\u76f4\u586b \\(0\\)\uff0c\u5219\u5f53\u524d\u4f4d\u662f\u6700\u9ad8\u4f4d\uff0c\u8fd9\u4f1a\u51b3\u5b9a\u5982\u679c\u5f53\u524d\u4f4d\u586b \\(0\\) \u662f\u5426\u4f1a\u88ab\u8ba1\u5165\u6570\u4f4d\u96c6\u5408\u4e2d\uff09</p> </li> <li> <p>\\(limit\\) \u8868\u793a\u5f53\u524d\u662f\u5426\u5361\u7740\u4e0a\u9650\uff08\u5373\u66f4\u9ad8\u4f4d\u662f\u5426\u4e0e \\(N\\) \u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u5f71\u54cd\u7740\u5f53\u524d\u4f4d\u7684\u53d6\u503c\u8303\u56f4\uff09</p> </li> </ul> <p>\\(f\\)  \u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u4e4b\u548c\uff0c\\(g\\) \u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\u603b\u72b6\u6001\u6570\u4e3a \\(\\lceil{\\log_{10}}{N}\\rceil\\times 2^{10}\\times 2\\times 2\\leq 5\\times 10^7\\)\u3002</p> <p>\u5f85\u6c42\u7b54\u6848\u4e3a \\(f(\\lceil{\\log_{10}}{N}\\rceil,M,1,1)\\)\u3002</p> <p>\u8fb9\u754c\u6761\u4ef6\u4e3a\u5f53 \\(|k|&gt;n+1\\) \u65f6 \\((f,g)=(0,0)\\)\uff1b \\(n=-1\\)  \u65f6\uff0c\\((f,g)=(0,1)\\)\u3002</p> <p>\u679a\u4e3e\u5f53\u524d\u586b\u7684\u6570 \\(x\\)\uff0c\u4ece \\(0\\) \u5f00\u59cb\uff0c\u5982\u679c \\(limit=1\\)\uff0c\u5219\u4e0a\u9650\u4e3a \\(N[n]\\)\uff0c\u5426\u5219\u4e0a\u9650\u4e3a \\(9\\)\u3002</p> <p>\u5219\u65b0\u7684 \\(k'\\) \u4e3a\u5f53\u524d \\(k\\) \u9664\u53bb \\(x\\)\u3002</p> <p>\u5219\u5f53\u524d\u4f4d\u7684\u8d21\u732e\u4e3a \\(\\sum\\limits_{x=0}^{9/N[n]}{10^n\\times x\\times g(n-1,\\cdots)}\\)\uff0c\u81f3\u4e8e \\(zero\\) \u548c \\(limit\\) \u7684\u53d8\u5316\u5e94\u8be5\u5f88\u663e\u7136\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MOD = 998244353;\nusing ll = long long;\n\nstruct mint {\n    int n;\n    mint() : n(0) { ; }\n    mint(ll m) {\n        if (m &lt; 0 || MOD &lt;= m) {\n            m %= MOD;\n\n            if (m &lt; 0)\n                m += MOD;\n        }\n\n        n = m;\n    }\n    operator int() {\n        return n;\n    }\n};\nbool operator==(mint a, mint b) {\n    return a.n == b.n;\n}\nmint operator+=(mint &amp;a, mint b) {\n    a.n += b.n;\n\n    if (a.n &gt;= MOD)\n        a.n -= MOD;\n\n    return a;\n}\nmint operator-=(mint &amp;a, mint b) {\n    a.n -= b.n;\n\n    if (a.n &lt; 0)\n        a.n += MOD;\n\n    return a;\n}\nmint operator*=(mint &amp;a, mint b) {\n    a.n = ((ll)a.n * b.n) % MOD;\n    return a;\n}\nmint operator+(mint a, mint b) {\n    return a += b;\n}\nmint operator-(mint a, mint b) {\n    return a -= b;\n}\nmint operator*(mint a, mint b) {\n    return a *= b;\n}\nmint operator^(mint a, int n) {\n    if (n == 0)\n        return mint(1);\n\n    mint res = (a * a) ^ (n / 2);\n\n    if (n % 2)\n        res = res * a;\n\n    return res;\n}\nll inv(ll a, ll p) {\n    return (a == 1 ? 1 : (1 - p * inv(p % a, a)) / a + p);\n}\nmint operator/(mint a, mint b) {\n    return a * mint(inv(b, MOD));\n}\nmint operator/=(mint &amp;a, mint b) {\n    a = a / b;\n    return a;\n}\n\nint main() {\n    string s;\n    cin &gt;&gt; s;\n    vector&lt;mint&gt; ten;\n    vector&lt;int&gt; lim;\n\n    for (int i = s.size() - 1; i &gt;= 0; --i)\n        lim.push_back(s[i] - '0');\n\n    ten.push_back(1);\n\n    for (int i = 1; i &lt; s.size(); ++i)\n        ten.push_back(ten.back() * mint(10));\n\n    int m;\n    cin &gt;&gt; m;\n    int k = 0;\n\n    for (int i = 0, x; i &lt; m; ++i) {\n        cin &gt;&gt; x;\n        k |= 1 &lt;&lt; x;\n    }\n\n    array&lt;mint, 2&gt; mp[2][2][10005][1024];\n\n    function&lt;array&lt;mint, 2&gt;(int, int, int, int)&gt; dfs = [&amp;](int n, int k, int f, int zero) -&gt; array&lt;mint, 2&gt; {\n        // n\u4f4d\uff0c\u6700\u9ad8\u4f4d\u4e3alimit\uff0c\u96c6\u5408\u60c5\u51b5\u4e3ak\uff0c\u5f53\u524d\u662f\u5426\u4e3a\u6700\u9ad8\u4f4d\n        if (__builtin_popcount(k) &gt; n + 1)\n            return {0, 0};\n\n        if (n == -1)\n            return {0, 1};\n\n        if (mp[f][zero][n][k][0])\n            return mp[f][zero][n][k];\n\n        int limit = f ? lim[n] : 10;\n\n        mint sum = 0, cnt = 0;\n\n        for (int i = 0; i &lt; limit; ++i) {\n            if (zero &amp;&amp; i == 0) {\n                auto [s, c] = dfs(n - 1, k, 0, 1);\n                cnt += c;\n                sum += s + mint(i) * ten[n] * c;\n            } else {\n                auto [s, c] = dfs(n - 1, k &amp; ~(1 &lt;&lt; i), 0, 0);\n                cnt += c;\n                sum += s + mint(i) * ten[n] * c;\n            }\n        }\n\n        if (f) {\n            auto [s, c] = dfs(n - 1, k &amp; ~(1 &lt;&lt; limit), 1, 0);\n            cnt += c;\n            sum += s + mint(limit) * ten[n] * c;\n        }\n\n        return mp[f][zero][n][k] = array&lt;mint, 2&gt; {sum, cnt};\n    };\n\n    cout &lt;&lt; dfs(s.size() - 1, k, 1, 1)[0] &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"atcoder/abc/abc236/","title":"AtCoder Beginner Contest 236","text":"<p>F - Spices</p> <p>\u6709 \\(2^n-1\\) \u4e2a\u7269\u54c1\uff0c\u7b2c \\(i\\) \u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u4e3a \\(i\\)\uff0c\u82b1\u8d39\u4e3a \\(a_i\\)\u3002\u73b0\u5728\u8981\u9009\u62e9\u82e5\u5e72\u4e2a\u7269\u54c1\uff0c\u4f7f\u5f97\u80fd\u591f\u901a\u8fc7\u5f02\u6216\u8fd0\u7b97\u5b83\u4eec\u7684\u4ef7\u503c\u7ec4\u5408\u51fa \\(1\\sim 2^n-1\\) \u4e2d\u7684\u4efb\u610f\u6570\u3002\u6c42\u9009\u62e9\u7269\u54c1\u7684\u82b1\u8d39\u4e4b\u548c\u7684\u6700\u5c0f\u503c\u3002</p> <p>\\(n\\leq 16\\)</p> <p>\u5c06\u7269\u54c1\u6309\u7167\u82b1\u8d39\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7ef4\u62a4\u5f53\u524d\u9009\u62e9\u7684\u7269\u54c1\u80fd\u51d1\u51fa\u7684\u4ef7\u503c\u3002</p> <p>\u5bf9\u4e8e\u5f53\u524d\u7269\u54c1 \\(a\\)\uff0c\u5982\u679c\u5b83\u7684\u4ef7\u503c\u80fd\u88ab\u51d1\u51fa\uff0c\u5c31\u4e0d\u9009\uff0c\u5426\u5219\u5c31\u9009\u62e9\u5b83\u3002</p> <p>\u4e0d\u9009\u7684\u539f\u56e0\u5e94\u8be5\u5f88\u663e\u7136\uff0c\u56e0\u4e3a\u65e2\u7136\u5b83\u53ef\u4ee5\u88ab\u4e4b\u524d\u7684\u7269\u54c1\u66ff\u4ee3\u6389\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740\u9009\u5b83\u53ea\u662f\u591a\u82b1\u94b1\uff0c\u5e76\u4e0d\u80fd\u7ec4\u5408\u51fa\u65b0\u7684\u6570\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u4e3a\u4ec0\u4e48\u5f53\u5b83\u7684\u4ef7\u503c\u65e0\u6cd5\u88ab\u51d1\u51fa\u65f6\uff0c\u5c31\u8981\u9009\u5b83\uff0c\u800c\u4e0d\u662f\u7b49\u5230\u7528\u540e\u9762\u7684\u7269\u54c1\u5c06\u5b83\u7ec4\u5408\u51fa\u6765\u3002</p> <p>\u5047\u8bbe\u4e0d\u4f7f\u7528 \\(a\\) \u5f97\u5230\u4e86\u4e00\u4e2a\u6700\u7ec8\u7684\u7269\u54c1\u96c6\u5408\u4e3a \\(p_1,p_2,\\cdots,p_k\\)\uff0c\u663e\u7136\u5176\u4e2d\u7684\u4e00\u4e2a\u5b50\u96c6\u53ef\u4ee5\u51d1\u51fa \\(a\\)\u3002</p> <p>\u82e5 \\(a=x_1\\oplus x_2\\cdots \\oplus x_m\\)\uff0c\u7531\u4e8e \\(a\\) \u65e0\u6cd5\u5728\u4e4b\u524d\u88ab\u51d1\u51fa\uff0c\u5219 \\(x_i\\) \u4e2d\u5fc5\u7136\u81f3\u5c11\u6709\u4e00\u4e2a\u7684\u4ef7\u683c\u6bd4\u5b83\u5927\uff0c\u4e0d\u59a8\u5047\u8bbe\u8be5\u7269\u54c1\u4e3a \\(x_1\\)\u3002</p> <p>\u6839\u636e\u5f02\u6216\u7684\u57fa\u672c\u6027\u8d28\uff0c\u6b64\u65f6\u5c06 \\(x_1\\) \u66ff\u6362\u6210 \\(a\\)\uff0c\u65b0\u96c6\u5408\u4ecd\u7136\u80fd\u7ec4\u5408\u51fa \\(1\\sim 2^n-1\\)\uff0c\u4e14\u603b\u82b1\u8d39\u66f4\u5c0f\uff0c\u56e0\u6b64\u4f1a\u9009\u62e9\u7528 \\(a\\) \u5c06 \\(x_1\\) \u66ff\u6362\u6389\u3002</p> <p>\u56e0\u6b64\u9047\u5230\u4e00\u4e2a\u65b0\u7269\u54c1\uff0c\u5f53\u5b83\u7684\u4ef7\u503c\u65e0\u6cd5\u88ab\u7ec4\u5408\u51fa\u6765\u65f6\uff0c\u5c31\u4e00\u5b9a\u4f1a\u9009\u62e9\u5b83\uff0c\u56e0\u4e3a\u5b83\u7684\u82b1\u8d39\u5728\u672a\u88ab\u9009\u62e9\u7684\u7269\u54c1\u4e2d\u6700\u5c0f\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;array&lt;int, 2&gt;&gt; v(1 &lt;&lt; n);\n\n    for (int i = 1; i &lt; (1 &lt;&lt; n); ++i) {\n        cin &gt;&gt; v[i][0];\n        v[i][1] = i;\n    }\n\n    sort(v.begin(), v.end());\n\n    long long ans = 0;\n\n    vector f = vector&lt;bool&gt;(1 &lt;&lt; n);\n    f[0] = 1;\n\n    for (auto [a, b] : v) {\n\n        if (f[b])\n            continue;\n\n        ans += a;\n\n        for (int i = 0; i &lt; (1 &lt;&lt; n); ++i) {\n            if (f[i])\n                f[i xor b] = 1;\n        }\n    }\n\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"atcoder/abc/abc241/","title":"AtCoder Beginner Contest 241","text":"<p>G - Round Robin</p> <p>\\(n\\) \u4e2a\u4eba\uff0c\u4efb\u610f\u4e24\u4eba\u4e4b\u95f4\u90fd\u6709\u4e00\u573a\u6bd4\u8d5b\uff0c\u4e00\u5171 \\(\\frac{n\\times(n-1)}{2}\\) \u573a\u3002\u6bd4\u8d5b\u53ea\u6709\u80dc\u8d1f\uff0c\u6ca1\u6709\u5e73\u5c40\u3002</p> <p>\u5df2\u77e5 \\(m\\) \u5c40\u6bd4\u8d5b\u7684\u80dc\u8d1f\uff0c\u95ee\u5982\u679c\u81ea\u7531\u5b89\u6392\u5269\u4e0b\u6bd4\u8d5b\u7684\u80dc\u8d1f\uff0c\u54ea\u4e9b\u9009\u624b\u53ef\u80fd\u593a\u51a0\uff1f\uff08\u5373\u80dc\u7684\u573a\u6570\u5927\u4e8e\u5176\u4ed6\u6240\u6709\u4eba\uff09</p> <p>\\(n\\leq 50\\)</p> <p>\u82e5\u60f3\u8981\u8ba9 \\(x\\) \u593a\u51a0\uff0c\u5219\u4f1a\u5c06\u4ed6\u5728\u6240\u6709\u672a\u5b8c\u6210\u7684\u6bd4\u8d5b\u4e2d\u83b7\u80dc\uff0c\u6b64\u65f6\u53ef\u4ee5\u7edf\u8ba1\u51fa\u4ed6\u7684\u603b\u80dc\u573a \\(w[x]\\)\u3002</p> <p>\u82e5 \\(x\\) \u80fd\u6210\u529f\u593a\u51a0\uff0c\u5f53\u4e14\u4ec5\u5f53\u5269\u4e0b\u7684\u6bd4\u8d5b\u5b58\u5728\u4e00\u79cd\u80dc\u8d1f\u65b9\u6848\uff0c\u4f7f\u5f97\u5176\u4ed6\u4eba\u7684\u80dc\u573a\u90fd\u5c0f\u4e8e \\(w[x]\\)\u3002</p> <p>\u8003\u8651\u6700\u5927\u6d41\u6a21\u578b\u3002</p> <p>\u539f\u7406\u662f\uff0c\u7531\u4e8e\u6bcf\u573a\u6bd4\u8d5b\u90fd\u6709\u80dc\u8005\uff0c\u6ca1\u6709\u5e73\u5c40\u3002\u56e0\u6b64\u5c06\u6e90\u70b9\u4e0e\u5b83\u4eec\u8fde\u8fb9\uff0c\u6d41\u91cf\u9650\u5236\u4e3a \\(1\\)\uff08\u8868\u793a\u6709\u4e00\u4e2a\u80dc\u8005\u9700\u8981\u5206\u914d\uff09\uff0c\u7136\u540e\u5c06\u6bcf\u573a\u6bd4\u8d5b\u5411\u53ef\u80fd\u6210\u4e3a\u80dc\u8005\u7684\u70b9\u8fde\u8fb9\u3002\u901a\u8fc7\u8bbe\u7f6e\u6bcf\u4e2a\u4eba\u5230\u6c47\u70b9\u7684\u6d41\u91cf\u9650\u5236\uff0c\u6765\u9650\u5236\u6bcf\u4e2a\u70b9\u80dc\u573a\u7684\u4e0a\u9650\uff08\u9664\u4e86\u593a\u51a0\u8005\u7684\u5176\u4ed6\u4eba\u7684\u83b7\u80dc\u573a\u6570\u4e0d\u80fd\u8d85\u8fc7 \\(w[x]-1\\)\uff09\u3002\u6700\u7ec8\u53ef\u4ee5\u901a\u8fc7\u6700\u5927\u6d41\u662f\u5426\u4e3a\u6bd4\u8d5b\u573a\u6570\u6765\u5224\u65ad\u80fd\u5426\u5206\u914d\u6240\u6709\u6bd4\u8d5b\u7684\u80dc\u8d1f\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u9664\u4e86\u6e90\u70b9 \\(s\\)\uff0c\u6c47\u70b9 \\(t\\) \u4e4b\u5916\uff0c\u8fd8\u6709\u70b9 \\(A_{i,j}(1\\leq i&lt;j\\leq n)\\) \u548c \\(B_i(1\\leq i\\leq n)\\)\u3002</p> <p>\\(s\\) \u5411 \\(A_{i,j}\\) \u8fde\u6d41\u91cf\u9650\u5236\u4e3a \\(1\\) \u7684\u8fb9\u3002</p> <p>\\(A_{i,j}\\) \u8868\u793a \\(i\\) \u548c \\(j\\) \u4e4b\u95f4\u7684\u6bd4\u8d5b\uff0c\u82e5 \\(i\\) \u83b7\u80dc\uff0c\u8fde\u63a5 \\((A_{i,j},B_i)\\)\uff0c\u82e5 \\(j\\) \u83b7\u80dc\uff0c\u8fde\u63a5 \\((A_{i,j},B_j)\\)\uff0c\u82e5\u5c1a\u672a\u51b3\u51fa\u80dc\u8d1f\uff0c\u5219\u540c\u65f6\u5411 \\(B_i,B_j\\) \u8fde\u8fb9\u3002\u8fb9\u7684\u6d41\u91cf\u9650\u5236\u90fd\u662f \\(1\\)\u3002</p> <p>\\(B_x\\) \u5411 \\(t\\) \u8fde\u63a5\u6d41\u91cf\u4e3a \\(w[x]\\) \u7684\u8fb9\uff0c\u5176\u4ed6 \\(B_i\\) \u5411 \\(t\\) \u8fde\u63a5\u6d41\u91cf\u4e3a \\(w[x] - 1\\) \u7684\u8fb9\u3002</p> <p>\u82e5\u6700\u5927\u6d41\u4e3a \\(\\frac{n\\times(n-1)}{2}\\)\uff0c\u5219\u8bf4\u660e \\(x\\) \u53ef\u4ee5\u593a\u51a0\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a \\(x\\) \u90fd\u91cd\u65b0\u5efa\u56fe\u8dd1\u6700\u5927\u6d41\uff0c\u590d\u6742\u5ea6 \\(O(n^4)\\)\u3002</p>"},{"location":"atcoder/abc/abc242/","title":"AtCoder Beginner Contest 242","text":"<p>F - Black and White Rooks</p> <p>\u5728 \\(n\\times m\\) \u7684\u7f51\u683c\u56fe\u4e0a\u653e\u7f6e \\(a\\) \u4e2a\u767d\u68cb\u548c \\(b\\) \u4e2a\u9ed1\u68cb\uff0c\u6bcf\u4e2a\u683c\u5b50\u6700\u591a\u653e\u7f6e\u4e00\u4e2a\u68cb\u5b50\uff0c\u4e14\u540c\u4e00\u884c/\u540c\u4e00\u5217\u4e2d\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\u9ed1\u767d\u68cb\u5b50\u3002\u6c42\u6709\u591a\u5c11\u79cd\u559d\u6cd5\u7684\u653e\u7f6e\u65b9\u6848\u3002</p> <p>\\(n,m\\leq 50\\)</p> <p>\u5206\u522b\u679a\u4e3e\u767d\u68cb\u548c\u9ed1\u68cb\u6240\u5360\u7684\u884c\u6570\u548c\u5217\u6570\uff0c\u7136\u540e\u5bb9\u65a5\u539f\u7406\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002</p> <p>\\(ans=\\sum\\limits_{i=0}^{n}\\sum\\limits_{j=0}^{m}\\sum\\limits_{x=0}^{n-i}\\sum\\limits_{y=0}^{m-j}\\binom{i}{n}\\binom{j}{m}\\binom{x}{n-i}\\binom{y}{m-j}\\binom{a}{ij}\\binom{b}{xy}\\)</p>"},{"location":"atcoder/abc/abc243/","title":"AtCoder Beginner Contest 243","text":"<p>F - Lottery</p> <p>\u4e00\u5171\u6709 \\(n\\) \u4e2a\u5956\u54c1\uff0c\u83b7\u5f97\u7b2c \\(i\\) \u4e2a\u5956\u54c1\u7684\u6982\u7387\u4e3a \\(p_i\\) \uff08\\(\\sum{p_i}=1\\) \uff09\u3002\u6c42 \\(k\\) \u6b21\u62bd\u5956\u540e\uff0c\u83b7\u5f97\u6070\u597d \\(m\\) \u4e2a\u4e0d\u540c\u5956\u54c1\u7684\u6982\u7387\u3002</p> <p>\\(k,n,m\\leq 50\\)</p> <p>\u591a\u9879\u5206\u5e03\u7684\u6982\u7387\uff1a \\(P(X_1=c_1,\\cdots,X_N=c_N)=\\frac{K!}{\\prod\\limits_{i=1}^{N}{c_i}}\\times\\prod\\limits_{i=1}^{N}{p_i^{c_i}}\\)\uff0c\u5373\u62bd\u6837 \\(K\\) \u6b21\u83b7\u5f97 \\(N\\) \u79cd\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u5176\u4e2d \\(X_i\\) \u51fa\u73b0 \\(c_i\\) \u6b21\u7684\u6982\u7387\u3002 </p> <p>\u5219 \\(f[x][y][z]\\) \u8868\u793a\u7ecf\u8fc7 \\(z\\) \u6b21\u62bd\u5956\uff0c\u5728\u524d \\(i\\) \u79cd\u5956\u54c1\u4e2d\u62bd\u4e2d \\(y\\) \u79cd\u4e0d\u540c\u5956\u54c1\u7684\u6982\u7387\u3002</p> <p>\u679a\u4e3e\u5f53\u524d\u5956\u54c1\u62bd\u4e2d\u7684\u6b21\u6570\uff0c\u5219 \\(f[x+1][y+[a\\not=0]][z+a]\\leftarrow f[x][y][z]\\times \\frac{p_{x+1}^a}{a!}\\)\u3002</p> <p>\u7b54\u6848\u4e3a \\(f[n][m][k]\\times k!\\)\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(nmk^2)\\)\u3002</p> <p>G - Sqrt</p> <p>\u6709\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u5e8f\u5217\uff0c\u7b2c\u4e00\u9879\u4e3a \\(x\\)\u3002\u6784\u9020\u89c4\u5219\u4e3a\u6bcf\u6b21\u9009\u62e9 \\([1,\\lfloor{\\sqrt{x}}\\rfloor]\\) \u4e2d\u7684\u4e00\u4e2a\u6570\u63d2\u5230\u5e8f\u5217\u672b\u5c3e\u3002\u6c42\u6700\u7ec8\u5f97\u5230\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u5e8f\u5217\u3002</p> <p>\\(x\\leq 9\\times 10^{18}\\)</p> <p>\u5f53\u672b\u5c3e\u4e3a \\(1\\) \u65f6\uff0c\u5e8f\u5217\u7684\u540e\u9762\u5c31\u53ea\u80fd\u65e0\u9650\u63d2\u5165 \\(1\\)\uff0c\u65e0\u6cd5\u518d\u4ea7\u751f\u65b0\u7684\u5e8f\u5217\u3002</p> <p>\u6839\u636e \\(x\\) \u7684\u8303\u56f4\uff0c\u5e8f\u5217\u7684\u7b2c\u4e09\u4e2a\u6570\u5c06\u4e0d\u4f1a\u8d85\u8fc7 \\(x^{\\frac{1}{4}}&lt;55000\\)\uff0c\u540e\u9762\u7684\u6570\u53d6\u503c\u8303\u56f4\uff0c\u53ef\u53ea\u4f1a\u66f4\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u7b97\u3002</p> <p>\u8bb0 \\(f_i(x)\\) \u4e3a\u5e8f\u5217\u7b2c \\(i\\) \u4f4d\u4e3a \\(x\\) \u7684\u4e0d\u540c\u5e8f\u5217\u6570\uff0c\u5219 \\(f_{i+1}(a)=\\sum\\limits_{b=a^2}^{x}{f_{i}(b)}\\)\u3002</p> <p>\u800c \\(f_{3}(a)=\\sum\\limits_{b=a^2}^{x}{f_{2}(b)}=\\lfloor{\\sqrt{x}}\\rfloor-a^2+1\\)\uff0c\\(a\\in[1,\\lfloor{x^{\\frac{1}{4}}}\\rfloor]\\)\u3002</p>"},{"location":"atcoder/abc/abc244/","title":"AtCoder Beginner Contest 244","text":"<p>G - Construct Good Path</p> <p>\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u8f93\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(4n\\) \u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u7684\u8bbf\u95ee\u6b21\u6570\u7684\u5947\u5076\u6027\u4e0e\u7ed9\u5b9a\u7684 \\(01\\) \u4e32\u76f8\u540c\u3002</p> <p>\\(n\\leq 10^5\\)</p> <p>\u60f3\u5728\u4e0d\u6539\u53d8\u8def\u5f84\u7684\u524d\u63d0\u4e0b\u6539\u53d8\u67d0\u4e2a\u70b9 \\(a\\) \u7684\u5947\u5076\u6027\uff0c\u53ea\u9700\u8981\u5c06\u67d0\u6761\u8fb9 \\((a,b)\\) \u6765\u56de\u8d70\u4e09\u904d\u5373\u53ef\uff0c\u5373 \\(a\\rightarrow b\\rightarrow (a\\rightarrow b)\\)\uff08\u867d\u7136\u6b64\u65f6 \\(b\\) \u5947\u5076\u6027\u4e5f\u6539\u53d8\u4e86\uff0c\u4f46\u53ef\u4ee5\u7ee7\u7eed\u901a\u8fc7\u8be5\u65b9\u6cd5\u53cd\u8f6c\u5b83\u7684\u5947\u5076\u6027\uff09\u3002</p> <p>\u5f97\u5230\u56fe\u7684\u4efb\u610f\u4e00\u68f5\u751f\u6210\u6811\uff0c\u8bb0\u5f55\u5176\u6b27\u62c9\u5e8f\uff0c\u5219\u6bcf\u4e2a\u70b9\u7684\u8bbf\u95ee\u6b21\u6570\u7684\u5947\u5076\u6027\u5df2\u77e5\u3002\u4ece\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u82e5\u5f53\u524d\u70b9\u7684\u5947\u5076\u6027\u4e0e \\(01\\) \u4e32\u76f8\u5f02\uff0c\u5219\u5728\u8fd4\u56de \\(fa_x\\) \u540e\u518d\u91cd\u590d\u8be5\u8fb9\uff0c\u5373 \\(x\\rightarrow fa_x\\rightarrow (x\\rightarrow fa_x)\\) \uff0c\u6b64\u65f6 \\(x\\) \u4e0e \\(fa_x\\) \u7684\u5947\u5076\u6027\u540c\u65f6\u53cd\u8f6c\u3002\u56de\u5230\u6839\u7ed3\u70b9\u65f6\uff0c\u9664\u6839\u7ed3\u70b9\u5916\u7684\u6240\u6709\u8282\u70b9\u7684\u5947\u5076\u6027\u4e0e\u7ed9\u5b9a \\(01\\) \u4e32\u4e00\u81f4\u3002</p> <p>\u82e5\u6b64\u65f6\u6839\u7ed3\u70b9\u7684\u5947\u5076\u6027\u4e0e \\(01\\) \u4e32\u76f8\u540c\uff0c\u5219\u5df2\u7ecf\u5f97\u5230\u8981\u6c42\u7684\u8def\u5f84\uff0c\u5426\u5219\u53ea\u9700\u8981\u5728\u5e8f\u5217\u672b\u5c3e\u589e\u52a0 \\(root \\rightarrow \\cdots\\rightarrow root(\\rightarrow v\\rightarrow root\\rightarrow v)\\)\uff0c\u6b64\u65f6 \\(v\\) \u7684\u5947\u5076\u6027\u4e0d\u53d8\uff0c\u800c \\(root\\) \u7684\u5947\u5076\u6027\u6539\u53d8\uff0c\u5219\u6240\u6709\u70b9\u7684\u5947\u5076\u6027\u90fd\u4e0e\u7ed9\u5b9a \\(01\\) \u4e32\u76f8\u540c\u3002</p> <p>\u6811\u7684\u6b27\u62c9\u5e8f\u7684\u957f\u5ea6\u4e3a\u6240\u6709\u70b9\u7684\u5ea6\u6570\u4e4b\u548c\uff0c\u4e3a \\(2n-1\\)\u3002\u6700\u52a3\u60c5\u51b5\u4e0b\u6240\u6709\u8fb9\u90fd\u88ab\u91cd\u590d\uff0c\u6b64\u65f6\u957f\u5ea6\u4e3a \\(4n-3\\)\uff0c\u518d\u52a0\u4e0a\u672b\u5c3e\u989d\u5916\u589e\u52a0\u7684\u957f\u5ea6\u4e3a \\(3\\) \u7684\u8def\u5f84 \\(\\rightarrow v\\rightarrow root\\rightarrow v\\)\uff0c\u8def\u5f84\u957f\u5ea6\u7684\u6700\u5927\u503c\u6070\u597d\u4e3a \\(4n\\)\u3002</p>"},{"location":"atcoder/abc/abc245/","title":"AtCoder Beginner Contest 245","text":"<p>E - Wrapping Chocolate</p> <p>\u6709 \\(n\\) \u4e2a\u7269\u54c1\uff0c\u5927\u5c0f\u4e3a \\(a_i\\times b_i\\)\u3002\u6709 \\(m\\) \u4e2a\u76d2\u5b50\uff0c\u5927\u5c0f\u4e3a \\(c_i\\times d_i\\)\u3002\u6bcf\u4e2a\u76d2\u5b50\u81f3\u591a\u653e\u4e00\u4ef6\u7269\u54c1\uff0c\u4e14\u4e0d\u80fd\u65cb\u8f6c\u3002\u6c42\u662f\u5426\u80fd\u5c06\u8fd9 \\(n\\) \u4e2a\u7269\u54c1\u5168\u90e8\u653e\u8fdb\u76d2\u5b50\u4e2d\u3002</p> <p>\\(1\\leq n\\leq m\\leq 2\\times10^5\\)</p> <p>\u672c\u7740\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u663e\u7136\u4f1a\u627e\u5c3d\u53ef\u80fd\u5c0f\u7684\u76d2\u5b50\u6765\u88c5\u7269\u54c1\u3002</p> <p>\u4f46\u662f\u7531\u4e8e\u7269\u54c1\u7684\u5c3a\u5ea6\u6709\u4e24\u7ef4\uff0c\u56e0\u6b64\u9700\u8981\u4fdd\u6301\u4e00\u7ef4\u6709\u5e8f\u7684\u60c5\u51b5\u4e0b\u53d6\u53e6\u4e00\u7ef4\u6700\u5c0f\u7684\u3002</p> <p>\u5c06 \\((a_i,b_i)\\) \u548c \\((c_i,d_i)\\) \u653e\u5728\u4e00\u8d77\uff0c\u5012\u5e8f\u6392\u5e8f\u3002</p> <p>\u6b64\u65f6\uff0c\u82e5\u662f\u4e2a\u76d2\u5b50\uff0c\u5c06\u7b2c\u4e8c\u7ef4 \\(d_i\\) \u653e\u8fdb\u76d2\u5b50\u7684\u96c6\u5408\u4e2d\u3002</p> <p>\u5982\u679c\u662f\u4e2a\u7269\u54c1\u3002\u7531\u4e8e\u7b2c\u4e00\u7ef4\u5df2\u7ecf\u5012\u5e8f\u6392\u5217\uff0c\u56e0\u6b64\u96c6\u5408\u4e2d\u7684\u6240\u6709\u76d2\u5b50\u7684\u7b2c\u4e00\u7ef4\u5747\u6ee1\u8db3\u6761\u4ef6\uff0c\u800c\u6ca1\u6709\u63d2\u5165\u96c6\u5408\u7684\u6240\u6709\u76d2\u5b50\u7684\u7b2c\u4e00\u7ef4\u5747\u4e0d\u7b26\u5408\u6761\u4ef6\u3002\u672c\u7740\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u53d6\u51fa\u96c6\u5408\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e \\(b_i\\) \u7684 \\(d_i\\) \u4e0e\u4e4b\u5339\u914d\u3002\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u65e0\u89e3\u3002</p> <p>\u590d\u6742\u5ea6 \\(O((n+m)\\log(n+m))\\)\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint main() {\n    int n, m;\n\n    cin &gt;&gt; n &gt;&gt; m;\n\n    vector&lt;int&gt; a(n), b(n), c(m), d(m);\n\n    for (auto &amp;x : a)\n        cin &gt;&gt; x;\n\n    for (auto &amp;x : b)\n        cin &gt;&gt; x;\n\n    for (auto &amp;x : c)\n        cin &gt;&gt; x;\n\n    for (auto &amp;x : d)\n        cin &gt;&gt; x;\n\n    vector&lt;array&lt;int, 3&gt;&gt; v;\n\n    for (int i = 0; i &lt; n; ++i)\n        v.push_back({a[i], b[i], 0});\n\n    for (int i = 0; i &lt; m; ++i)\n        v.push_back({c[i], d[i], 1});\n\n    sort(v.begin(), v.end(), greater&lt;array&lt;int, 3&gt;&gt;());\n\n    multiset&lt;int&gt; s;\n\n    for (auto [x, y, z] : v) {\n        if (z == 1)\n            s.insert(y);\n        else {\n            if (s.lower_bound(y) == s.end()) {\n                cout &lt;&lt; \"No\" &lt;&lt; endl;\n                return 0;\n            }\n\n            s.erase(s.lower_bound(y));\n        }\n    }\n\n    cout &lt;&lt; \"Yes\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"atcoder/abc/abc246/","title":"AtCoder Beginner Contest 246","text":"<p>Ex - 01? Queries</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a\\(N\\)\u7684\u4e32\\(S\\)\uff0c\\(S\\)\u4e2d\u53ea\u5305\u542b\\(0,1,?\\)</p> <p>\u4ee5\u53ca\\(Q\\)\u7ec4\u8be2\u95ee\uff0c\\((x_i,c_i)\\)\uff0c\u8868\u793a\u5c06\\(x_i\\)\u5904\u7684\u5b57\u7b26\u6539\u4e3a\\(c_i\\)\u540e\uff0c\u5c06\u6240\u6709\\(?\\)\u81ea\u7531\u5730\u8d4b\u6210\\(0\\)\u6216\\(1\\)\uff0c\u80fd\u4ea7\u751f\u7684\u6240\u6709\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u7684\u6570\u91cf\u3002</p> <p>\\(1 \\leq N,Q \\leq 10^5\\) </p>"},{"location":"atcoder/abc/abc247/","title":"AtCoder Beginner Contest 247","text":"<p>Ex - Rearranging Problem</p> <p>\\(n\\)\u4e2a\u4eba\uff0c\u7f16\u53f7\u4e3a\\(1\\sim n\\)\u6392\u6210\u4e00\u6392\uff0c\u6bcf\u4e2a\u4eba\u6709\u4e2a\u989c\u8272\\(c_i\\)\u3002\u73b0\u5728\u4eba\u7684\u4f4d\u7f6e\u4efb\u610f\u4ea4\u6362\\(K\\)\u6b21\uff0c\u95ee\u6240\u6709\u53ef\u80fd\u5f62\u6210\u7684\u7f16\u53f7\u6392\u5217\u4e2d\u6709\u591a\u5c11\u79cd\u6ee1\u8db3\u7b2c\\(i\\)\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u4eba\u989c\u8272\u4ecd\u4e3a\\(c_i\\)\u3002</p> <p>\\(n\\leq 2\\times 10^5\\)</p> <p>\u8fd9\u4e2a\u9898\u9700\u8981\u77e5\u9053\u51e0\u4e2a\u6027\u8d28\uff1a</p> <ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u4efb\u610f\u4e00\u4e2a\u6392\u5217\uff0c\u8fde\u8fb9\\(i\\rightarrow p_i\\)\uff0c\u5b83\u7f6e\u6362\u6210\u539f\u6392\u5217\u7684\u6700\u5c0f\u6b65\u6570\u5c31\u662f(\\(n-\\)\u73af\u7684\u4e2a\u6570)\u3002</li> <li>\u6bcf\u6b21\u4ea4\u6362\u4f1a\u4f7f\u5f97\u73af\u7684\u4e2a\u6570\\(+1/-1\\)\u3002</li> </ul> <p>\u8bc1\u660e\u7565\u3002</p> <p>\u8003\u8651\u521d\u59cb\u72b6\u6001\u548c\u6700\u7ec8\u72b6\u6001\uff0c\u5b9e\u9645\u4e0a\u5f62\u6210\u7684\u6bcf\u4e2a\u73af\u90fd\u662f\u540c\u8272\u7684\uff0c\u6700\u7ec8\u72b6\u6001\u76f8\u5f53\u4e8e\u4ece\u6bcf\u79cd\u989c\u8272\u9009\u82e5\u5e72\u4e2a\u73af\u3002\u5047\u8bbe\u603b\u5171\u9009\u4e86\\(c\\)\u4e2a\uff0c\u90a3\u4e48\u5f53\\(n-c\\leq K\\)\u4e14\\((K-(n-c))\\equiv 0(\\text{mod}\\ 2)\\)\u65f6\uff0c\u8fd9\u4e2a\u65b9\u6848\u662f\u5408\u6cd5\u7684\u3002</p> <p>\u6211\u4eec\u5bf9\u6bcf\u79cd\u989c\u8272\u5206\u522b\u6c42\u51fa\u5f62\u6210\\(1\\sim cnt\\)\u4e2a\u73af\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u5377\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\u8003\u8651\u73b0\u5728\u67d0\u79cd\u989c\u8272\u6709\\(n\\)\u4e2a\uff0c\u8981\u5f62\u6210\\(k\\)\u4e2a\u73af\uff0c\u7b49\u4ef7\u4e8e\u4e2a\u5143\u7d20\u5212\u5206\u6210\\(k\\)\u4e2a\u975e\u7a7a\u8f6e\u6362\u7684\u65b9\u6848\u6570\uff0c\u4e5f\u5373\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u591a\u9879\u5f0f\u6c42\u4e00\u4e0b\u3002</p> <p>\u6700\u540e\u9700\u8981\u5806\u4f18\u5316\u7684\u5408\u5e76\uff0c\u590d\u6742\u5ea6\\(O(n\\log ^2n)\\)</p> <p>\u6d4b\u8bd5\u4e86\u4e00\u4e0b\u591a\u9879\u5f0f\u677f\u5b50\uff0c\u7528\u8d77\u6765\u8fd8\u53ef\u4ee5\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\nusing namespace std;\n\nusing vi=vector&lt;int&gt;;\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N =(1&lt;&lt;20)|100;\nconst int p = 998244353, gg = 3, ig = 332738118, img = 86583718;\nconst int mod = 998244353;\n\nint qpow(int x,int y){\n    int ret=1;\n    for(;y;y&gt;&gt;=1,x=1ll*x*x%mod)\n        if(y&amp;1) ret=1ll*ret*x%mod;\n    return ret;\n}\n\nnamespace Poly\n{\n    #define mul(x, y) (1ll * x * y &gt;= mod ? 1ll * x * y % mod : 1ll * x * y)\n    #define minus(x, y) (1ll * x - y &lt; 0 ? 1ll * x - y + mod : 1ll * x - y)\n    #define plus(x, y) (1ll * x + y &gt;= mod ? 1ll * x + y - mod : 1ll * x + y)\n    #define ck(x) (x &gt;= mod ? x - mod : x)//\u53d6\u6a21\u8fd0\u7b97\u592a\u6162\u4e86\n\n    typedef vector&lt;int&gt; poly;\n    const int G = 3;//\u6839\u636e\u5177\u4f53\u7684\u6a21\u6570\u800c\u5b9a\uff0c\u539f\u6839\u53ef\u4e0d\u4e00\u5b9a\u4e0d\u4e00\u6837\uff01\uff01\uff01\n    //\u4e00\u822c\u6a21\u6570\u7684\u539f\u6839\u4e3a 2 3 5 7 10 6\n    const int inv_G = qpow(G, mod - 2);\n    int RR[N], deer[2][19][N], inv[N];\n\n\n    void init(const int t) {//\u9884\u5904\u7406\u51fa\u6765NTT\u91cc\u9700\u8981\u7684w\u548cwn\uff0c\u780d\u6389\u4e86\u4e00\u4e2alog\u7684\u65f6\u95f4\n        for(int p = 1; p &lt;= t; ++ p) {\n            int buf1 = qpow(G, (mod - 1) / (1 &lt;&lt; p));\n            int buf0 = qpow(inv_G, (mod - 1) / (1 &lt;&lt; p));\n            deer[0][p][0] = deer[1][p][0] = 1;\n            for(int i = 1; i &lt; (1 &lt;&lt; p); ++ i) {\n                deer[0][p][i] = 1ll * deer[0][p][i - 1] * buf0 % mod;//\u9006\n                deer[1][p][i] = 1ll * deer[1][p][i - 1] * buf1 % mod;\n            }\n        }\n        inv[1] = 1;\n        for(int i = 2; i &lt;= (1 &lt;&lt; t); ++ i)\n            inv[i] = 1ll * inv[mod % i] * (mod - mod / i) % mod;\n    }\n\n    int NTT_init(int n) {//\u5feb\u901f\u6570\u8bba\u53d8\u6362\u9884\u5904\u7406\n        int limit = 1, L = 0;\n        while(limit &lt;= n) limit &lt;&lt;= 1, L ++ ;\n        for(int i = 0; i &lt; limit; ++ i)\n            RR[i] = (RR[i &gt;&gt; 1] &gt;&gt; 1) | ((i &amp; 1) &lt;&lt; (L - 1));\n        return limit;\n    }\n\n    void NTT(poly &amp;A, int type, int limit) {//\u5feb\u901f\u6570\u8bba\u53d8\u6362\n        A.resize(limit);\n        for(int i = 0; i &lt; limit; ++ i)\n            if(i &lt; RR[i])\n                swap(A[i], A[RR[i]]);\n        for(int mid = 2, j = 1; mid &lt;= limit; mid &lt;&lt;= 1, ++ j) {\n            int len = mid &gt;&gt; 1;\n            for(int pos = 0; pos &lt; limit; pos += mid) {\n                int *wn = deer[type][j];\n                for(int i = pos; i &lt; pos + len; ++ i, ++ wn) {\n                    int tmp = 1ll * (*wn) * A[i + len] % mod;\n                    A[i + len] = ck(A[i] - tmp + mod);\n                    A[i] = ck(A[i] + tmp);\n                }\n            }\n        }\n        if(type == 0) {\n            for(int i = 0; i &lt; limit; ++ i)\n                A[i] = 1ll * A[i] * inv[limit] % mod;\n        }\n    }\n\n    poly poly_mul(poly A, poly B) {//\u591a\u9879\u5f0f\u4e58\u6cd5\n        int deg = A.size() + B.size() - 1;\n        int limit = NTT_init(deg);\n        poly C(limit);\n        NTT(A, 1, limit);\n        NTT(B, 1, limit);\n        for(int i = 0; i &lt; limit; ++ i)\n            C[i] = 1ll * A[i] * B[i] % mod;\n        NTT(C, 0, limit);\n        C.resize(deg);\n        return C;\n    }\n\n    poly poly_inv(poly &amp;f, int deg) {//\u591a\u9879\u5f0f\u6c42\u9006\n        if(deg == 1)\n            return poly(1, qpow(f[0], mod - 2));\n\n        poly A(f.begin(), f.begin() + deg);\n        poly B = poly_inv(f, (deg + 1) &gt;&gt; 1);\n        int limit = NTT_init(deg &lt;&lt; 1);\n        NTT(A, 1, limit), NTT(B, 1, limit);\n        for(int i = 0; i &lt; limit; ++ i)\n            A[i] = B[i] * (2 - 1ll * A[i] * B[i] % mod + mod) % mod;\n        NTT(A, 0, limit);\n        A.resize(deg);\n        return A;\n    }\n\n    poly poly_dev(poly f) {//\u591a\u9879\u5f0f\u6c42\u5bfc\n        int n = f.size();\n        for(int i = 1; i &lt; n; ++ i) f[i - 1] = 1ll * f[i] * i % mod;\n        return f.resize(n - 1), f;//f[0] = 0\uff0c\u8fd9\u91cc\u76f4\u63a5\u6254\u4e86,\u4ece1\u5f00\u59cb\n    }\n\n    poly poly_idev(poly f) {//\u591a\u9879\u5f0f\u6c42\u79ef\u5206\n        int n = f.size();\n        for(int i = n - 1; i ; -- i) f[i] = 1ll * f[i - 1] * inv[i] % mod;\n        return f[0] = 0, f;\n    }\n\n    poly poly_ln(poly f, int deg) {//\u591a\u9879\u5f0f\u6c42\u5bf9\u6570\n        poly A = poly_idev(poly_mul(poly_dev(f), poly_inv(f, deg)));\n        return A.resize(deg), A;\n    }\n\n    poly poly_exp(poly &amp;f, int deg) {//\u591a\u9879\u5f0f\u6c42\u6307\u6570\n        if(deg == 1)\n            return poly(1, 1);\n\n        poly B = poly_exp(f, (deg + 1) &gt;&gt; 1);\n        B.resize(deg);\n        poly lnB = poly_ln(B, deg);\n        for(int i = 0; i &lt; deg; ++ i)\n            lnB[i] = ck(f[i] - lnB[i] + mod);\n\n        int limit = NTT_init(deg &lt;&lt; 1);//n -&gt; n^2\n        NTT(B, 1, limit), NTT(lnB, 1, limit);\n        for(int i = 0; i &lt; limit; ++ i)\n            B[i] = 1ll * B[i] * (1 + lnB[i]) % mod;\n        NTT(B, 0, limit);\n        B.resize(deg);\n        return B;\n    }\n\n    poly poly_sqrt(poly &amp;f, int deg) {//\u591a\u9879\u5f0f\u5f00\u65b9\n        if(deg == 1) return poly(1, 1);\n        poly A(f.begin(), f.begin() + deg);\n        poly B = poly_sqrt(f, (deg + 1) &gt;&gt; 1);\n        poly IB = poly_inv(B, deg);\n        int limit = NTT_init(deg &lt;&lt; 1);\n        NTT(A, 1, limit), NTT(IB, 1, limit);\n        for(int i = 0; i &lt; limit; ++ i)\n            A[i] = 1ll * A[i] * IB[i] % mod;\n        NTT(A, 0, limit);\n        for(int i =0; i &lt; deg; ++ i)\n            A[i] = 1ll * (A[i] + B[i]) * inv[2] % mod;\n        A.resize(deg);\n        return A;\n    }\n\n    poly poly_pow(poly f, int k) {//\u591a\u9879\u5f0f\u5feb\u901f\u5e42\n        f = poly_ln(f, f.size());\n        for(auto &amp;x : f) x = 1ll * x * k % mod;\n        return poly_exp(f, f.size());\n    }\n\n    poly poly_cos(poly f, int deg) {//\u591a\u9879\u5f0f\u4e09\u89d2\u51fd\u6570\uff08cos\uff09\n        poly A(f.begin(), f.begin() + deg);\n        poly B(deg), C(deg);\n        for(int i = 0; i &lt; deg; ++ i)\n            A[i] = 1ll * A[i] * img % mod;\n\n        B = poly_exp(A, deg);\n        C = poly_inv(B, deg);\n        int inv2 = qpow(2, mod - 2);\n        for(int i = 0; i &lt; deg; ++ i)\n            A[i] = 1ll * (1ll * B[i] + C[i]) % mod * inv2 % mod;\n        return A;\n    }\n\n    poly poly_sin(poly f, int deg) {//\u591a\u9879\u5f0f\u4e09\u89d2\u51fd\u6570\uff08sin\uff09\n        poly A(f.begin(), f.begin() + deg);\n        poly B(deg), C(deg);\n        for(int i = 0; i &lt; deg; ++ i)\n            A[i] = 1ll * A[i] * img % mod;\n\n        B = poly_exp(A, deg);\n        C = poly_inv(B, deg);\n        int inv2i = qpow(img &lt;&lt; 1, mod - 2);\n        for(int i = 0; i &lt; deg; ++ i)\n            A[i] = 1ll * (1ll * B[i] - C[i] + mod) % mod * inv2i % mod;\n        return A;\n    }\n\n    poly poly_arcsin(poly f, int deg) {\n        poly A(f.size()), B(f.size()), C(f.size());\n        A = poly_dev(f);\n        B = poly_mul(f, f);\n        for(int i = 0; i &lt; deg; ++ i)\n            B[i] = minus(mod, B[i]);\n        B[0] = plus(B[0], 1);\n        C = poly_sqrt(B, deg);\n        C = poly_inv(C, deg);\n        C = poly_mul(A, C);\n        C = poly_idev(C);\n        return C;\n    }\n\n    poly poly_arctan(poly f, int deg) {\n        poly A(f.size()), B(f.size()), C(f.size());\n        A = poly_dev(f);\n        B = poly_mul(f, f);\n        B[0] = plus(B[0], 1);\n        C = poly_inv(B, deg);\n        C = poly_mul(A, C);\n        C = poly_idev(C);\n        return C;\n    }\n\n\n    poly multiply_all(vector&lt;poly&gt;p){\n        int len=p.size();\n        priority_queue&lt;pii,vector&lt;pii&gt;,greater&lt;pii&gt; &gt;q;\n        for(int i=0;i&lt;len;++i) q.push(mkp(p[i].size(),i));\n        for(;len&gt;1;){\n            auto u=q.top();q.pop();\n            auto v=q.top();q.pop();\n            --len;\n            p[v.se]=poly_mul(p[u.se],p[v.se]);\n            q.push(mkp(p[v.se].size(),v.se));\n        }\n        return p[q.top().se];\n    }\n}\n\nusing Poly::poly;\n\nint n,K;\nint cnt[N];\n\npoly calc(int n){\n    if(n==1) return {0,1};\n    vector&lt;poly&gt; p;\n    for(int i=0;i&lt;n;++i) p.pb({i,1});\n    return Poly::multiply_all(p);\n/*\n\u4f3c\u4e4e\u5199\nn=1 {1}\nelse i=1~n-1,{1,i}\n\u7b2ci\u9879\u5c31\u662fs(n,n-i)\n*/\n}\n\nvoid solve(){\n    Poly::init(19);\n    int n=read(),K=read();\n    for(int i=1;i&lt;=n;++i) ++cnt[read()];\n\n    vector&lt;poly&gt; vec;\n    for(int i=1;i&lt;=n;++i) \n        if(cnt[i]) vec.pb(calc(cnt[i]));\n    poly ans=Poly::multiply_all(vec);int fans=0;\n    for(int i=1;i&lt;(int)ans.size();++i)\n        if((K-(n-i))%2==0 &amp;&amp; n-i&lt;=K &amp;&amp; n-i&gt;=0) fans=(fans+ans[i])%mod;\n    printf(\"%d\\n\",fans);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>\u5176\u4ed6\u9898\u76ee\u5176\u5b9e\u6ca1\u5565\u8bb2\u7684\uff0cE\u9898\u5199\u4e86\u4e2ast\u8868+\u4e8c\u5206\u641e\u8fc7\u53bb\u7684\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662fC\u9898dls\u7ed9\u4e86\u4e00\u4e2a\u770b\u4e0a\u53bb\u5f88\u5389\u5bb3\u7684\u4e1c\u897f\u53ebbasic_string <p>\u8fd9\u4e2a\u4e1c\u897f\u597d\u50cf\u662fstring\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u4e00\u822cType\u662fchar\uff0c\u5b83\u7c7b\u4f3c\u4e00\u4e2a\u53ef\u62fc\u63a5\u7684vector\uff0c\u4e8e\u662f\u6211\u4eec\u6709\u4e86string\u91cc\u9762\u7684'+'\u64cd\u4f5c\u3002</p> <p>\u4f46\u662f\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u7528\u5176\u4ed6\u7c7b\u578b\u6765\u66ff\u6362\uff0c\u6bd4\u5982\u8bf4int\uff0c\u4e8e\u662fC\u9898\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a</p> <pre><code>int n;\nbasic_string&lt;int&gt;s;\nvoid solve(){\n    int n=read();\n    s={1};\n    for(int i=2;i&lt;=n;++i){\n        s=s+basic_string&lt;int&gt;{i}+s;\n    }\n    for(auto v:s) printf(\"%d \",v); \n    puts(\"\");\n}\n</code></pre> <p>\u7136\u540e\u8fd8\u53ef\u4ee5\u7528string\u91cc\u9762\u4f1a\u7528\u5230\u7684.find()\u4e4b\u7c7b\u7684\u51fd\u6570\u3002</p> <p>\u4f3c\u4e4e\u8fd9\u4e2aType\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u4f46\u662f\u9700\u8981\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u53ef\u60dc\u6211\u4e0d\u592a\u4f1a\uff0c\u770b\u961f\u53cb\u600e\u4e48\u586b\u4e2a\u5751\uff0c\u4ee5\u540evector\u5c31\u88ab\u6dd8\u6c70\u4e86\uff08bushi\uff09\u3002</p>"},{"location":"atcoder/abc/abc248/","title":"AtCoder Beginner Contest 248","text":"<p>G - GCD cost on the tree</p> <p>\u6811\u4e0a\u4e00\u6761\u8def\u5f84\u7684\u6743\u503c\u5b9a\u4e49\u4e3a\uff08\u8282\u70b9\u6570\\(\\times\\)\u8282\u70b9\\(\\gcd\\)\uff09\uff0c\u6c42\u6240\u6709\u8def\u5f84\u7684\u6743\u503c\u548c\u3002</p> <p>\\(n,a_i\\leq 10^5\\)</p> <p>\u4e00\u4e2a\u66b4\u529b\u7684\u601d\u8def\u662f\u76f4\u63a5\u6dc0\u7c89\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f\u4e0d\u5bf9\u7684\uff0c\u8d5b\u65f6\u76f4\u63a5\u8dd1\u8fc7\u53bb\u4e86\u3002</p> <p>\u70b9\u5206\u4ee5\u540e\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\u3002\u5bf9\u4e8e\u6bcf\u68f5\u5b50\u6811\uff0c\u6211\u4eec\u7edf\u8ba1\u51fa\u6240\u6709\u7684\\(\\gcd\\)\u548c\u5b83\u4eec\u7684\u8def\u5f84\u957f\u5ea6\u548c\u3001\u8def\u5f84\u6761\u6570\uff0c\u5408\u5e76\u7684\u65f6\u5019\u7edf\u8ba1\u65b9\u6cd5\u663e\u7136\u3002</p> <p>\u590d\u6742\u5ea6\u65b9\u9762\uff0c\u5bf9\u4e00\u4e2a\u5b50\u6811\u6765\u8bf4\uff0c\\(\\gcd\\)\u79cd\u7c7b\u662f\\(O(n^{\\frac 1 3})\\)\u7ea7\u522b\u7684\uff0c\u4f46\u662f\u591a\u4e2a\u5b50\u6811\u5408\u5e76\u5728\u4e00\u8d77\u540e\u5c31\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u4e86\uff0c\u4e8e\u662f\u5c31\u5bc4\u4e86\u3002</p> <p>\u4e00\u4e2a\u7b80\u660e\u7684\u601d\u8def\u662f\u76f4\u63a5\u53cd\u6f14\uff0c\\(\\sum_{d|n}\\varphi(d)=n\\)\uff0c\u6211\u4eec\u8003\u8651\u6240\u6709\u542b\u6709\u56e0\u5b50\\(d\\)\u7684\u6570\u7ec4\u6210\u7684\u8fde\u901a\u5757\uff0c\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u5b83\u8d21\u732e\u7684\u7b54\u6848\u5c31\u662f\\(\\varphi(d)\\cdot sum(d)\\)\uff0c\u5176\u4e2d\\(sum(d)\\)\u8868\u793a\u957f\u5ea6\\(&gt;1\\)\u7684\u8def\u5f84\u957f\u5ea6\u548c\u3002</p> <p>\u4e8e\u662f\\(\\sum_{d=1}^{\\max(a_i)}\\varphi(d)\\cdot sum(d)\\)\u5373\u4e3a\u6700\u7ec8\u7b54\u6848\uff0c\u5bf9\u6bcf\u4e2a\\(d\\)\u505a\u4e00\u6b21dp\u5373\u53ef\u3002</p> <p>\u7531\u4e8e\u6bcf\u4e2a\u6570\u7684\u7ea6\u6570\u4e2a\u6570\u662f\\(O(n^{\\frac 1 3})\\)\u7ea7\u522b\u7684\uff0c\u90a3\u4e48\u6700\u540e\u7684\u590d\u6742\u5ea6\u662f\\(O(n^{\\frac 4 3})\\)\u3002</p> <p>\u4ee3\u7801\u5c31\u61d2\u5f97\u5199\u4e86\uff0c\u770b\u961f\u53cb\u5199\u4e0d\u5199\u5427\u3002</p> <p>\u6dc0\u7c89\u505a\u6cd5\uff1a</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define int long long\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\nconst int N=2e5+10,mod=998244353;\nconst db inf=(db)1e18,eps=1e-8;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nint n,K,root,tot,ans;\nint a[N],siz[N],son[N],mark[N];\nvector&lt;int&gt;G[N];\n\nvoid getroot(int x,int fa){\n    siz[x]=1;son[x]=0;\n    for(auto v:G[x]){\n        if(v==fa || mark[v]) continue;\n        getroot(v,x);\n        siz[x]+=siz[v];\n        son[x]=max(son[x],siz[v]);\n    }\n    son[x]=max(son[x],tot-siz[x]);\n    if(son[x]&lt;son[root]) root=x;\n}\n\nunordered_map&lt;int,pair&lt;int,int&gt; &gt;now,las;\nvoid dfs(int x,int fa,int val,int ds){\n    if(!now.count(val)) now[val]=mkp(0,0);\n    now[val].fi+=ds;now[val].se++;\n    now[val].fi%=mod;\n    for(auto v:G[x]){\n        if(v==fa || mark[v]) continue;\n        dfs(v,x,__gcd(val,a[v]),ds+1); \n    }\n}\n\nvoid solve(int x){\n    las.clear();\n    las[a[x]]=mkp(1,1);//length,cnt\n    for(auto v:G[x]){\n        if(mark[v]) continue;\n        now.clear();\n        dfs(v,x,__gcd(a[x],a[v]),2);\n        for(auto i:now){\n            for(auto j:las){\n                ans+=(i.se.fi%mod*j.se.se%mod+i.se.se%mod*j.se.fi%mod)%mod*__gcd(i.fi,j.fi)%mod;\n                ans%=mod;\n                ans-=(i.se.se*j.se.se%mod*__gcd(i.fi,j.fi));\n                ans%=mod;\n            }\n        }\n        for(auto i:now){\n            if(!las.count(i.fi)) las[i.fi]=mkp(0,0);\n            las[i.fi].fi+=i.se.fi;las[i.fi].se+=i.se.se;\n            las[i.fi].fi%=mod;\n        }\n    }\n}\n\nvoid divide(int x){\n    mark[x]=1;\n    solve(x);\n    for(auto v:G[x]){\n        if(mark[v]) continue;\n        son[root=0]=tot=siz[v];\n        getroot(v,v);\n        divide(root);\n    }\n}\n\nvoid solve(){\n    n=read();\n    for(int i=1;i&lt;=n;++i) a[i]=read();\n    for(int i=1;i&lt;n;++i){\n        int u=read(),v=read();\n        G[u].pb(v);G[v].pb(u);\n    }\n    son[root=0]=tot=n;\n    getroot(1,1);\n    divide(root);\n    ans=(ans%mod+mod)%mod;\n    printf(\"%lld\\n\",ans);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>Ex - Beautiful Subsequences</p> <p>\u7ed9\u5b9a\u5e8f\u5217\\(a_i\\)\u548c\\(K\\)\uff0c\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4\u4e2a\u6570\uff1a</p> <ul> <li>\\(\\max(a_l,\\dots,a_r)-\\min(a_l,\\dots,a_r)\\leq r-l+K\\)</li> </ul> <p>\\(n\\leq 1.4\\times 10^5,0\\leq K\\leq 3\\)</p> <p>\u5206\u6cbb\u505a\u6cd5\uff1a</p> <p>\u5047\u8bbe\u4ee5\\(mid\\)\u4e3a\u5206\u754c\u7ebf\uff0c\u6211\u4eec\u6c42\u51fa\u5de6\u8fb9\u7684\u540e\u7f00\\(\\min,\\max\\)\uff0c\u53f3\u8fb9\u524d\u7f00\\(\\min,\\max\\)\uff0c\u8003\u8651\u5408\u5e76\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u4e2a\u6570\u3002</p> <p>\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\\(k=[0,K]\\)\uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u5f0f\u5b50\u53ef\u4ee5\u53d8\u6362\u4e3a\uff1a</p> \\[\\max-\\min-k= r-l\\] <p>\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\\(\\max,\\min\\)\u7684\u6765\u6e90\uff0c\u4e00\u5171\u6709\u56db\u79cd\u60c5\u51b5\uff0c\u4e0b\u9762\u53ea\u5199\u51fa\u4e24\u79cd\uff0c\u53e6\u5916\u4e24\u79cd\u663e\u7136\u662f\u5bf9\u79f0\u7684\uff1a</p> <ul> <li>\\(\\max,\\min\\)\u90fd\u5728\u5de6\u8fb9</li> </ul> <p>\u6211\u4eec\u679a\u4e3e\\(l=[mid,L]\\)\uff0c\u53ef\u4ee5\u7b97\u51fa\u6765\u5bf9\u5e94\u7684\\(r\\)\uff0c\u7136\u540echeck\u4e00\u4e0b\\(\\min,max\\)\u662f\u5426\u6ee1\u8db3\u5373\u53ef\u3002</p> <ul> <li>\\(\\max\\)\u5728\u5de6\u8fb9\uff0c\\(\\min\\)\u5728\u53f3\u8fb9</li> </ul> <p>\u79fb\u9879\u53ef\u77e5\\(\\max+l-k=\\min+r\\)\uff0c\u6211\u4eec\u679a\u4e3e\\(l=[mid,L]\\)\uff0c\u90a3\u4e48\u6ee1\u8db3\\(\\max_r\\leq \\max_l\\)\u8fd9\u4e2a\u6761\u4ef6\u7684\\(r\\)\u4e00\u5b9a\u662f\u5355\u8c03\u7684\uff0c\u540c\u65f6\u6ee1\u8db3\\(\\min_r\\leq \\min_l\\)\u8fd9\u4e2a\u6761\u4ef6\u7684\\(r\\)\u4e5f\u662f\u5355\u8c03\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6709\u54ea\u4e9b\u4f4d\u7f6e\u662f\u5408\u6cd5\u7684\u3002\u800c\u4e14\u5982\u679c\\(\\max+l-k\\)\u7684\u8fd9\u4e2a\u503c\u5982\u679c\u5728\\(l\\)\u5c0f\u7684\u65f6\u5019\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u5728\\(l\\)\u5927\u7684\u65f6\u5019\u4e5f\u6ee1\u8db3\u6761\u4ef6\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4e00\u4e2acnt\u6570\u7ec4\uff0c\u5728\u53f3\u79fb\\(r\\)\u7684\u65f6\u5019\u987a\u4fbf\u8bb0\u5f55\u4e0b\u5408\u6cd5\u7684\\(mn[r]+r\\)\u7684\u6bcf\u4e2a\u503c\u4e2a\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u77e5\u9053\u4e00\u4e2a\\(l\\)\u8d21\u732e\u591a\u5c11\u4e2a\\(r\\)\u4e86\u3002</p> <p>\u6700\u540e\u590d\u6742\u5ea6\\(T(n)=2T(\\frac n 2)+O(nk)=O(nk\\log n)\\)</p> <p>\u7ebf\u6bb5\u6811\u505a\u6cd5\uff1a</p> <p>\u6211\u4eec\u8003\u8651\u679a\u4e3e\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff0c\u7ef4\u62a4\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u5de6\u7aef\u70b9\u3002\u6216\u8005\u8bf4\uff0c\u6211\u4eec\u679a\u4e3e\\(R\\)\uff0c\u5bf9\u6240\u6709\u7684\\(L\\)\u6765\u7ef4\u62a4\\(\\max-\\min-(R-L)\\)</p> <p>\u4e0d\u59a8\u5148\u8003\u8651\\(k=0\\)\u7684\u65f6\u5019\u3002</p> \\[\\max-\\min-r+l=0\\] <p>\u5bf9\\(R-L\\)\u7684\u503c\u6211\u4eec\u662f\u5f88\u5bb9\u6613\u7ef4\u62a4\u7684\uff0c\u5173\u952e\u7ef4\u62a4\u8fd9\u4e2a\\(\\max\\)\u548c\\(\\min\\)\u3002\u8fd9\u4e2a\u4e8b\u5b9e\u4e0a\u4e5f\u5f88\u5bb9\u6613\u7ef4\u62a4\uff0c\u5957\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u5728\u5165\u6808\u548c\u51fa\u6808\u7684\u65f6\u5019\u4fee\u6539\u7ebf\u6bb5\u6811\u4e0a\u7684\u503c\u5373\u53ef\u3002</p> <p>\u6700\u540e\u5bf9\\(k\\neq 0\\)\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u5728\u4fee\u6539\u7684\u65f6\u5019\u7edf\u8ba1\u8fdb\\(r-l\\)\u7684\u8d21\u732e\u5373\u53ef\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u591a\u4e2a\u503c\u6765\u5b9e\u73b0\u3002</p> <p>\u590d\u6742\u5ea6\\(O(nk\\log n)\\)</p> <p>\u4ee3\u7801\u61d2\u5f97\u5199\u3002</p> <pre><code>/*\n\u5206\u6cbb\u505a\u6cd5\n*/\n#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define int long long\nusing namespace std;\n\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\nconst int N=150010,mod=1000000007,inf=1e9+7;\n\nint n,K,ans;\nint a[N],mx[N],mn[N],cnt[N&lt;&lt;1];\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nvoid solve(int l,int r){\n    if(l==r){\n        ++ans;\n        return;\n    }\n    int mid=(l+r)&gt;&gt;1;\n    mx[mid]=mn[mid]=a[mid];\n    for(int i=mid-1;i&gt;=l;--i) \n        mx[i]=max(mx[i+1],a[i]),mn[i]=min(mn[i+1],a[i]);\n    mx[mid+1]=mn[mid+1]=a[mid+1];\n    for(int i=mid+2;i&lt;=r;++i)\n        mx[i]=max(mx[i-1],a[i]),mn[i]=min(mn[i-1],a[i]);\n    for(int L=mid;L&gt;=l;--L) for(int k=0;k&lt;=K;++k){\n        int R=mx[L]-mn[L]+L-k;\n        if(R&gt;mid &amp;&amp; R&lt;=r) ans+=(mx[L]&gt;mx[R] &amp;&amp; mn[L]&lt;mn[R]);\n    }//all from left\n    for(int R=mid+1;R&lt;=r;++R) for(int k=0;k&lt;=K;++k){\n        int L=R-mx[R]+mn[R]+k;\n        if(L&lt;=mid &amp;&amp; L&gt;=l) ans+=(mx[R]&gt;mx[L] &amp;&amp; mn[R]&lt;mn[L]);\n    }//all from right\n    for(int L=mid,R=mid+1,tr=mid+1;L&gt;=l;--L){\n        while(R&lt;=r &amp;&amp; mx[R]&lt;mx[L]) ++cnt[R+mn[R]],++R;\n        while(tr&lt;R &amp;&amp; mn[tr]&gt;mn[L]) --cnt[tr+mn[tr]],++tr;\n        for(int k=0;k&lt;=K;++k)\n            if(L+mx[L]&gt;k) ans+=cnt[L+mx[L]-k];\n    }//max left,min right\n    for(int i=mid+1;i&lt;=r;++i) cnt[i+mn[i]]=0;\n    for(int R=mid+1,L=mid,tl=mid;R&lt;=r;++R){\n        while(L&gt;=l &amp;&amp; mx[L]&lt;mx[R]) ++cnt[L-mn[L]+n],--L;\n        while(tl&gt;L &amp;&amp; mn[tl]&gt;mn[R]) --cnt[tl-mn[tl]+n],--tl;\n        for(int k=0;k&lt;=K;++k)\n            ans+=cnt[R-mx[R]+k+n];\n    }//max right,min left\n    for(int i=l;i&lt;=mid;++i) cnt[i-mn[i]+n]=0;\n    solve(l,mid);solve(mid+1,r);\n}\n\n\nvoid solve(){\n    n=read();K=read();\n    for(int i=1;i&lt;=n;++i) a[i]=read();\n    solve(1,n);\n    printf(\"%lld\\n\",ans);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"atcoder/abc/abc249/","title":"AtCoder Beginner Contest 249","text":"<p>E - RLE</p> <p>\u4e00\u4e2a\u5b57\u7b26\u4e32\\(S\\)\uff0c\u5b9a\u4e49\\(f(S)\\)\u4e3a\u5c06\\(S\\)\u4e2d\u6240\u6709\u8fde\u7eed\u4e00\u6bb5\u76f8\u540c\u5b57\u7b26\\(c\\)\u53d8\u6210\\(xc\\)\u7684\u683c\u5f0f\uff0c\u5176\u4e2d\\(x\\)\u662f\u4e2a\u6570\uff0c\u4f8b\u5982\\(aaacc\\)\u4f1a\u53d8\u6210\\(3a2c\\)\u3002\u95ee\u6709\u591a\u5c11\u4e2a\u957f\u5ea6\u4e3a\\(n\\)\u7684\u5c0f\u5199\u5b57\u7b26\u4e32\\(s\\)\uff0c\u6ee1\u8db3\\(|f(s)|&lt;|s|\\)\u3002</p> <p>\\(|s|\\leq 3000\\)\uff0c\u7b54\u6848\u5bf9\u4e00\u4e2a\u7d20\u6570\\(P\\)\u53d6\u6a21\u3002</p> <p>\u9996\u5148\u8fd9\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u591a\uff0c\u6240\u4ee5\u8fde\u7eed\u4e00\u6bb5\u5b57\u7b26\u8f6c\u6362\u540e\u7684\u957f\u5ea6\u4e00\u5171\u5c314\u79cd\uff082,3,4,5\uff09\u3002\u6211\u4eec\u8bbe\\(f[i][j]\\)\u8868\u793a\u957f\u5ea6\u4e3a\\(i\\)\u7684\u539f\u4e32\uff0c\u8f6c\u6362\u540e\u957f\u5ea6\u4e3a\\(j\\)\u7684\u6709\u591a\u5c11\u4e2a\uff0c\u8f6c\u79fb\u5f62\u5982\\(f[i][j]\\rightarrow f[i+k][j+g(k)]\\)\uff0c\u7cfb\u6570\u5728\\(i\\neq 0\\)\u7684\u65f6\u5019\u662f26\uff0c\u5426\u5219\u662f25\u3002</p> <p>\u89c2\u5bdf\u5230\u8fd9\u4e2a\u7684\u8d21\u732e\u5b9e\u9645\u4e0a\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5dee\u5206\u6216\u8005\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n^2)\\)\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=3005;\n\nint n,mod;\nint f[N][N],sum[N][N];\nint c[]={1,10,100,1000},d[]={2,3,4,5};\n\nint upm(int x){return (x%mod+mod)%mod;}\nvoid up(int &amp;x,int y){x=upm(x+y);}\n\nvoid solve(){\n    n=read();mod=read();\n\n    f[0][0]=1;\n    for(int i=0;i&lt;=n;++i){\n        for(int j=0;j&lt;=n;++j){\n            if(i) up(sum[i][j],sum[i-1][j]);\n            up(f[i][j],sum[i][j]);\n        }\n        for(int j=0;j&lt;=n;++j){\n            int t=f[i][j]*(26-(i!=0))%mod;\n            for(int k=0;k&lt;4;++k){\n                if(i+c[k]&lt;=n &amp;&amp; j+d[k]&lt;=n) up(sum[i+c[k]][j+d[k]],t);\n                if(k&lt;3 &amp;&amp; i+c[k+1]&lt;=n &amp;&amp; j+d[k]&lt;=n) up(sum[i+c[k+1]][j+d[k]],-t);\n            }\n        }\n    }\n\n    int ans=0;\n    for(int i=0;i&lt;n;++i) up(ans,f[n][i]);\n    printf(\"%lld\\n\",ans);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>F - Ignore Operations</p> <p>\u521d\u59cb\u6709\u4e00\u4e2a\u6570\u5b57\\(x=0\\)\uff0c\u73b0\u5728\u7ed9\u51fa\\(n\\)\u4e2a\u64cd\u4f5c\uff0c\u5f62\u5982\\((t_i,y_i)\\)\u3002</p> <ul> <li>\u82e5\\(t_i=1\\)\uff0c\u5219\u4ee4\\(x=y_i\\)</li> <li>\u82e5\\(t_i=2\\)\uff0c\u5219\u4ee4\\(x=x+y_i\\)</li> </ul> <p>\u73b0\u5728\u4f60\u9700\u8981\u6309\u987a\u5e8f\u8fdb\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u4f46\u53ef\u4ee5\u8df3\u8fc7\u5176\u4e2d\u7684\\(K\\)\u4e2a\uff0c\u95ee\u6700\u7ec8\u7684\\(x\\)\u6700\u5927\u503c\u53ef\u4ee5\u662f\u591a\u5c11</p> <p>\\(n\\leq 2\\times10^5,|y_i|\\leq 10^9\\)</p> <p>\u6211\u4eec\u5c06\\(t=1\\)\u79f0\u4e3a\u8d4b\u503c\u64cd\u4f5c\uff0c\\(t=2\\)\u79f0\u4e3a\u52a0\u64cd\u4f5c</p> <p>\u4e0d\u96be\u770b\u51fa\uff0c\u5728\u4e00\u6b21\u8d4b\u503c\u64cd\u4f5c\u4ee5\u540e\uff0c\u524d\u9762\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u6ca1\u6709\u5f71\u54cd\u3002\u6240\u4ee5\u5b9e\u9645\u4e0a\u6211\u4eec\u663e\u7136\u9700\u8981\u4ee5\u6bcf\u4e2a\u8d4b\u503c\u64cd\u4f5c\u4e3a\u65ad\u70b9\u5f80\u540e\u8003\u8651\uff0c\u540c\u65f6\u5fc5\u987b\u8df3\u8fc7\u540e\u9762\u7684\u6240\u6709\u8d4b\u503c\u64cd\u4f5c\u3002\u6b64\u65f6\u5bf9\u540e\u9762\u7684\u52a0\u64cd\u4f5c\uff0c\u5982\u679c\\(y_i\\geq 0\\)\u6211\u4eec\u4e00\u5b9a\u4f1a\u6267\u884c\uff0c\u5426\u5219\u4e00\u5b9a\u4f1a\u9009\u62e9\\(y_i\\)\u6700\u5c0f\u7684\u82e5\u5e72\u4e2a\u8df3\u8fc7\uff0c\u5176\u4f59\u7684\u52a0\u4e0a\uff08\u53d6\u51b3\u4e8e\u5269\u4f59\u7684\\(K\\)\uff09\u3002</p> <p>\u4f18\u5316\u8fd9\u4e2a\u66b4\u529b\uff0c\u53d1\u73b0\u5176\u5b9e\u5012\u7740\u505a\u5c31\u5b8c\u4e8b\u4e86\uff0c\u5177\u4f53\u6765\u8bf4\u7528\u4e00\u4e2a\u5806\u5b58\u4e0b\u6240\u6709\u52a0\u64cd\u4f5c\u7684\u8d1f\u6570\\(y_i\\)\uff0c\u975e\u8d1f\u6570\u76f4\u63a5\u52a0\u5230\\(sum\\)\uff0c\u9047\u5230\u8d4b\u503c\u64cd\u4f5c\u7684\u5c31check\u4e00\u4e0b\u6267\u884c\u8fd9\u4e2a\u8d4b\u503c\u64cd\u4f5c\u540e\u540e\u9762\u6700\u591a\u80fd\u5f97\u5230\u591a\u5c11\uff0c\u7136\u540e\u4ee4\\(K--\\)\uff0c\u5982\u679c\\(K\\)\u662f\u8d1f\u6570\u4e86\uff0c\u8bf4\u660e\u524d\u9762\u7684\u64cd\u4f5c\u6ca1\u6709\u610f\u4e49\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6700\u540e\u7ed3\u679c\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5break\u3002</p> <p>\\(x=0\\)\u8fd9\u4e2a\u521d\u59cb\u503c\u7b49\u4ef7\u4e8e\u52a0\u4e00\u4e2a\u8d4b\u503c\u64cd\u4f5c\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=22,M=1055,mod=998244353;\n\nint n,K;\nvector&lt;pii&gt;vec;\npriority_queue&lt;int&gt;q;\n\nvoid solve(){\n    n=read();K=read();\n    vec.pb(mkp(1,0));\n    for(int i=1;i&lt;=n;++i){\n        int x=read(),y=read();\n        vec.pb(mkp(x,y));\n    }\n    reverse(vec.begin(),vec.end());\n\n    int ans=-1e18,sum=0;\n    for(auto v:vec){\n        if(v.fi==1){\n            ans=max(ans,sum+v.se);\n            if(!K) break;\n            --K;\n            while(q.size()&gt;K){\n                int x=q.top();q.pop();\n                sum+=x;\n            }\n        }\n        else{\n            if(v.se&gt;=0) sum+=v.se;\n            else{\n                q.push(v.se);\n                while(q.size()&gt;K){\n                    int x=q.top();q.pop();\n                    sum+=x;\n                }\n            }\n        }\n    }\n    printf(\"%lld\\n\",ans);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>G - Xor Cards</p> <p>\u7ed9\u5b9a\\(n\\)\u5f20\u724c\uff0c\u6b63\u9762\u6709\u6570\u5b57\\(a_i\\)\uff0c\u80cc\u9762\u6709\u6570\u5b57\\(b_i\\)\uff0c\u73b0\u5728\u8981\u9009\u62e9\u5176\u4e2d\u4e0d\u5c11\u4e8e\u4e00\u5f20\u724c\uff0c\u4f7f\u5f97\u6b63\u9762\u5f02\u6216\u548c\u4e0d\u8d85\u8fc7\\(K\\)\u7684\u524d\u63d0\u4e0b\u80cc\u9762\u5f02\u6216\u548c\u6700\u5927\u3002</p> <p>\\(n\\leq 1000,0\\leq K,a_i,b_i&lt; 2^{30}\\)</p> <p>\u8fd9\u79cd\u9898\u4e00\u770b\u5c31\u662f\u4e2a\u5b57\u5178\u6811\u6216\u8005\u7ebf\u6027\u57fa\u9898\u3002</p> <p>\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u51fa\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff0c\u7531\u4e8e\u8fd9\u4e2a\u9898\u6ca1\u6709\u9650\u5236\u9009\u62e9\u7684\u4e0a\u9650\uff0c\u6240\u4ee5\u5047\u5982\u6211\u4eec\u6709\\((a,b)(c,d)\\)\u4e24\u5f20\u724c\uff0c\u90a3\u4e48\u5b83\u7b49\u4ef7\u4e8e\u6211\u4eec\u6709\\((a,b)(c\\oplus a,d\\oplus b)\\)\u8fd9\u4e24\u5f20\u724c\u3002</p> <p>\u57fa\u4e8e\u6b64\uff0c\u4e00\u4e2a\u60f3\u6cd5\u662f\uff1a\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u5173\u4e8e\\(a\\)\u7684\u7ebf\u6027\u57fa\uff0c\u8ba9\u5b83\u6ee1\u8db3\u8fd9\u4e2a\\(K\\)\u7684\u524d\u9762\u82e5\u5e72\u4f4d\uff0c\u5728\u67d0\u4e00\u4f4d\u5c0f\u4e8e\\(K\\)\uff0c\u8fd9\u6837\u540e\u9762\u7684\\(b\\)\u5c31\u53ef\u4ee5\u968f\u4fbf\u9009\u4e86\uff08\u56e0\u4e3a\u6b64\u65f6\u540e\u9762\u7684\\(a_i\\)\u4e00\u5b9a\u4e0d\u4f1a\u8fdd\u53cd\u9650\u5236\uff09\u3002\u800c\u540e\u9762\u8fd9\u4e2a\u9650\u5236\u4e5f\u662f\u4e00\u4e2a\u7ebf\u6027\u57fa\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\u3002</p> <p>\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\u662f\uff0c\u5047\u5982\u6211\u4eec\u679a\u4e3e\u5230\u7b2c\\(i\\)\u4f4d\uff0c\u5bf9\\(a\\)\u4e2d\u4f4d\u7f6e\\(&lt;i\\)\u7684\u90a3\u4e9b\u6570\u5b57\u4e5f\u53ef\u4ee5\u63d2\u5165\u5173\u4e8e\\(b\\)\u7684\u7ebf\u6027\u57fa\u4e2d\u8ba1\u7b97\u3002</p> <p>\u590d\u6742\u5ea6\\(O(nW+W^3)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=31;\n\nint n,K;\nint fc[N],a[N],b[N];\n\nstruct Linear{\n    int a[N];\n    void clear(){\n        memset(a,0,sizeof(a));\n    }\n    bool insert(int x){\n        for(int i=N-1;i&gt;=0;--i){\n            if(!((x&gt;&gt;i)&amp;1)) continue;\n            if(a[i]){\n                x^=a[i];\n                continue;\n            }\n            for(int j=0;j&lt;i;++j)\n                if(x&amp;fc[j]) x^=a[j];\n            for(int j=N-1;j&gt;i;--j)\n                if(a[j]&amp;fc[i]) a[j]^=x;\n            a[i]=x;\n            return 1;\n        }\n        return 0;\n    }   \n};\n\nbool check(int &amp;x,int &amp;y){\n    for(int i=N-1;i&gt;=0;--i){\n        if(!((x&gt;&gt;i)&amp;1)) continue;\n        if(a[i]){\n            x^=a[i];y^=b[i];\n            continue;\n        }\n        for(int j=0;j&lt;i;++j)\n            if(x&amp;fc[j]) x^=a[j],y^=b[j];\n        for(int j=N-1;j&gt;i;--j) \n            if(a[j]&amp;fc[i]) a[j]^=x,b[j]^=y;\n        a[i]=x;b[i]=y;\n        return 1;\n    }\n    return 0;\n}\n\nvoid solve(){\n    for(int i=0;i&lt;N;++i) fc[i]=1&lt;&lt;i;\n\n    bool flag=1;Linear B;B.clear();\n    n=read();K=read()+1;\n    for(int i=1;i&lt;=n;++i){\n        int x=read(),y=read();\n        if(!check(x,y)) B.insert(y),flag=0;\n    }\n    //for(int i=0;i&lt;3;++i) cout&lt;&lt;B.a[i]&lt;&lt;endl;\n    for(int i=0;i&lt;N;++i){\n        if(!a[i]) continue;\n        if(a[i]&gt;=K &amp;&amp; flag){\n            puts(\"-1\");\n            return;\n        }\n        break;\n    }\n    int fans=-1;\n    for(int i=N-1;i&gt;=0;--i){\n        if(!((K&gt;&gt;i)&amp;1)) continue;\n        //cout&lt;&lt;\"i:\"&lt;&lt;i&lt;&lt;endl;\n        int nows=0,ans=0;\n        for(int j=N-1;j&gt;i;--j)\n            if(K&amp;fc[j]) nows^=a[j],ans^=b[j];\n        //cout&lt;&lt;nows&lt;&lt;\" \"&lt;&lt;ans&lt;&lt;endl;\n        if((nows&amp;fc[i]) || nows&gt;=K) continue;\n        Linear D=B;\n        //cout&lt;&lt;\"ans:\"&lt;&lt;ans&lt;&lt;endl;\n        for(int j=0;j&lt;i;++j) D.insert(b[j]);\n        for(int j=N-1;j&gt;=0;--j)\n            if((ans^D.a[j])&gt;ans) ans^=D.a[j];\n        fans=max(fans,ans);\n    }\n    printf(\"%d\\n\",fans);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>H - Dye Color</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\\(a\\)\uff0c\u6bcf\u4e00\u8f6e\u6bcf\u4e2a\u4f4d\u7f6e\u7b49\u6982\u7387\u9009\u6216\u4e0d\u9009\uff08\u4e00\u5171\\(2^n\\)\uff09\u3002\u5047\u8bbe\u9009\u4e2d\u4e86\u5176\u4e2d\\(k\\)\u4e2a\uff0c\u518d\u4ece\\(1\\sim n\\)\u4e2d\u7b49\u53ef\u80fd\u5730\u9009\\(k\\)\u4e2a\u6570\u5b57\u5e76\u8fdb\u884c\u968f\u673a\u6392\u5217\uff0c\u7528\u8fd9\u4e9b\u6570\u5b57\u5206\u522b\u66ff\u6362\u5e8f\u5217\\(a\\)\u4e2d\u9009\u4e2d\u7684\u6570\u5b57\u3002\u95ee\u6240\u6709\u6570\u5b57\u76f8\u540c\u7684\u671f\u671b\u8f6e\u6b21\u3002</p> <p>\\(n\\leq 2000\\)\uff0c\u7b54\u6848\u5bf9998244353\u53d6\u6a21\u3002</p> <p>\u4e0d\u4f1a\u505a\uff0c\u76f4\u63a5\u7ffb\u8bd1\u9898\u89e3\uff0c\u8865\u5145\u4e86\u4e00\u4e9b\u624b\u63a8\u7684\u516c\u5f0f\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\\(A\\)\uff0c\u5b9a\u4e49\\(f(A)\\)\u4e3a\u5230\u7ec8\u6b62\u72b6\u6001\u7684\u671f\u671b\u6b65\u6570\uff0c\\(E_{A,A'}\\)\u4e3a\u4e00\u6b21\u64cd\u4f5c\u4ece\\(A\\)\u53d8\u4e3a\\(A'\\)\u7684\u6982\u7387\u3002</p> <p>\u82e5\\(A\\)\u662f\u4e00\u4e2a\u7ec8\u6001\uff0c\u90a3\u4e48\\(f(A)=0\\)\uff0c\u5426\u5219\u6709\\(f(A)=1+\\sum E_{A,A'}f(A')\\)</p> <p>\u63a5\u4e0b\u6765\u5b9a\u4e49\\(B_{A,j}\\)\u8868\u793a\\(A\\)\u4e2d\u7b49\u4e8e\\(j\\)\u7684\u6570\u5b57\u4e2a\u6570\u3002</p> <p>\u5982\u679c\u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\\(g(x)\\)\uff0c\u6ee1\u8db3\\(\\sum_{i=1}^n g(B_{A,i})=f(A)+C\\)\uff0c\u5176\u4e2d\\(C\\)\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u540c\u65f6\u6ee1\u8db3\\(\\sum_{i=1}^n g(B_{A,i})=1+\\sum E_{A,A'}\\sum_{i=1}^n g(B_{A',i})\\)\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u6211\u4eec\u53ea\u5173\u5fc3\u6570\u5b57\u7684\u6570\u91cf\u3002</p> <p>\u4e00\u4e2a\u89c2\u5bdf\u662f\uff0c\u82e5\\(g\\)\u6ee1\u8db3\u5bf9\u4e8e\u4efb\u610f\\(i\\)\u6709\\(g(B_{A,i})=\\frac 1 n+\\sum E_{A,A'}g(B_{A',i})\\)\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u4e5f\u6ee1\u8db3\u524d\u9762\u7684\u5f0f\u5b50\u3002\u6b64\u5916\uff0c\u5f53\\(B_{A,i}=j\\)\uff0c\u7528\u4e00\u6b21\u64cd\u4f5c\u4f7f\u5f97\\(B_{A,i}=k\\)\u7684\u6982\u7387\uff0c\u53ea\u548c\\(j\\)\u4e0e\\(k\\)\u6709\u5173\u3002</p> <p>\u6211\u4eec\u4ee4\\(P_{j,k}\\)\u4e3a\u8fd9\u4e2a\u6982\u7387\uff0c\u90a3\u4e48\u6211\u4eec\u6709\uff1a\\(g(i)=\\frac 1 n+\\sum_{j=0}^nP_{i,j}g(j)\\)\uff0c\u5bf9\\(0\\leq i&lt;n\\)\u6210\u7acb\u3002\u5bf9\u4e8e\\(i=n\\)\uff0c\u5b9e\u9645\u4e0a\u662f\u7ec8\u6001\uff0c\u8fd9\u4e2a\u7b49\u5f0f\u53ef\u4ee5\u4e0d\u6ee1\u8db3\u3002</p> <p>\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u7684\u4e00\u4e2a\u7b49\u5f0f\uff1a</p> \\[ \\begin{pmatrix} P_{0,0}-1 &amp; P_{0,1} &amp; 0 &amp; 0 &amp; \\cdots &amp; 0 &amp; 0 \\\\ P_{1,0} &amp; P_{1,1}-1 &amp; P_{1,2} &amp; 0 &amp; \\cdots &amp; 0 &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots  &amp; \\vdots &amp; \\vdots \\\\ P_{n-1,0} &amp; P_{n-1,1} &amp; P_{n-1,2} &amp; P_{n-1,3} &amp; \\cdots  &amp; P_{n-1,n-1}-1 &amp; P_{n-1,n} \\\\ \\end{pmatrix} \\begin{pmatrix} g(0) \\\\ g(1) \\\\ \\vdots \\\\ g(n) \\end{pmatrix} = \\begin{pmatrix} -\\frac 1 n \\\\ -\\frac 1 n\\\\ \\vdots \\\\ -\\frac 1 n \\end{pmatrix} \\] <p>\u4ee4\\(g(0)=0\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\\(O(n^2)\\)\u7684\u65f6\u95f4\u9012\u63a8\u51fa\u5269\u4e0b\u7684\\(g\\)</p> <p>\u4f46\u662f\u6211\u4eec\u8fd8\u8981\u6c42\\(P_{i,j}\\)\uff0c\u4e5f\u5c31\u662f\u8981\u6c42\u51fa\u73b0\u5728\u4e00\u4e2a\u6570\u5b57\\(x\\)\u6709\\(i\\)\u4e2a\uff0c\u4e00\u6b21\u64cd\u4f5c\u4f7f\u5b83\u53d8\u6210\\(j\\)\u4e2a\u7684\u6982\u7387\u3002\u5047\u8bbe\u6211\u4eec\u8fd9\u6b21\u64cd\u4f5c\u9009\u62e9\u4e86\\(a\\)\u4e2a\\(x\\)\uff0c\u4e14\u6709\u4e00\u4e2a\u53d8\u6210\\(x\\)\uff0c\u6211\u4eec\u6709\uff1a</p> \\[ P_{i,i-a+1}+=\\frac 1 {2^n}\\sum_{k=0}^{n-i}\\binom{n-i}{k}\\binom{i}{a}\\frac {k+a}{n} \\] <p>\u540c\u7406\uff0c\u5982\u679c\u6ca1\u6709\u53d8\u6210\\(x\\)\u7684\u5219\uff1a</p> \\[ P_{i,i-a}+=\\frac 1 {2^n}\\sum_{k=0}^{n-i}\\binom{n-i}{k}\\binom{i}{a}\\frac {n-(k+a)}{n} \\] <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0</p> \\[ \\sum_{k=0}^{n-i}\\binom{n-i}{k}(k+a)=a2^{n-i}+(n-i)2^{n-i-1} \\] <p>\u6240\u4ee5\u9884\u5904\u7406\u4e00\u4e9b\u4e1c\u897f\u4ee5\u540e\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5b9e\u9645\u4e0a\u662f\u53ef\u4ee5\\(O(1)\\)\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\\(O(n^2)\\)\u7684\u65f6\u95f4\u8ba1\u7b97\u51fa\u6240\u6709\u7684\\(P\\)\u3002</p> <p>\u6b64\u5916\u5f53\\(a=0\\)\u65f6\uff0c\u6709\uff1a</p> \\[ P_{i,i+1}=\\frac {1}{2^n}\\sum_{k=0}^{n-i}\\binom{n-i}{k}\\frac {k}{n}=\\frac {n-i}{n\\cdot 2^{i+1}}\\not\\equiv 0(\\text{mod }998244353) \\] <p>\u56e0\u6b64\u8fd9\u4e2a\u505a\u6cd5\u662f\u5408\u7406\u7684\u3002</p> <p>\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002 \u5176\u5b9e\u540e\u9762\u63a8\u5bfc\u5e76\u4e0d\u7b97\u96be\uff0c\u4f46\u662f\u8fd9\u4e2a\u8bbe\u4e00\u4e2a\u51fd\u6570\u7684\u505a\u6cd5\u786e\u5b9e\u5f88\u7384\u5b66\uff0c\u6682\u65f6\u6ca1\u6709\u641e\u660e\u767d\u5176\u4e2d\u7684\u539f\u7406\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=2005,mod=998244353;\n\nint n,a[N];\nint P[N][N],g[N];\nint fc[N],ifc[N],C[N][N];\n\nint upm(int x){return (x%mod+mod)%mod;}\nvoid up(int &amp;x,int y){x=upm(x+y);}\nint qpow(int x,int y){\n    int ret=1;\n    for(;y;y&gt;&gt;=1,x=x*x%mod)\n        if(y&amp;1) ret=ret*x%mod;\n    return ret;\n}\nint inv(int x){return qpow(x,mod-2);}\n\nvoid solve(){\n    fc[0]=1;ifc[0]=1;\n    for(int i=1;i&lt;N;++i) fc[i]=fc[i-1]*2%mod,ifc[i]=inv(fc[i]);\n    for(int i=0;i&lt;N;++i){\n        C[i][i]=C[i][0]=1;\n        for(int j=1;j&lt;i;++j) C[i][j]=upm(C[i-1][j-1]+C[i-1][j]);\n    }\n\n    n=read();\n    for(int i=1;i&lt;=n;++i) a[read()]++;\n\n    int invn=inv(n);\n    for(int i=0;i&lt;=n;++i){\n        //P[i][i]=1;\n        for(int a=0;a&lt;=i;++a){\n            up(P[i][i-a+1],ifc[n]*C[i][a]%mod*invn%mod*upm(a*fc[n-i]%mod+(n-i)*fc[n-i-1]%mod)%mod);\n            up(P[i][i-a],upm(C[i][a]*ifc[i]%mod-ifc[n]*C[i][a]%mod*invn%mod*upm(a*fc[n-i]%mod+(n-i)*fc[n-i-1]%mod)%mod));\n        }\n        //for(int a=0;a&lt;=n;++a) cout&lt;&lt;P[i][a]&lt;&lt;\" \";cout&lt;&lt;'\\n';\n    }\n    for(int i=0;i&lt;=n;i++){\n        for(int j=1;j&lt;=i+1;j++){\n            P[i][j]=upm(P[i][j]+P[i][j-1]);\n        }\n    }\n    for(int i=0;i&lt;n;++i){\n        int s=0;\n        for(int j=0;j&lt;i;++j) up(s,P[i][j]*g[j]%mod);\n        g[i]=(1+s)*inv(1-P[i][i]+mod)%mod;\n    }\n\n    int ans=0;\n    for(int i=1;i&lt;=n;++i){\n        int s=0;\n        for(int j=a[i];j&lt;n;++j) up(s,g[j]);\n        up(ans,s);\n    }\n\n    int s=0;\n    for(int i=0;i&lt;n;++i) up(s,g[i]);\n    ans=upm(ans-(n-1)*s%mod);\n\n    printf(\"%lld\\n\",ans*inv(n)%mod);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"atcoder/abc/abc254/","title":"AtCoder Beginner Contest 254","text":"<p>Ex - Multiply or Divide by 2</p> <p>\u6709\u4e24\u4e2a\u5927\u5c0f\u4e3a \\(n\\) \u7684\u53ef\u91cd\u96c6\u5408 \\(a, b\\)\uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9 \\(a\\) \u4e2d\u7684\u4e00\u4e2a\u6570 \\(x\\)\uff0c\u628a\u5b83\u53d8\u6210 \\(2\\times x\\) \u6216\u8005 \\(\\lfloor\\frac{x}{2}\\rfloor\\)\u3002\u95ee\u6700\u5c11\u591a\u5c11\u6b21\u64cd\u4f5c\u53ef\u4ee5\u4f7f \\(a\\) \u548c \\(b\\) \u76f8\u540c\uff0c\u6216\u8005\u5224\u65ad\u4e0d\u53ef\u884c\u3002</p> <p>\\(n\\leq 2\\times 10^5, 0\\leq a_i,b_i\\leq 10^9\\)</p> <p>\u5c06 \\(a_i,b_i\\) \u8f6c\u6362\u6210 \\(2\\) \u8fdb\u5236\u7684 \\(01\\) \u4e32\u3002\u64cd\u4f5c\u7684\u672c\u8d28\u5373\u6bcf\u6b21\u5220\u9664 \\(a_i\\) \u7684\u6700\u540e\u4e00\u4f4d\uff0c\u6216\u8005\u5220\u9664 \\(b_i\\) \u7684\u6700\u540e\u4e00\u4f4d\uff08\u5373\u76f8\u5f53\u4e8e \\(a_i\\times 2\\)\uff09\uff08\u4f46\u8981\u6c42\u6700\u540e\u4e00\u4f4d\u5fc5\u987b\u662f \\(0\\)\uff09\u3002</p> <p>\u5efa\u4e00\u989701-Trie\uff0c\u8003\u8651\u8d2a\u5fc3\u5730\u5339\u914d\u3002</p> <p>\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u6bcf\u4e2a\u70b9\u7684\u4e0a\u7684 \\(a_i\\) \u548c \\(b_i\\) \u53ef\u4ee5\u8f6c\u79fb\u5230\u7236\u8282\u70b9\uff08\\(b_i\\) \u7684\u8bdd\u8981\u6c42\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u4e3a \\(0\\)\uff09\uff0c\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u7684 \\(a_i,b_i\\) \u53ef\u4ee5\u5339\u914d\uff0c\u6c42\u6700\u5c11\u4e00\u5171\u8f6c\u79fb\u591a\u5c11\u6b21\u3002</p> <p>\u8bb0\u5f55\u5f53\u524d\u5b50\u6811\u4e2d\u8fd8\u6709\u591a\u5c11\u4e2a \\(a\\) \u6216 \\(b\\) \u672a\u5339\u914d\uff08\u663e\u7136\u4e0d\u4f1a\u65e2\u6709 \\(a\\) \u53c8\u6709 \\(b\\)\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u5728\u5f53\u524d\u5b50\u6811\u7684\u6839\u7ed3\u70b9\u5904\u5b8c\u6210\u5339\u914d\uff09\u3002</p> <p>\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\uff0c\u82e5 \\(1\\) \u5b50\u6811\u4e2d\u6709\u82e5\u5e72 \\(b\\) \u672a\u5339\u914d\uff0c\u5219\u65e0\u89e3\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e0\u6cd5\u5411\u4e0a\u8f6c\u79fb\uff0c\u5426\u5219\u7b54\u6848\u589e\u52a0\u672a\u5339\u914d\u7684 \\(a\\) \u7684\u4e2a\u6570\uff0c\u5e76\u6240\u6709\u70b9\u8f6c\u79fb\u5230\u5f53\u524d\u70b9\u3002</p> <p>\\(0\\) \u5b50\u6811\u5219\u6ca1\u6709\u9650\u5236\uff0c\u7b54\u6848\u589e\u52a0\u672a\u5339\u914d\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u5e76\u5c06\u6240\u6709\u70b9\u8f6c\u79fb\u5230\u5f53\u524d\u70b9\u3002</p> <p>\u7136\u540e\u5728\u8be5\u70b9\u5b8c\u6210 \\(\\min(\\text{num}(a_i), \\text{num}(b_i))\\) \u4e2a \\(a_i\\) \u548c \\(b_i\\) \u7684\u5339\u914d\u3002</p> <p>\u5177\u4f53\u5199\u4ee3\u7801\u65f6\uff0c\u53ef\u4ee5\u5c06\u6bcf\u4e2a \\(a_i\\) \u8bb0\u4e3a \\(1\\)\uff0c\u6bcf\u4e2a \\(b_i\\) \u8bb0\u4e3a \\(-1\\)\uff0c\u90a3\u4e48\u5176\u7edd\u5bf9\u503c\u5c31\u8868\u793a\u5f53\u524d\u672a\u5339\u914d\u7684\u70b9\u7684\u4e2a\u6570\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log{a_i})\\)\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 2e6 + 5;\nint rt = 1, cnt = 1;\nint ch[N][2];\nint num[N];\n\nvoid insert(int x, int v) {\n    int p = rt;\n    bitset&lt;32&gt; b(x);\n\n    if (!x) {\n        num[rt] += v;\n        return ;\n    }\n\n    for (int i = 31 - __builtin_clz(x); i &gt;= 0; --i) {\n        if (!ch[p][b[i]])\n            ch[p][b[i]] = ++cnt;\n\n        p = ch[p][b[i]];\n    }\n\n    num[p] += v;\n}\n\nint ans;\n\nint dfs(int x) {\n    int total_cnt = num[x];\n\n    if (ch[x][1]) {\n        auto cnt = dfs(ch[x][1]);\n        ans += cnt;\n\n        if (cnt &lt; 0) {\n            cout &lt;&lt; -1 &lt;&lt; endl;\n            exit(0);\n        }\n\n        total_cnt += cnt;\n    }\n\n    if (ch[x][0]) {\n        auto cnt = dfs(ch[x][0]);\n        ans += abs(cnt);\n        total_cnt += cnt;\n    }\n\n    return total_cnt;\n}\n\nint main() {\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;int&gt; a(n), b(n);\n\n    for (auto &amp;x : a) {\n        cin &gt;&gt; x;\n        insert(x, 1);\n    }\n\n    for (auto &amp;x : b) {\n        cin &gt;&gt; x;\n        insert(x, -1);\n    }\n\n    dfs(1);\n\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"codeforces/cf1704/","title":"CodeTON Round 2 (Div.1+Div.2)","text":"<p>D.Magical Array</p> <p>\u6709\\(n\\)\u4e2a\u957f\u5ea6\u4e3a\\(m\\)\u7684\u521d\u59cb\u76f8\u540c\u7684\u5e8f\u5217\uff0c\u8bb0\u4f5c\\(c_t\\)\u3002\u5176\u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5e8f\u5217\\(c_k\\)\u3002</p> <p>\u5bf9\u4e8e\u666e\u901a\u5e8f\u5217\uff0c\u6bcf\u6b21\u64cd\u4f5c\u9009\u62e9\\(1\\leq i&lt;j\\leq m-1\\)\uff0c\u7136\u540e\\(c_{t}[i]--,c_t[j]--,c_t[i-1]++,c_t[i+1]++\\)\u3002\u5bf9\u4e8e\u7279\u6b8a\u5e8f\u5217\uff0c\u6bcf\u6b21\u64cd\u4f5c\u9009\u62e9\\(1\\leq i&lt;j\\leq m-2\\)\uff0c\u7136\u540e\\(c_{t}[i]--,c_t[j]--,c_t[i-1]++,c_t[i+2]++\\)\u3002</p> <p>\u73b0\u5728\u6bcf\u4e2a\u5e8f\u5217\u81f3\u5c11\u64cd\u4f5c\u4e00\u6b21\uff0c\u95ee\u54ea\u4e2a\u5e8f\u5217\u662f\u7279\u6b8a\u7684\uff0c\u7279\u6b8a\u5e8f\u5217\u64cd\u4f5c\u4e86\u591a\u5c11\u6b21\u3002</p> <p>\\(\\sum n\\cdot m\\leq 10^6\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#include &lt;random&gt;\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\n#define int long long\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double db;\nint read(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\n\nconst int N=1e5+10,M=2005,mod=998244353;\nint s[N];\nvector&lt;int&gt;a[N],sum[N];\n\nvoid solve(){\n    int n=read(),m=read();\n    for(int i=1;i&lt;=n;++i){\n        a[i].resize(m+2);sum[i].resize(m+2);\n        sum[i][0]=0;s[i]=0;\n        for(int j=1;j&lt;=m;++j) a[i][j]=read(),sum[i][j]=sum[i][j-1]+a[i][j],s[i]+=sum[i][j]; \n    }\n    int mn=s[1],p=1;\n    for(int i=1;i&lt;=n;++i){\n        if(s[i]&lt;mn) mn=s[i],p=i;\n    }\n    for(int i=1;i&lt;=n;++i){\n        if(i!=p){\n            cout&lt;&lt;p&lt;&lt;\" \"&lt;&lt;s[i]-s[p]&lt;&lt;hvie;\n            break;\n        }\n    }\n}\n\n\nsigned main(){\n    for(int cas=read();cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>\u667a\u6167\u9898\u3002\u9996\u5148\u8fd9\u4e2a\u4e00\u52a0\u4e00\u51cf\u5c31\u5f88\u50cf\u662f\u5728\u5dee\u5206\uff0c\u800c\u5b83\u4e5f\u786e\u5b9e\u662f\u3002\u666e\u901a\u5e8f\u5217\u5b9e\u9645\u4e0a\u662f\u5de6+1\uff0c\u53f3-1\uff0c\u7279\u6b8a\u5e8f\u5217\u662f\u5de6+1\uff0c\u53f3\u4e24\u4e2a\u4f4d\u7f6e-1\u3002\u90a3\u4e48\u666e\u901a\u5e8f\u5217\u7684\u524d\u7f00\u548c\u7684\u6570\u7ec4\u7684\u548c\u662f\u59cb\u7ec8\u4e0d\u53d8\u7684\uff0c\u800c\u7279\u6b8a\u5e8f\u5217\u7684\u548c\u6bcf\u6b21\u64cd\u4f5c\u4f1a-1\u3002\u7136\u540e\u505a\u4e2a\u5dee\u5c31\u77e5\u9053\u7279\u6b8a\u5e8f\u5217\u64cd\u4f5c\u4e86\u591a\u5c11\u6b21\uff0c\u5c31\u505a\u5b8c\u4e86\u3002</p> <p>F.Colouring Game</p> <p>\u535a\u5f08\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(n\\)\u7684BR\u5e8f\u5217\uff0c\u6bcf\u6b21Alice\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2aR\u548c\u76f8\u90bb\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u628a\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u53d8\u6210W\uff0cBob\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2aB\u548c\u76f8\u90bb\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u628a\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u53d8\u6210W\u3002\u4e0d\u80fd\u64cd\u4f5c\u7684\u4eba\u8f93\uff0cAlice\u5148\u624b\u3002</p> <p>\\(n\\leq 5\\times 10^5\\)</p> <p>\u9996\u5148\u6211\u4eec\u611f\u53d7\u4e00\u4e0b\u8fd9\u4e2a\u535a\u5f08\u7684\u8fc7\u7a0b\u600e\u4e48\u6837\u66f4\u4f18\u3002\u5bf9\u4e8eAlice\u6765\u8bf4\uff0c\u8fde\u7eed\u4e00\u6bb5\u7684R\uff0c\u663e\u7136\u4e00\u5b9a\u4e0d\u4f1a\u5148\u9009\u62e9\u4e2d\u95f4\u7684R\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u8ba9\u81ea\u5df1\u53ef\u884c\u7684\u6b65\u6570\u53d8\u5c11\u3002\u90a3\u4e48\u5b9e\u9645\u4e0a\u73b0\u5728\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u662fBRBRBR\u8fd9\u6837\u7684\u535a\u5f08\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u7b97\u51fa\u8fd9\u4e2a\u4e1c\u897f\u7684sg\u51fd\u6570\u3002</p> <p>\u6ce8\u610f\u5230\u4e0d\u8bba\u662fBRBR\u8fd8\u662fRBRB\uff0c\u6bcf\u76f8\u90bb\u4e24\u4e2a\u4f4d\u7f6e\u4e00\u5b9a\u53ef\u4ee5\u9009\u62e9\uff0c\u800c\u4e14\u6211\u4e00\u5b9a\u5c3d\u53ef\u80fd\u4e0d\u9009W\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6574\u4e2a\\(sg\\)\u51fd\u6570\u7684\u503c\u5176\u5b9e\u53ea\u548c\u957f\u5ea6\u6709\u5173\u3002\u540c\u65f6\u8fd9\u4e5f\u53ef\u4ee5\u5f15\u51fa\uff0cB\u548cR\u7684\u6570\u91cf\u591a\u7684\u4e00\u65b9\u5b9e\u9645\u4e0a\u662f\u5fc5\u80dc\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6570\u91cf\u76f8\u540c\u7684\u60c5\u51b5\u3002</p> <p>\\(sg\\)\u7684\u6c42\u6cd5\u5927\u6982\u662f\u679a\u4e3e\u9009\u62e9\u7684\u662f\\(i\\)\u548c\\(i+1\\)\uff0c\u540e\u7ee7\u72b6\u6001\u5c31\u662f\u5de6\u53f3\u4e24\u6bb5BRBR\u8fd9\u6837\u7684\u6bb5\uff08\\(1\\sim i-1\\)\u548c\\(i+2\\sim n\\)\uff09\u3002\u5176\u4e2d\\(sg[1]=0\\)\uff0c\u56e0\u4e3a\u9009\u4e0d\u4e86\u4e24\u4e2a\u3002</p> <p>\u8fd9\u6837\u505a\u662f\\(O(n^2)\\)\u7684\uff0c\u4f46\u662f\u6253\u8868\u4ee5\u540e\u53d1\u73b0\u5728\\(n\\geq 100\\)\u7684\u65f6\u5019\u6709\\(sg[n]=sg[n-34]\\)\u3002\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double db;\nint read(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\n\nconst int N=1e6+10,M=2005,mod=998244353;\n\nint n;\nint f[N],cnt[N];\nchar s[N];\n\nvoid solve(){\n    scanf(\"%d%s\",&amp;n,s+1);\n    int c0=0,c1=0;\n    for(int i=1;i&lt;=n;++i){\n        if(s[i]=='R') ++c0;\n        else ++c1;\n    }\n    if(c0&gt;c1) puts(\"Alice\");\n    else if(c1&gt;c0) puts(\"Bob\");\n    else{\n        int res=0;\n        for(int l=1,r;l&lt;=n;l=r+1){\n            for(r=l;r&lt;n &amp;&amp; s[r+1]!=s[r];) ++r;\n            res^=f[r-l+1];\n        }\n        puts(res?\"Alice\":\"Bob\");\n    }\n}\n\nvoid init(){\n    f[1]=0;\n    for(int i=2;i&lt;=100;++i){\n        for(int j=1;j&lt;i;++j) cnt[f[j-1]^f[i-j-1]]++;\n        int sg=0;\n        while(cnt[sg]) ++sg;\n        f[i]=sg;\n        for(int j=1;j&lt;i;++j) cnt[f[j-1]^f[i-j-1]]--;\n    }\n    for(int i=101;i&lt;N;++i) f[i]=f[i-34];\n}\n\nsigned main(){\n    init();\n    for(int cas=read();cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"contests/ccpc-online-2022/","title":"CCPC2022\u7f51\u7edc\u8d5b","text":"<p>G Name the Puppy</p> <p>\u7ed9\u5b9a\\(n\\)\u4e2a\u5b57\u7b26\u4e32\uff0c\u73b0\u5728\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5b57\u7b26\u4e32\u4ee5\u4efb\u610f\u987a\u5e8f\u62fc\u63a5\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u591a\u6b21\u3002\u95ee\u6700\u957f\u7684anti-border\u6709\u591a\u957f\uff0c\u65e0\u9650\u957f\u8f93\u51faINF\u3002</p> <p>anti-border\u7684\u5b9a\u4e49\u662f\u524d\u7f00reverse\u540e\u80fd\u5339\u914d\u540e\u7f00\u3002</p> <p>\\(n\\leq 5000,\\sum|s|\\leq 5000\\)</p> <p>\u9996\u5148\u6211\u4eec\u8003\u8651border\u957f\u5ea6\u6ca1\u6709\u8de8\u8d8a\u7b54\u6848\u4e32\u7684\u4e2d\u5fc3\uff0c\u8fd9\u79cd\u60c5\u51b5\u5b9e\u9645\u4e0a\u662f\u6bd4\u8f83\u597d\u529e\u7684\uff0c\u6211\u4eec\u8981\u505a\u7684\u5b9e\u9645\u4e0a\u662f\u628a\u6240\u6709\u4e32reverse\u4ee5\u540e\u8fdb\u884c\u5339\u914d\u3002</p> <p>\u5bf9\u6b63\u4e32\u548c\u53cd\u4e32\u5206\u522b\u5efa\u51faTrie\u6811\uff0c\u7136\u540e\u8bbe\\(f[x][y]\\)\u8868\u793a\u6b63\u4e32\u5339\u914d\u5230\u8282\u70b9\\(x\\)\uff0c\u53cd\u4e32\u5339\u914d\u5230\u8282\u70b9\\(y\\)\u7684\u6700\u957f\u957f\u5ea6\uff0c\u7136\u540e\u8bb0\u5fc6\u5316\u641c\u7d22\u5339\u914d\u5373\u53ef\uff0c\u6ce8\u610f\u5982\u679c\u8d70\u5230\u4e86\u4e00\u4e2a\u7ed3\u5c3e\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u8f6c\u79fb\u5230\u521d\u59cb\u8282\u70b9\u3002\u5982\u679c\u91cd\u590d\u8d70\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5b9e\u9645\u4e0a\u7b54\u6848\u5c31\u662fINF\u4e86\uff08\u53ea\u9700\u8981\u4e00\u76f4\u5faa\u73af\u8fd9\u4e2a\u8def\u7ebf\u5373\u53ef\uff09\u3002</p> <p>\u63a5\u4e0b\u6765\u8003\u8651border\u957f\u5ea6\u8de8\u8d8a\u4e86\u7b54\u6848\u4e32\u7684\u4e2d\u5fc3\uff0c\u770b\u4e0a\u53bb\u662f\u4e00\u4e2a\u5f88\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u5b9e\u9645\u4e0a\u7a0d\u5fae\u60f3\u4e00\u4e0b\u5c31\u53d1\u73b0\u5e76\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u3002\u56e0\u4e3a\u8fd9\u4e2a\u7b54\u6848\u4e32\u5fc5\u7136\u662f\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u65ad\u91cd\u590d\u8fd9\u4e2a\u4e32\u5c31\u53ef\u4ee5\u5f97\u5230INF\u4e86\uff0c\u800c\u5728\u524d\u9762\u7684DP\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e8b\u5b9e\u4e0a\u5728\u539f\u672c\u7b54\u6848\u4e32\u4e2d\u95f4\u7684\u90e8\u5206\u4e0d\u65ad\u91cd\u590d\u5c31\u53ef\u4ee5\u8ba9\u5339\u914d\u65e0\u9650\u5ef6\u957f\uff0c\u8fd9\u6837\u5c31\u662fINF\u4e86\u3002\uff08\u5927\u6982\u5c31\u662f\u4e00\u5b9a\u80fd\u904d\u5386\u5230\u4e00\u4e2a\u5bf9\u5e94\u7684\u60c5\u51b5\uff09</p> <p>\u590d\u6742\u5ea6\\(O((\\sum|s|)^2\\times \\sum)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#include &lt;random&gt;\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define int long long\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int, int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double db;\nint read() {\n    int ret = 0;\n    bool f = 0;\n    char c = getchar();\n\n    while (!isdigit(c)) {\n        if (c == EOF)\n            return -1;\n\n        if (c == '-')\n            f = 1;\n\n        c = getchar();\n    }\n\n    while (isdigit(c))\n        ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c ^ 48), c = getchar();\n\n    return f ? -ret : ret;\n}\n\nconst int N=5010,inf=0x3f3f3f3f,mod=998244353;\n\nint n,ans,f[N][N];\nchar st[N];\n\nstruct Trie{\n    int cnt=1;\n    int ch[N][26],ed[N];\n    void insert(char *s,int m){\n        int now=1;\n        for(int i=1;i&lt;=m;++i){\n            int x=s[i]-'a';\n            if(!ch[now][x]) ch[now][x]=++cnt;\n            now=ch[now][x];\n        }\n        ed[now]=1;\n    }\n}T1,T2;\n\nvoid hvfun(){\n    puts(\"INF\");\n    exit(0);\n}\n\nvoid dfs(int x,int y){\n    //cout&lt;&lt;x&lt;&lt;\" \"&lt;&lt;y&lt;&lt;\" \"&lt;&lt;f[x][y]&lt;&lt;hvie;\n    ans=max(ans,f[x][y]);\n    for(int i=0;i&lt;26;++i){\n        if(!T1.ch[x][i] || !T2.ch[y][i]) continue;\n        if(f[T1.ch[x][i]][T2.ch[y][i]]) hvfun();\n        f[T1.ch[x][i]][T2.ch[y][i]]=f[x][y]+1;\n        dfs(T1.ch[x][i],T2.ch[y][i]);\n    }\n    if(T1.ed[x]){\n        if(f[1][y]) hvfun();\n        f[1][y]=f[x][y];\n        dfs(1,y);\n    }\n    if(T2.ed[y]){\n        if(f[x][1]) hvfun();\n        f[x][1]=f[x][y];\n        dfs(x,1);\n    }\n    if(T1.ed[x] &amp;&amp; T2.ed[y]) hvfun();\n}\n\nvoid solve(){\n    n=read();\n    for(int i=1,m;i&lt;=n;++i){\n        scanf(\"%s\",st+1);\n        m=strlen(st+1);\n        T1.insert(st,m);\n        reverse(st+1,st+m+1);\n        T2.insert(st,m);\n    }\n    dfs(1,1);\n    cout&lt;&lt;ans&lt;&lt;hvie;\n}\n\nsigned main() {\n    for (int cas = 1; cas--;) {\n        solve();\n    }\n    return 0;\n}\n\n/*\n4\nab\ncbba\nbccd\neddc\n3\nabcdefg\ngfe\ndcba\n\n*/\n</code></pre>"},{"location":"contests/hdu2022-1/","title":"2022\u676d\u7535\u591a\u6821(1)","text":"<p>1004. Ball</p> <p>\u4e00\u4e2a\\(m\\times m\\)\u7684\u68cb\u76d8\uff0c\u6709\\(n\\)\u4e2a\u68cb\u5b50\uff0c\u6c42\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\u9009\u62e9\u4e09\u4e2a\u4e0d\u540c\u7684\u68cb\u5b50\uff0c\u4f7f\u5f97\u4e09\u4e2a\u68cb\u5b50\u7684\u8ddd\u79bb\u4e2d\u4f4d\u6570\u662f\u4e00\u4e2a\u7d20\u6570\u3002\u8ddd\u79bb\u662f\u66fc\u54c8\u987f\u8ddd\u79bb</p> <p>\\(n\\leq 2000,m\\leq 10^5\\)</p> <p>\\(n\\leq 2000,m\\leq 10^5\\)</p> <p>\u68cb\u76d8\u8303\u56f4\u53ea\u67092e5\uff0c\u7d20\u6570\u5224\u65ad\u7b80\u5355\u3002</p> <p>\u5982\u679c\u679a\u4e3e\u4e09\u4e2a\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u8ddd\u79bb\u5f97\u5230\u7ed3\u679c\u3002\u73b0\u5728\\(n\\)\u662f\\(2000\\)\uff0c\u90a3\u4e48\\(O(n^2)\\)\u5de6\u53f3\u53ef\u4ee5\u8fc7\u3002\u9996\u5148\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u6211\u4eec\u662f\u53ef\u4ee5\u6c42\u51fa\u6765\u7684\uff0c\u8003\u8651\u6211\u4eec\u60f3\u679a\u4e3e\u4e24\u4e2a\u70b9\uff0c\u4ee5\u8fd9\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u4f5c\u4e3a\u4e2d\u4f4d\u6570\uff0c\u90a3\u4e48\u786e\u5b9a\u7b2c\u4e09\u4e2a\u70b9\uff0c\u5373\u8981\u6c42\u5176\u4e2d\u4e00\u6761\u8fb9\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u6761\u8fb9\uff0c\u53e6\u4e00\u6761\u8fb9\u5927\u4e8e\u7b49\u4e8e\u8fd9\u6761\u8fb9\u3002\u8fd9\u4e8b\u5b9e\u4e0a\u5f15\u5bfc\u6211\u4eec\u5c06\u8fb9\u6309\u957f\u5ea6\u8fdb\u884c\u6392\u5e8f\u5904\u7406\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6240\u6709\u7528\u8fc7\u7684\u8fb9\u6253\u4e0a\u6807\u8bb0\uff0c\u6240\u6709\u53ef\u884c\u7684\u8ddd\u79bb\u53ef\u4ee5\u7528\u4e24\u4e2abitset\u7684\u5f02\u6216\u6765\u8868\u793a\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8003\u8651\u7b2c\u4e09\u4e2a\u70b9\\(s\\)\uff0c\u5f53\u524d\u8fd9\u6761\u8fb9\u8fde\u63a5\\(a,b\\)\uff0c\u90a3\u4e48\\((a,s)\\)\u548c\\((b,s)\\)\u4e2d\u5fc5\u987b\u6709\u4e00\u4e2a\u5df2\u7ecf\u8003\u8651\u8fc7\uff0c\u88ab\u6253\u4e0a\u6807\u8bb0\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u4e2abitset\uff0c\u7c7b\u4f3c\u90bb\u63a5\u77e9\u9635\u4e00\u6837\uff0c\u4f46\u662f\u201c\u6709\u4e00\u4e2a\u88ab\u8003\u8651\u8fc7\u201d\u5c31\u53ef\u4ee5\u76f4\u63a5\u8868\u793a\u4e3a\\(a\\)\u548c\\(b\\)\u7684bitset\u7684\u5f02\u6216\u4e86\u3002</p> <p>\u590d\u6742\u5ea6\\(O(\\frac {n^3} {64})\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#include &lt;random&gt;\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double db;\nint read(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\n\nconst int N=2e5+10,M=2005,mod=998244353;\n\nbool np[N];\nbitset&lt;M&gt;b[M];\n\nstruct ele{\n    int len,x,y;\n};\n\nvoid solve(){\n    int n=read(),m=read();\n\n    vector&lt;pii&gt;p;p.resize(n);\n    for(int i=0;i&lt;n;++i) p[i].fi=read(),p[i].se=read();\n    vector&lt;ele&gt;a;\n    for(int i=0;i&lt;n;++i) for(int j=i+1;j&lt;n;++j) a.pb({abs(p[i].fi-p[j].fi)+abs(p[i].se-p[j].se),i,j});\n    sort(a.begin(),a.end(),[&amp;](const ele&amp;A,const ele&amp;B){\n        return A.len&lt;B.len;\n    });\n    for(int i=0;i&lt;=n;++i) b[i].reset();\n\n    int ans=0;\n    for(auto v:a){\n        int l=v.len,x=v.x,y=v.y;\n        if(!np[l]) ans+=(b[x]^b[y]).count();\n        b[x][y]=b[y][x]=1;\n    }\n    cout&lt;&lt;ans&lt;&lt;hvie;\n}\n\nvoid init(){\n    np[1]=1;\n    for(int i=2;i&lt;N;++i){\n        if(np[i]) continue;\n        for(int j=2;i*j&lt;N;++j) np[i*j]=1;\n    }\n}\n\nsigned main(){\n    init();\n    for(int cas=read();cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"contests/hdu2022-2/","title":"2022\u676d\u7535\u591a\u6821(2)","text":"<p>1001.Static Query on Tree</p> <p>\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e09\u4e2a\u96c6\u5408\\(A,B,C\\)\uff0c\u95ee\u6709\u591a\u5c11\u70b9\u53ef\u80fd\u51fa\u73b0\u5728\u201cA\u4e2d\u7684\u70b9\u5230C\u4e2d\u7684\u70b9\u548cB\u4e2d\u7684\u70b9\u5230\u90a3\u4e2aC\u4e2d\u7684\u70b9\u7684\u8def\u5f84\u4ea4\u201d\u4e0a\u3002</p> <p>\\(n\\leq 2\\times 10^5,q \\leq 2\\times 10^5, \\sum |A|+|B|+|C|\\le 2\\times 10^5\\)</p> <p>\u8bbe\u67d0\u4e2aA\u5230C\u7684\u8def\u5f84\u662f\\(LA\\),B\u5230C\u7684\u8def\u5f84\u662f\\(LB\\),\u8fd9\u4e2a\u9898\u672c\u8d28\u4e0a\u662f\u8981\u6c42\u6240\u6709\\(\\cup (LA\\cap LB)\\),\u53ef\u4ee5\u5206\u522b\u6c42 \\(\\cup LA\\),\\(\\cup LB\\), \\(\\cup (LA\\cup LB)\\),\u53ef\u4ee5\u5bf9C\u70b9\u7684\u5b50\u6811\u6253\u6807\u8bb0\uff0c\u7136\u540e\u5bf9\u8981\u6c42\u7684\u96c6\u5408\u6309dfs\u5e8f\u6392\u5e8f\u540e\u6811\u5256\u6c42\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\nstruct segtree{\n    int sum[maxn&lt;&lt;2],cov[maxn&lt;&lt;2],len[maxn&lt;&lt;2];\n    void COV(int v,int c){\n        cov[v]=c;\n        sum[v]=len[v]*c;\n    }\n    #define ls (v&lt;&lt;1)\n    #define rs (v&lt;&lt;1|1)\n    #define mid ((l+r)&gt;&gt;1)\n    void push_up(int v){\n        sum[v]=sum[ls]+sum[rs];\n    }\n    void pushdown(int v){\n        if(~cov[v]){\n            COV(ls,cov[v]);\n            COV(rs,cov[v]);\n            cov[v]=-1;\n        }\n    }\n    void build(int v,int l,int r){\n        len[v]=r-l+1;\n        cov[v]=-1;\n        sum[v]=0;\n        if(l==r)return;\n        build(ls,l,mid);build(rs,mid+1,r);\n    }\n    void cover(int v,int l,int r,int al,int ar,int c){\n        if(al&lt;=l&amp;&amp;ar&gt;=r) return COV(v,c);\n        pushdown(v);\n        if(al&lt;=mid) cover(ls,l,mid,al,ar,c);\n        if(ar&gt;mid) cover(rs,mid+1,r,al,ar,c);\n        push_up(v);\n    }\n    int ask(int v,int l,int r,int al,int ar){\n        if(al&gt;ar) return 0;\n        if(al&lt;=l&amp;&amp;ar&gt;=r) return sum[v];\n        pushdown(v);\n        int ans=0;\n        if(al&lt;=mid) ans+=ask(ls,l,mid,al,ar);\n        if(ar&gt;mid) ans+=ask(rs,mid+1,r,al,ar);\n        return ans;\n    }\n}s;\nvector&lt;int&gt;adj[maxn];\nint son[maxn],fa[maxn],dep[maxn],siz[maxn];\nint top[maxn],ord[maxn],L[maxn],R[maxn];\nvoid dfs1(int x){\n    siz[x]=1;\n    for(int y:adj[x])if(y!=fa[x]){\n        dep[y]=dep[x]+1;\n        fa[y]=x;\n        dfs1(y);\n        siz[x]+=siz[y];\n        if(siz[y]&gt;siz[son[x]]) son[x]=y;\n    }\n}\nvoid dfs2(int x,int t){\n    static int sign=0;\n    top[x]=t;\n    L[x]=++sign;\n    ord[sign]=x;\n    if(son[x]) dfs2(son[x],t);\n    for(int y:adj[x])if(y!=son[x]&amp;&amp;y!=fa[x]){\n        dfs2(y,y);\n    }\n    R[x]=sign;\n}\nint n,q;\nint lca(int x,int y){\n    while(top[x]!=top[y]){\n        if(dep[top[x]]&gt;dep[top[y]]){\n            x=fa[top[x]];\n        }\n        else{\n            y=fa[top[y]];\n        }\n    }\n    return dep[x]&lt;dep[y]?x:y;\n}\nint asksum(int x){\n    int ans=0;\n    while(top[x]!=1){\n        ans+=s.ask(1,1,n,L[top[x]],L[x]);\n        x=fa[top[x]];\n    }\n    ans+=s.ask(1,1,n,L[1],L[x]);\n    return ans;\n\n}\nint calc(vector&lt;int&gt;&amp;v){\n    sort(v.begin(),v.end(),[&amp;](int i,int j){\n        return L[i]&lt;L[j];\n    });\n    int ret=0;\n    rep(i,0,v.size()-2){\n        int lc=lca(v[i],v[i+1]);\n        ret+=asksum(v[i])-asksum(lc);\n    }\n    ret+=asksum(v.back());\n    return ret;\n}\nsigned main(){\n    // freopen(\"my.out\",\"w\",stdout);\n    dwn(_,yh(),1){\n        n=yh(),q=yh();\n        rep(i,1,n) son[i]=fa[i]=dep[i]=siz[i]=top[i]=ord[i]=0,adj[i].clear();\n        s.build(1,1,n);\n        rep(i,2,n){\n            int x=yh();adj[x].pb(i);\n        }\n        dfs1(1);\n        dfs2(1,1);\n        rep(__,1,q){\n            s.cover(1,1,n,1,n,0);\n            int na=yh(),nb=yh(),nc=yh();\n            vector&lt;int&gt;A(na),B(nb),C(nc);\n            for(auto &amp;x:A) x=yh();\n            for(auto &amp;x:B) x=yh();\n            for(auto &amp;x:C){\n                x=yh();\n                s.cover(1,1,n,L[x],R[x],1);\n            }\n            int ans=calc(A)+calc(B);\n            for(auto i:B){\n                A.pb(i);\n            }\n            ans-=calc(A);\n            cout&lt;&lt;ans&lt;&lt;hvie;\n        }\n    }\n    return 0;\n}\n</code></pre> <p>C.Copy</p> <p>\u9898\u76ee\u5927\u610f\uff1a\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(n\\)\u7684\u5e8f\u5217\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\u5c06\\([l,r]\\)\u590d\u5236\u4e00\u904d\uff0c\u63d2\u5165\u5230\\(r+1\\)\u7684\u4f4d\u7f6e\uff1b\u8be2\u95ee\u5e8f\u5217\u7b2c\\(k\\)\u4e2a\u5143\u7d20\u3002</p> <p>\\(n,Q,k\\leq 10^5\\)</p> <p>\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811\u677f\u9898\uff0c\u53ea\u9700\u8981\u628a\u6811split\u6210\\([1,l-1][l,r][r,n]\\)\u4e09\u6bb5\uff0c\u7136\u540e\u62fc\u63a5\u8d77\u6765\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define read yh \n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nunsigned seed = std::chrono::system_clock::now().time_since_epoch().count();\nmt19937 rand_num(seed);\nuniform_int_distribution&lt;long long&gt; dist(-1e9, 1e9);\n\nconst int N=1e5+10,M=N*60;\nint n,Q;\nint a[N];\n\nstruct Treap{\n    #define lc t[x].ls\n    #define rc t[x].rs\n    #define mid ((l+r)&gt;&gt;1)\n    struct node{\n        int ls,rs,val,sz;\n        void init(){\n            ls=rs=val=sz=0;\n        }\n    };\n    int ind,rt;\n    node t[M];\n\n    void init(){\n        ind=rt=0;\n    }\n    int newnode(int v=0){\n        int x=++ind;\n        t[x].ls=t[x].rs=0;t[x].val=v;\n        return x;\n    }\n    void pushup(int x){\n        t[x].sz=t[lc].sz+t[rc].sz+1;\n    }\n    int build(int l,int r){\n        if(l&gt;r) return 0;\n        int x=newnode(a[mid]);\n        lc=build(l,mid-1);rc=build(mid+1,r);\n        pushup(x);\n        //cout&lt;&lt;\"!!!\"&lt;&lt;x&lt;&lt;\" \"&lt;&lt;t[x].sz&lt;&lt;\" \"&lt;&lt;t[x].val&lt;&lt;hvie;\n        return x;\n    }\n    bool rnd(int x,int y){\n        return (rand_num()%(x+y))&lt;x;\n    }\n    int merge(int x,int y){\n        if(!x &amp;&amp; !y) return 0;\n        int u=newnode();\n        if(!x || !y) t[u]=t[x+y];\n        else if(rnd(t[x].sz,t[y].sz)) t[u]=t[x],t[u].rs=merge(t[u].rs,y),pushup(u);\n        else t[u]=t[y],t[u].ls=merge(x,t[u].ls),pushup(u);\n        return u;\n    }\n    int split(int x,int l,int r){\n        if(l&gt;r) return 0;\n        if(l==1 &amp;&amp; r==t[x].sz){\n            int u=newnode();t[u]=t[x];\n            return u;\n        }\n        if(r&lt;=t[lc].sz) return split(lc,l,r);\n        else if(l&gt;t[lc].sz+1) return split(rc,l-t[lc].sz-1,r-t[lc].sz-1);\n        else{\n            int u=newnode(t[x].val);\n            t[u].ls=split(lc,l,t[lc].sz);t[u].rs=split(rc,1,r-t[lc].sz-1);\n            pushup(u);\n            return u;\n        }\n    }\n    void copy(int l,int r){\n        int a=split(rt,1,l-1),b=split(rt,l,r),c=split(rt,r+1,n);\n        rt=merge(a,b);rt=merge(rt,b);rt=merge(rt,c);\n    }\n    int getans(int x,int p){\n        //cout&lt;&lt;\"nowfind:\"&lt;&lt;x&lt;&lt;\" \"&lt;&lt;t[x].sz&lt;&lt;\" \"&lt;&lt;p&lt;&lt;hvie;\n        if(t[lc].sz+1==p) return t[x].val;\n        if(t[lc].sz&gt;=p) return getans(lc,p);\n        return getans(rc,p-t[lc].sz-1); \n    }\n    #undef lc\n    #undef rc\n    #undef mid\n}T;\n\nvoid solve(){\n    n=read();Q=read();\n    T.init();\n    for(int i=1;i&lt;=n;++i) a[i]=read();\n    T.rt=T.build(1,n);\n\n    int fans=0;\n    while(Q--){\n        int op=read();\n        if(op&amp;1){\n            int l=read(),r=read();\n            T.copy(l,r);\n        }\n        else{\n            int x=read();\n            fans^=T.getans(T.rt,x);\n            //cout&lt;&lt;T.getans(T.rt,x)&lt;&lt;hvie;\n        }\n    }\n    cout&lt;&lt;fans&lt;&lt;hvie;\n}\n\nsigned main(){\n    for(int cas=read();cas--;){\n        solve();\n    }\n    return 0;\n}\n\n/*\n2\n5 3\n1 2 3 4 5\n2 4\n1 2 4\n2 5\n5 3\n1 2 3 4 5\n2 4\n1 2 4\n2 5\n*/\n</code></pre> <p>E.Slayer Come</p> <p>\u6709\\(n\\)\u4e2a\u602a\uff0c\u7b2c\\(i\\)\u4e2a\u7684\u653b\u51fb\u529b\u662f\\(a_i\\)\uff0c\u9632\u5fa1\u529b\u662f\\(b_i\\)\u3002\u4f60\u6709\\(m\\)\u4e2a\u6280\u80fd\uff0c\u7b2c\\(i\\)\u4e2a\u6280\u80fd\u80fd\u76f4\u63a5\u5e72\u6389\u4f4d\u7f6e\\(x_i\\)\u7684\u602a\u5e76\u9020\u6210\u6e85\u5c04\u4f24\u5bb3\uff1a\u5047\u5982\u4f60\u7684\u7b2c\\(i\\)\u4e2a\u6280\u80fd\u73b0\u5728\u5e72\u6389\u4e86\u7b2c\\(j\\)\u4f4d\u7f6e\u7684\u602a\uff0c\u5982\u679c\\(b_{j-1}\\leq a_{j}-L_i\\)\uff0c\u5219\\(j-1\\)\u4f4d\u7f6e\u7684\u602a\u88ab\u5e72\u6389\uff1b\u5982\u679c\\(b_{j+1}\\leq a_{j}-R_i\\)\uff0c\u5219\\(j+1\\)\u4f4d\u7f6e\u7684\u602a\u88ab\u5e72\u6389\u3002</p> <p>\u95ee\u4f60\u6709\u591a\u5c11\u79cd\u91ca\u653e\u6280\u80fd\u7684\u65b9\u6cd5\uff0c\u80fd\u591f\u5e72\u6389\u6240\u6709\u602a\uff08\u6280\u80fd\u6ca1\u6709\u5148\u540e\uff0c\u7ed3\u7b97\u4e92\u4e0d\u5f71\u54cd\uff09\uff0c\u7b54\u6848\u5bf9998244353\u53d6\u6a21\u3002</p> <p>\\(n,m\\leq 10^5,a_i,b_i\\leq 10^9\\)</p> <p>\u9996\u5148\u663e\u7136\u4e00\u4e2a\u6280\u80fd\u6253\u7684\u602a\u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u6211\u4eec\u5148\u6c42\u8fd9\u4e2a\u533a\u95f4\u3002</p> <p>\u5bf9\u4e8e\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff0c\u6211\u4eec\u5c06\\(a_j-b_{j+1}\\)\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u518d\u5c06\u6240\u6709\u6280\u80fd\u6309\\(R_i\\)\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u90a3\u4e48\\(a_j-b{j+1}\\geq R_i\\)\u7684\u6240\u6709\\(j\\)\u5c31\u662f\\(i\\)\u6280\u80fd\u80fd\u6253\u6b7b\u7684\u602a\u3002\u6392\u5e8f\u4ee5\u540e\uff0c\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fd9\u6837\u80fd\u6253\u6b7b\u7684\u533a\u95f4\u3002\u533a\u95f4\u5de6\u7aef\u70b9\u4e00\u6837\u3002</p> <p>\u5269\u4e0b\u7684\u95ee\u9898\u5c31\u662f\u7ed9\u5b9a\\(m\\)\u4e2a\u533a\u95f4\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u9009\u62e9\u65b9\u5f0f\u80fd\u8986\u76d6\\([1,n]\\)\u3002</p> <p>\u8bbe\\(f_i\\)\u8868\u793a\u6070\u597d\u8986\u76d6\u4e86\\([1,i]\\)\u7684\u65b9\u6848\u6570\uff0c\u5c06\u533a\u95f4\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8003\u8651\u533a\u95f4\\([l,r]\\)\u7684\u8d21\u732e\uff1a</p> <ul> <li>f_r+=\\sum_{j=l-1}^r f_j</li> <li>f_i*=2,0\\leq i \\leq l-2</li> </ul> <p>\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define read yh \n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\n\nconst int N=1e5+10,mod=998244353;\nint n,m;\nint a[N],b[N],p[N];\n\nstruct seg{\n    int x,l,r,id;\n}s[N];\n\nint upm(int x){\n    return x&gt;=mod?x-mod:x;\n}\n\nstruct Tree{\n    #define ls (x&lt;&lt;1)\n    #define rs (x&lt;&lt;1|1)\n    #define mid ((l+r)&gt;&gt;1)\n    int sum[N&lt;&lt;2],tag[N&lt;&lt;2];\n    void pushup(int x){\n        sum[x]=upm(sum[ls]+sum[rs]);\n    }\n    void pushdown(int x){\n        int &amp;t=tag[x];\n        if(t==1) return;\n        sum[ls]=1ll*sum[ls]*t%mod;\n        sum[rs]=1ll*sum[rs]*t%mod;\n        tag[ls]=1ll*tag[ls]*t%mod;\n        tag[rs]=1ll*tag[rs]*t%mod;\n        t=1;\n    }\n    void build(int x,int l,int r){\n        sum[x]=0;tag[x]=1;\n        if(l==r){\n            sum[x]=(l==0);\n            return;\n        }\n        build(ls,l,mid);build(rs,mid+1,r);\n        pushup(x);\n    }\n    int query(int x,int l,int r,int L,int R){\n        if(L&lt;=l &amp;&amp; r&lt;=R) return sum[x];\n        pushdown(x);\n        int ret=0;\n        if(L&lt;=mid) ret+=query(ls,l,mid,L,R);\n        if(R&gt;mid) ret+=query(rs,mid+1,r,L,R);\n        return ret%mod;\n    }\n    void update(int x,int l,int r,int p,int c){\n        if(l==r){\n            sum[x]=upm(sum[x]+c);\n            return;\n        }\n        pushdown(x);\n        if(p&lt;=mid) update(ls,l,mid,p,c);\n        else update(rs,mid+1,r,p,c);\n        pushup(x);\n    }\n    void mult(int x,int l,int r,int L,int R){\n        if(L&gt;R) return;\n        if(L&lt;=l &amp;&amp; r&lt;=R){\n            tag[x]=2ll*tag[x]%mod;\n            sum[x]=2ll*sum[x]%mod;\n            return;\n        }\n        pushdown(x);\n        if(L&lt;=mid) mult(ls,l,mid,L,R);\n        if(R&gt;mid) mult(rs,mid+1,r,L,R);\n        pushup(x);\n    }\n\n    #undef ls\n    #undef rs\n    #undef mid\n}T;\n\nint fa[N];\npii c[N];\nint findf(int x){\n    return fa[x]==x?x:fa[x]=findf(fa[x]);\n}\nvoid merge(int x,int y,int v){//v=0 get left\n    x=findf(x);y=findf(y);\n    if(x==y) return;\n    if(!v) fa[max(x,y)]=min(x,y);\n    else fa[min(x,y)]=max(x,y); \n}\n\nvoid solve(){\n    n=read();m=read();\n    for(int i=1;i&lt;=n;++i) a[i]=read(),b[i]=read(),p[i]=i;\n    for(int i=1;i&lt;=m;++i) s[i].x=read(),s[i].l=read(),s[i].r=read(),s[i].id=i;\n\n    //solve r\n    sort(p+1,p+n+1,[&amp;](int x,int y){return a[x]-b[x+1]&gt;=a[y]-b[y+1];});\n    sort(s+1,s+m+1,[&amp;](seg x,seg y){return x.r&gt;y.r;});\n\n    for(int i=1;i&lt;=n;++i) fa[i]=i;\n    for(int i=1,j=1;i&lt;=m;++i){\n        while(j&lt;=n &amp;&amp; a[p[j]]-b[p[j]+1]&gt;=s[i].r){\n            if(p[j]!=n){\n                merge(p[j],p[j]+1,1);\n            }\n            ++j;\n        }\n        c[s[i].id].se=findf(s[i].x);\n    }\n\n    //solve l\n    sort(p+1,p+n+1,[&amp;](int x,int y){return a[x]-b[x-1]&gt;=a[y]-b[y-1];});\n    sort(s+1,s+m+1,[&amp;](seg x,seg y){return x.l&gt;y.l;});\n\n    for(int i=1;i&lt;=n;++i) fa[i]=i;\n    for(int i=1,j=1;i&lt;=m;++i){\n        while(j&lt;=n &amp;&amp; a[p[j]]-b[p[j]-1]&gt;=s[i].l){\n            if(p[j]!=1){\n                merge(p[j],p[j]-1,0);\n            }\n            ++j;\n        }\n        c[s[i].id].fi=findf(s[i].x);\n    }\n\n    sort(c+1,c+m+1,[&amp;](pii x,pii y){return x.se&lt;y.se;});\n    T.build(1,0,n);\n    for(int i=1;i&lt;=m;++i){\n        int l=c[i].fi,r=c[i].se;\n        int tmp=T.query(1,0,n,l-1,r);\n        //cout&lt;&lt;i&lt;&lt;\" \"&lt;&lt;l&lt;&lt;\" \"&lt;&lt;r&lt;&lt;\" \"&lt;&lt;\"tmp:\"&lt;&lt;tmp&lt;&lt;hvie;\n        T.update(1,0,n,r,tmp);\n        T.mult(1,0,n,0,l-2);// here is [0,l-2]\n    }\n    cout&lt;&lt;T.query(1,0,n,n,n)&lt;&lt;hvie;\n}\n\nsigned main(){\n    for(int cas=read();cas--;){\n        solve();\n    }\n    return 0;\n}\n\n/*\n2\n4 3\n1 4\n2 3\n3 2\n4 1\n1 2 -2\n2 2 1\n3 1 1\n\n4 3\n1 4\n2 3\n3 2\n4 1\n1 2 -2\n2 2 1\n3 1 1\n*/\n</code></pre> <p>D.Keychains</p> <p>\u7ed9\u4f60\u4e24\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u5706\uff08\u5706\u5fc3\uff0c\u534a\u5f84\uff0c\u6cd5\u5411\u91cf\uff09\uff0c\u95ee\u4f60\u4e24\u4e2a\u5706\u662f\u5426\u76f8\u4e92\u6263\u4f4f\u3002</p> <p>\u9996\u5148\u53ef\u4ee5\u5148\u6c42\u51fa\u4e24\u4e2a\u9762\u7684\u4ea4\u7ebf\uff0c\u5982\u679c\u9762\u5e73\u884c\u80af\u5b9a\u4e0d\u6ee1\u8db3\u3002\u6c42\u4ea4\u7ebf\u7684\u65b9\u6cd5\uff1a\u9996\u5148\u53ef\u4ee5\u786e\u5b9a\u65b9\u5411\u662f\u4e24\u4e2a\u6cd5\u5411\u91cf\u7684\u53c9\u4e58\uff0c\u7136\u540e\u8003\u8651\u5176\u4e2d\u4e00\u4e2a\u5706\u5fc3\u843d\u5230\u4ea4\u7ebf\u4e0a\u7684\u70b9\uff0c\u5c31\u662f\u8981\u6cbf\u7740\u5782\u8db3\u8d70\u3002\u800c\u5782\u8db3\u53ef\u4ee5\u8868\u793a\u4e3a\\(n_1\\times v\\)\uff0cv\u662f\u76f4\u7ebf\u7684\u65b9\u5411\uff0c\u7136\u540e\u7b80\u5355\u5217\u4e00\u4e0b\u5c31\u77e5\u9053\u8981\u79fb\u52a8\u591a\u5c11\u4e86\u3002\u7136\u540e\u6c42\u76f4\u7ebf\u548c\u4e24\u4e2a\u5706\u7684\u4ea4\u70b9\uff0c\u8fd9\u4e2a\u4e5f\u5f88\u597d\u6c42\u3002\u7136\u540e\u5224\u65ad\u5728A\u7403\u7684\u4ea4\u70b9\u4e00\u5b9a\u662f\u4e00\u4e2a\u5728B\u7403\u5185\uff0c\u4e00\u4e2a\u5728B\u7403\u5916\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef long double db;\ntypedef unsigned long long ull;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\nconst db eps=1e-9,inf=1e18;\nint sgn(db x){\n    if(x&lt;-eps) return -1;\n    if(x&gt;eps) return 1;\n    return 0;\n}\nstruct point{\n    db x,y,z;\n    point(){}\n    point(db x,db y,db z):x(x),y(y),z(z){}\n    point operator-(const point&amp;a)const{\n        return point(x-a.x,y-a.y,z-a.z);\n    }\n    point operator+(const point&amp;b)const{\n        return point(x+b.x,y+b.y,z+b.z);\n    }\n    point operator*(const db&amp;c)const{\n        return point(x*c,y*c,z*c);\n    }\n    point operator/(const db&amp;d)const{\n        return point(x/d,y/d,z/d);\n    }\n    friend ostream&amp;operator&lt;&lt;(ostream&amp;out, const point&amp;a){\n        out&lt;&lt;\"(\"&lt;&lt;a.x&lt;&lt;','&lt;&lt;a.y&lt;&lt;','&lt;&lt;a.z&lt;&lt;\")\";return out;\n    }\n    void input(){\n        x=yh(),y=yh(),z=yh();\n    }\n}c1,c2,n1,n2;\ndb r1,r2;\ntypedef point vec3;\ndb dot(const point&amp;a,const point &amp;b){\n    return a.x*b.x+a.y*b.y+a.z*b.z;\n}\nvec3 cross(const point &amp;a,const point &amp;b){\n    return point(\n        a.y*b.z-a.z*b.y,\n        a.z*b.x-a.x*b.z,\n        a.x*b.y-a.y*b.x\n        );\n}\nvec3 normalize(const vec3&amp;a){\n    db len=sqrt(a.x*a.x+a.y*a.y+a.z*a.z);\n    return a/len;\n}\nstruct plane{\n    point o;\n    vec3 norm;\n    plane(point o,vec3 n):o(o){\n        norm=normalize(n);\n    }\n};\n\npoint shadow(point c,plane p){\n    return (p.norm* dot((p.o-c),p.norm)) + c;\n}\npair&lt;db,db&gt;inter(point c,db r,point s,vec3 v){\n    vec3 q=s-c;\n    db A=dot(v,v);\n    db B=dot(v,q);\n    db C=dot(q,q)-r*r;\n    // cout&lt;&lt;\"~\"&lt;&lt;A&lt;&lt;' '&lt;&lt;B&lt;&lt;' '&lt;&lt;C&lt;&lt;endl;\n    if(sgn(B*B-A*C)&gt;=0){\n        db D=sqrt(B*B-A*C);\n        return mkp((-B-D)/A,(-B+D)/A);\n    }\n    else{\n        return mkp(-inf,-inf);\n    }\n}\nbool check(point c,db r,point a){\n    return sgn(dot(c-a,c-a)-r*r)&lt;0;\n}\n\nsigned main(){\n    dwn(_,yh(),1){\n        c1.input(),n1.input(),r1=yh();\n        c2.input(),n2.input(),r2=yh();\n        plane p1(c1,n1),p2(c2,n2);\n        vec3 v=cross(n1,n2);\n        if(sgn(dot(v,v))==0){\n            cout&lt;&lt;\"No\\n\";\n            continue;\n        }\n        vec3 s=shadow(c1,p2);\n        pair&lt;db,db&gt; i1=inter(c1,r1,s,v);\n        pair&lt;db,db&gt; i2=inter(c2,r2,s,v);\n        if(sgn(i1.fi-inf)==0||sgn(i2.fi-inf)==0){\n            cout&lt;&lt;\"No\\n\";\n            continue;\n        }\n        // cout&lt;&lt;s&lt;&lt;' '&lt;&lt;v&lt;&lt;endl;\n        // cout&lt;&lt;(s+v*i1.fi)&lt;&lt;' '&lt;&lt;(s+v*i1.se)&lt;&lt;hvie;\n        // cout&lt;&lt;(s+v*i2.fi)&lt;&lt;' '&lt;&lt;(s+v*i2.se)&lt;&lt;hvie;\n        bool ok1=check(c2,r2,s+v*i1.fi)^check(c2,r2,s+v*i1.se);\n        bool ok2=check(c1,r1,s+v*i2.fi)^check(c1,r1,s+v*i2.se);\n        cout&lt;&lt;(ok1&amp;&amp;ok2?\"Yes\":\"No\")&lt;&lt;hvie;\n    }\n\n    return 0;\n}\n/*\n(s+vt-c1)^2=r1^2\n\n*/\n</code></pre> <p>H.Keyboard Warrior</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6a21\u5f0f\u4e32\uff0c\u7136\u540e\u7ed9m\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26k\u6b21\uff0c\u6216\u8005\u9000\u683ck\u6b21\u3002\u95ee\u662f\u5426\u5728\u67d0\u4e00\u4e2a\u65f6\u523b\u8f93\u5165\u51fa\u7684\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u5305\u62ec\u6a21\u5f0f\u4e32\u3002</p> <p>\\(n,m\\le 2\\times 10^5, 0\\le k\\le 10^9\\)</p> <p>\u7528\u591a\u9879\u5f0f\u5f62\u5f0f\u7684\u54c8\u5e0c\u7684\u8bdd\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b49\u6bd4\u6570\u5217\u6765\u6c42\u51fa\u91cd\u590d\u5b57\u7b26\u7684\u54c8\u5e0c\u503c\u3002\u540c\u65f6\u7528\u4e86\u4e00\u4e2a\u6808\u6765\u7ef4\u62a4\u5f53\u524d\u8f93\u5165\u7684\u4e32\uff0c\u8bb0\u5f55\u4e86\u5b57\u7b26\u6539\u53d8\u65f6\u7684\u54c8\u5e0c\u503c\u3002\u9000\u683c\u7684\u65f6\u5019\u5c31\u66b4\u529b\u9000\u5c31\u597d\u4e86\u3002\u7136\u540e\u5728\u540e\u7f00\u5b57\u7b26\u7b49\u4e8e\u6a21\u5f0f\u4e32\u540e\u7f00\u5b57\u7b26\uff0c\u4e14\u91cd\u590d\u6b21\u6570\u6ee1\u8db3\u65f6\uff0ccheck\u5bf9\u5e94\u7684\u540e\u7f00\u3002\u627e\u5230\u67d0\u4e2a\u4f4d\u7f6e\u7684\u54c8\u5e0c\u503c\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e0b\u4f4d\u7f6e\u3002\uff08\u4ee3\u7801\u6bd4\u8f83\u4e11\u964b\uff09</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5,p=31,mod=1e9+7;\nint n,m;\n\nll pw[maxn];\nll ksm(ll x,int k){\n    assert(k&gt;=0);\n    ll ans=1;\n    for(;k;k&gt;&gt;=1,x=x*x%mod)if(k&amp;1) ans=ans*x%mod;\n    return ans;\n}\nconst int ip=ksm(p-1,mod-2);\nll Hash(ll H0,char c,int x){\n    if(x&lt;0){\n        cout&lt;&lt;H0&lt;&lt;' '&lt;&lt;c&lt;&lt;' '&lt;&lt;x&lt;&lt;endl;\n    }\n    assert(x&gt;=0);\n    return (H0*ksm(p,x)%mod+(ll)(c-'a'+1)*(ksm(p,x)+mod-1)%mod*ip%mod)%mod;\n}\n\nstruct node{\n    char c;\n    int x;\n    ll val;\n    int cnt;\n    int r;\n    node(){}\n    node(char c,int x,ll val,int cnt,int r):c(c),x(x),val(val),cnt(cnt),r(r){}\n    bool operator&lt;(const node&amp;a)const{\n        return r&lt;a.r;\n    }\n};\nll Hash(const vector&lt;node&gt;&amp;v,ll i){\n    int id=upper_bound(v.begin(),v.end(),node(0,0,0,0,i))-v.begin()-1;\n    if(i==v[id].r){\n        return v[id].val;\n    }\n    assert(i&gt;=v[id].r); \n    return Hash(v[id].val,v[id+1].c,i-v[id].r);\n}\nchar s[maxn];\nsigned main(){\n    pw[0]=1;\n    rep(i,1,2e5) pw[i]=pw[i-1]*p%mod;\n    dwn(_,yh(),1){\n        n=yh(),m=yh();\n        scanf(\"%s\",s+1);\n        ll VAL=0;\n        char lastc=0;\n        int lastcnt=0;\n        rep(i,1,n){\n            VAL=(VAL*p%mod+(s[i]-'a'+1))%mod;\n            if(s[i]==lastc) lastcnt++;\n            else lastc=s[i],lastcnt=1;\n            // cout&lt;&lt;VAL&lt;&lt;hvie;\n        }\n        // cout&lt;&lt;\"---------\\n\";\n        // cout&lt;&lt;lastc&lt;&lt;\": \"&lt;&lt;lastcnt&lt;&lt;endl;\n        vector&lt;node&gt;a;\n        a.pb(node('\\0',0,0ll,0,0));\n        bool ok=0;\n        rep(i,1,m){\n            char c=getchar();while(!isalpha(c)&amp;&amp;c!='-') c=getchar();\n            int x=yh();\n            if(x==0){\n                continue;\n            }\n            else if(c=='-'){\n                while(a.size()&gt;1&amp;&amp;a.back().x&lt;=x){\n                    x-=a.back().x;\n                    a.pop_back();\n                }\n                if(a.size()&gt;1&amp;&amp;x){\n                    node tmp=a.back();\n                    tmp.x-=x;\n                    tmp.r-=x;\n                    if(tmp.c==lastc){\n                        tmp.cnt-=x;\n                    }\n                    a.pop_back();\n                    assert(tmp.x&gt;=0);\n                    tmp.val=Hash(a.back().val, tmp.c, tmp.x);\n                    a.pb(tmp);\n                }\n            }\n            else{\n                assert(x&gt;=0);\n                ll H=Hash(a.back().val,c,x);\n                ll T=a.back().cnt;\n                ll R=a.back().r+x;\n                if(c==lastc) T+=x;\n                else T=0;\n                // cout&lt;&lt;\"???????? \"&lt;&lt;cnt&lt;&lt;' '&lt;&lt;endl;;\n                if(T&gt;=lastcnt&amp;&amp;a.back().cnt&lt;=lastcnt){\n                    ll rem=T-lastcnt;\n                    ll righ=a.back().r+x-rem;\n                    if(x&lt;rem){\n                        cout&lt;&lt;T&lt;&lt;' '&lt;&lt;a.back().cnt&lt;&lt;' '&lt;&lt;rem&lt;&lt;' '&lt;&lt;lastcnt&lt;&lt;\" \"&lt;&lt;x&lt;&lt;endl;\n                        assert(x&gt;=rem);\n                    }\n                    assert(x&gt;=rem);\n                    ll Hr=Hash(a.back().val,c,x-rem);\n                    ll lef=righ-n+1;\n                    // cout&lt;&lt;lef&lt;&lt;'-'&lt;&lt;righ&lt;&lt;endl;\n                    if(lef&gt;=1){\n                        assert(lef&gt;=1);\n                        ll Hl=Hash(a,lef-1);\n                        if((Hr-Hl*pw[righ-lef+1]%mod+mod)%mod==VAL){\n                            ok=1;\n                        }\n                    }\n                }\n                // cout&lt;&lt;H&lt;&lt;endl;\n                a.pb(node(c,x,H,T,R));\n            }\n            // cout&lt;&lt;i&lt;&lt;\": \";\n            // for(auto p:a){\n            //  cout&lt;&lt;p.c&lt;&lt;','&lt;&lt;p.x&lt;&lt;','&lt;&lt;p.cnt&lt;&lt;\"  \";\n            // }\n            // cout&lt;&lt;\"----- ok:\"&lt;&lt;ok&lt;&lt;endl;\n            // cout&lt;&lt;endl;\n        }\n        cout&lt;&lt;(ok?\"yes\":\"no\")&lt;&lt;hvie;\n    }\n    return 0;\n}\n</code></pre> <p>1010.Assassination</p> <p>\u7ed9\u5b9a\u4e00\u5e45\u5e26\u8fb9\u6743\u65e0\u5411\u56fe\uff0c\u5220\u53bb\u6700\u5c11\u7684\u8fb9\u4f7f\u5f97\u56fe\u7684\u6700\u5927\u751f\u6210\u68ee\u6797\u6bd4\u539f\u56fe\u5c0f\u3002</p> <p>\\(n,m\\leq 10^5\\)\uff0c\u540c\u4e00\u8fb9\u6743\u7684\u8fb9\u4e0d\u8d85\u8fc7100\u6761\u3002</p> <p>\u5982\u679c\u6709\u4e00\u6761\u8fb9\u4e00\u5b9a\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\uff08\u5173\u5efa\u8fb9\uff09\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5220\u6389\u8fd9\u6761\u8fb9\u5373\u53ef\uff0c\u5426\u5219\u8981\u5220\u7684\u8fb9\u662f\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\u7684\u8fb9\uff08\u4f2a\u5173\u952e\u8fb9\uff09\u7684\u4e00\u4e2a\u96c6\u5408\uff0c\u6bcf\u9897\u6700\u5927\u751f\u6210\u6811\u81f3\u5c11\u6709\u91cc\u9762\u7684\u4e00\u6761\u8fb9\u3002</p> <p>\u90a3\u4e48\u8003\u8651Kruskal\uff0c\u5047\u5982\u6700\u540e\u6700\u5c0f\u8fb9\u6743\u662f\\(w\\)\uff0c\u5904\u7406\u5b8c\u6240\u6709\u6743\u503c\u5927\u4e8e\\(w\\)\u7684\u8fb9\u4ee5\u540e\uff0c\u5bf9\u5e94DSU\u7684\u8fde\u901a\u6027\u4e00\u5b9a\u662f\u786e\u5b9a\u7684\uff0c\u4e0b\u9762\u8981\u5904\u7406\u8fb9\u6743\u7b49\u4e8e\\(w\\)\u7684\u3002\u6211\u4eec\u5c06\u5df2\u7ecf\u8fde\u901a\u7684\u70b9\u7f29\u70b9\uff0c\u672c\u8d28\u4e0a\u662f\u8981\u6c42\u8fd9\u5e45\u56fe\u7684\u4e00\u4e2a\u6700\u5c0f\u5272\u3002\u7531\u4e8e\u540c\u4e00\u8fb9\u6743\u7684\u8fb9\u4e0d\u8d85\u8fc7100\u6761\uff0c\u76f4\u63a5\u7f51\u7edc\u6d41\u5c31\u884c\u4e86\uff0c\u6216\u8005\u4f7f\u7528\u66f4\u5feb\u7684Stoer-Wagner\u7b97\u6cd5\u3002</p> <p>\u4e3a\u4ec0\u4e48\u6ca1\u4ee3\u7801\uff1f\u56e0\u4e3a\u5199\u70b8\u4e86\u3002</p>"},{"location":"contests/hdu2022-3/","title":"2022\u676d\u7535\u591a\u6821(3)","text":"<p>1001. Equipment Upgrade</p> <p>\u4f60\u624b\u4e0a\u521d\u59cb\u6709\u4e00\u4e2a0\u7ea7\u7684\u88c5\u5907\uff0c\u4ece\u7b49\u7ea7i\u5347\u7ea7\u9700\u8981\\(c_i\\)\u7684\u4ef7\u683c\uff0c\u6709\\(p_i\\)\u7684\u4ef7\u683c\u5347\u4e00\u7ea7\uff0c\u6709\\((1-p_j)\\frac{w_j}{\\sum_{j=1}^iw_j}\\)\u7684\u6982\u7387\u964d\u4f4e\\(j\\)\u7ea7\uff0c\u95ee\u5347\u5230n\u7ea7\u7684\u671f\u671b\u82b1\u8d39\u3002</p> <p>\u4fdd\u8bc1\\(p_0\\)=1, \\(\\sum n\\le 5e5\\)</p> <p>\u9996\u5148\u8bbe\\(f(i)\\)\u8868\u793a\u4ece\\(i\\)\u7ea7\u5347\u5230\\(n\\)\u7ea7\u7684\u671f\u671b\u82b1\u8d39\uff0c\\(f(n)=0\\)\uff0c\u8981\u6c42\u7684\u662f\\(f(0)\\). \u4e8e\u662f\u53ef\u4ee5\u5217\u5f0f\u5b50\uff1a $$ f(i)=c_i+p_if(i+1)+\\frac{(1-p_i)}{\\sum_{j=1}^i w_j}\\sum_{j=1}^i w_j f(i-j)\\ $$</p> <p>\u7531\u671f\u671b\u7684\u7ebf\u6027\u6027\uff0c\u53ef\u4ee5\u8bbe\\(f(i)=a(i)+f(0)\\times b(i)\\)\uff0c\u90a3\u4e48\\(a_0=0, b_0=1\\), \u7531\\(f0=c_0+f_1\\)\u77e5\\(a_1=-c_0, b_1=1\\)\u3002 $$ a_{i}+f_0b_i=c_i+p_i(a_{i+1}+f_0b_{i+1})+\\frac{(1-p_i)}{sw_i}\\sum_{j=1}^iw_j(a_{i-j}+f_0 b_{i-j}) $$</p> <p>\u628a\u6709\\(f_0\\)\u548c\u6ca1\u6709\\(f_0\\)\u7684\u9879\u5206\u5f00\uff0c\u53ef\u4ee5\u5f97\u5230\u5173\u4e8ea\u548cb\u7684\u5f0f\u5b50 $$ a_{i+1}=\\frac{1}{p_i}(a_i-c_i-\\frac{1-p_i}{sw_i}\\sum_{j=1}^i w_ja_{i-j})\\ b_{i+1}=\\frac{1}{p_i}(b_i-\\frac{1-p_i}{sw_i}\\sum_{j=1}^iw_jb_{i-j})\\ $$ \u4f7f\u7528\u5206\u6cbbNTT\u53ef\u4ee5\u6c42\u89e3\u3002 \u7528\u5206\u6cbbNTT\u6c42\u89e3\u7684\u8fc7\u7a0b\uff0c\u5373\u5047\u8bbe\u77e5\u9053\u4e86\\([l,mid]\\)\uff0c\u90a3\u5c31\u53ef\u4ee5\u77e5\u9053\u5bf9\\([mid+1,r]\\)\u7684\u76ee\u6807\u51fd\u6570\u7684\u4e00\u90e8\u5206\u8d21\u732e\u3002 \u628a\\([l,mid]\\)\u7684\u90e8\u5206\u548c\u957f\u5ea6\u4e3a\\([1,r-l+1]\\)\u7684\u90e8\u5206\u8fdb\u884c\u5377\u79ef\u3002\u524d\u8005\u9700\u8981\u8fdb\u884c\u4e00\u4e2a\u5de6\u79fb\uff0c\u56e0\u6b64\u5377\u51fa\u6765\u7684\u4e5f\u9700\u8981\u6574\u4f53\u79fb\u52a8\u4e00\u4e0b\u3002\u7136\u540e\u5728\u53f6\u5b50\u5904\u7edf\u8ba1\u7b54\u6848\u3002</p> <p>\u4e8b\u5b9e\u4e0a\u597d\u50cf\u53ef\u4ee5\u8bbe\u5347\u4e00\u7ea7\u7684\u671f\u671b\u82b1\u8d39\uff0c\u7136\u540e\u4e5f\u53ef\u4ee5\u641e\u5230\u4e00\u4e2a\u53ef\u4ee5\u5206\u6cbbntt\u7684\u5f0f\u5b50\uff0c\u4f46\u662f\u6ca1\u5199\uff08\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int x;scanf(\"%d\",&amp;x);\n    return x;\n}\nconst int maxn=3e5+5,mod=998244353,G=3;\n\nll qpow(ll a,ll b){\n    ll res=1;for(;b;b&gt;&gt;=1,a=a*a%mod){\n        if(b&amp;1) res=res*a%mod;\n    }\n    return res%mod;\n}\nll inv(ll x){return qpow(x,mod-2);}\nint RR[maxn],limit,L;\nvoid NTT(ll *A,int type){\n    for(int i=0;i&lt;limit;i++){\n        if(i&lt;RR[i]) swap(A[i],A[RR[i]]);\n    }\n    for(int mid=1;mid&lt;limit;mid&lt;&lt;=1){\n        ll wn=qpow(G,(mod-1)/(mid*2));\n        if(type==-1) wn=qpow(wn,mod-2);\n        for(int len=mid&lt;&lt;1,pos=0;pos&lt;limit;pos+=len){\n            ll w=1;\n            for(int k=0;k&lt;mid;k++,w=(w*wn)%mod){\n                ll x=A[pos+k],y=w*A[pos+mid+k]%mod;\n                A[pos+k]=(x+y)%mod;\n                A[pos+k+mid]=(x-y+mod)%mod;\n            }\n        }\n    }\n    if(type==-1){\n        ll limit_inv=inv(limit);\n        for(int i=0;i&lt;limit;i++){\n            A[i]=(A[i]*limit_inv)%mod;\n        }\n    }\n}\nvoid poly_mul(ll *a,ll *b){\n    NTT(a,1);NTT(b,1);\n    for(int i=0;i&lt;limit;i++) a[i]=a[i]*b[i]%mod;\n    NTT(a,-1);\n}\nll A[maxn],B[maxn],W[maxn];\nll fa[maxn],fb[maxn];\nll ga[maxn],gb[maxn];\nint n;\nll c[maxn],p[maxn],s[maxn],w[maxn];\nll ip[maxn],is[maxn];\n\nvoid cdq(int l,int r){\n    if(l==r){\n        if(l){\n            // cout&lt;&lt;l&lt;&lt;\":\"&lt;&lt;ga[l]&lt;&lt;' '&lt;&lt;gb[l]&lt;&lt;' '&lt;&lt;fa[l]&lt;&lt;endl;\n            fa[l+1]=(fa[l]-(1ll-p[l])*is[l]%mod*ga[l]%mod+mod)%mod*ip[l]%mod;\n            fb[l+1]=(fb[l]-c[l]-(1ll-p[l])*is[l]%mod*gb[l]%mod+mod)%mod*ip[l]%mod;\n            // cout&lt;&lt;l+1&lt;&lt;\"!:\"&lt;&lt;fa[l+1]&lt;&lt;\" \"&lt;&lt;fb[l+1]&lt;&lt;\"!!!\\n\";\n            fa[l+1]=(fa[l+1]%mod+mod)%mod;\n            fb[l+1]=(fb[l+1]%mod+mod)%mod;\n\n        }\n        return ;\n    }\n    int mid=(l+r)&gt;&gt;1,len=r-l+1;\n    cdq(l,mid);\n    limit=1;\n    while(limit&lt;=len) limit&lt;&lt;=1;\n    for(int i=0;i&lt;limit;i++) A[i]=B[i]=W[i]=0;\n    for(int i=l;i&lt;=mid;i++) A[i-l]=fa[i],B[i-l]=fb[i];//,cout&lt;&lt;A[i-l]&lt;&lt;','&lt;&lt;B[i-l]&lt;&lt;hvie;\n    for(int i=1;i&lt;=r-l+1;i++) W[i]=w[i];\n    int j=__builtin_ctz(limit)-1;\n    for(int i=0;i&lt;limit;i++) RR[i]=RR[i&gt;&gt;1]&gt;&gt;1|((i&amp;1)&lt;&lt;j);\n    NTT(A,1);\n    NTT(B,1);\n    NTT(W,1);\n    for(int i=0;i&lt;limit;i++) A[i]=(ll)A[i]*W[i]%mod,B[i]=(ll)B[i]*W[i]%mod;\n    NTT(A,-1);\n    NTT(B,-1);\n    for(int i=mid+1;i&lt;=r;i++){\n        ga[i]=(ga[i]+A[i-l])%mod;\n        gb[i]=(gb[i]+B[i-l])%mod;\n    }\n    cdq(mid+1,r);\n}\n\nsigned main(){\n    ll i100=inv(100);\n    dwn(_,yh(),1){\n        n=yh();\n        rep(i,0,n-1){\n            p[i]=(ll)yh()*i100%mod;\n            c[i]=yh();\n            ip[i]=inv(p[i]);\n        }\n        rep(i,1,n-1){\n            w[i]=yh();\n            s[i]=w[i]+s[i-1];\n            is[i]=inv(s[i]);\n        }\n        rep(i,0,n) ga[i]=gb[i]=0;\n        fa[0]=1, fb[0]=0;\n        fa[1]=1; fb[1]=(mod-c[0])%mod;\n        cdq(0,n-1);\n        // rep(i,0,2){\n        //     cout&lt;&lt;fa[i]&lt;&lt;\" -- \"&lt;&lt;fb[i]&lt;&lt;hvie;\n        // }\n        ll ans=1ll*(mod-fb[n])*inv(fa[n])%mod;\n        cout&lt;&lt;ans&lt;&lt;hvie;\n    }\n    return 0;\n}\n</code></pre> <p>1005.Spanning Tree Game</p> <p>\u7ed9\u5b9a\u4e00\u526f\\(n\\)\u4e2a\u70b9\\(m\\)\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u6709\u4e24\u4e2a\u6743\\(a_i,b_i\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\\(k(0\\leq k \\leq m)\\)\uff0c\u4ece\\(a\\)\u4e2d\u9009\\(k\\)\u4e2a\u8fb9\u6743\uff0c\\(b\\)\u4e2d\u9009\\(m-k\\)\u4e2a\u8fb9\u6743\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002</p> <p>\\(n\\leq 9,m\\leq 30\\)</p> <p>\u9996\u5148\u8fd9\u73a9\u610f\u80af\u5b9a\u8981\u62c6\u8fb9\uff0c\u7136\u540e\u6309\u7167MST\u7684\u7b97\u6cd5\u6765\u505a\u3002\u5bf9\u4e00\u6761\u8fb9\\((u,v,a,b)\\)\uff0c\u82e5\\(a&lt;b\\)\uff0c\u62c6\u6210\\((u,v,a,1)\\)\u548c\\((u,v,b,0)\\)\uff0c\u5426\u5219\u62c6\u6210\\((u,v,b,-1)\\)\u548c\\((u,v,a,0)\\)\u3002\u8fd9\u4e9b\u8fb9\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fb9\u6743\u76f8\u540c0\u7c7b\u578b\u5728\u540e\u9762\u3002</p> <p>\u8003\u8651\u4e00\u6761\u8fb9\\((u,v,w,t)\\)\u7684\u610f\u4e49\uff0c\u82e5\u7c7b\u578b\u4e3a1\uff0c\u8868\u793a\u9009\u62e9\u8fd9\u6761\u8fb9\u65f6\\(a\\)\u7684\u9009\u62e9\u6570\u91cf\\(+1\\)\uff0c\u82e5\\(u,v\\)\u4e0d\u8fde\u901a\uff0c\u6b64\u65f6\u7b54\u6848\\(+w\\)\uff1b\u82e5\u7c7b\u578b\u4e3a-1\uff0c\u8868\u793a\u9009\u62e9\u8fd9\u6761\u8fb9\u65f6\\(a\\)\u7684\u9009\u62e9\u6570\u91cf\\(-1\\)\uff0c\u82e5\\(u,v\\)\u4e0d\u8fde\u901a\uff0c\u6b64\u65f6\u7b54\u6848\\(+w\\)\uff1b\u82e5\u7c7b\u578b\u4e3a0\uff0c\u8fd9\u6761\u8fb9\u5bf9\u5e94\u7684\u53e6\u4e00\u6761\u8fb9\u5728\u524d\u9762\u5df2\u7ecf\u8003\u8651\u8fc7\uff0c\u82e5\u53e6\u4e00\u6761\u8fb9\u9009\u4e86\uff0c\u8fd9\u6761\u8fb9\u9009\u4e0a\u4e0d\u5f71\u54cd\u7ed3\u679c\uff0c\u5426\u5219\u8fd9\u6761\u8fb9\u4e00\u5b9a\u8981\u9009\uff0c\u6b64\u65f6\u82e5\\(u,v\\)\u4e0d\u8fde\u901a\uff0c\u7b54\u6848\\(+w\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6761\u8fb9\u6709\u4e24\u79cd\u9009\u62e9\u4f7f\u5f97\u56fe\u8fde\u901a\u6027\u4e0d\u540c\u3002\u8003\u8651\\(f_{i,S,j}\\)\u8868\u793a\u524d\\(i\\)\u6761\u8fb9\uff0c\u8fde\u901a\u6027\u7684\u6700\u5c0f\u8868\u793a\u6cd5\u4e3a\\(S\\)\uff0c\\(j\\)\u6761\u8fb9\u6743\u4e3a\\(a\\)\u7684MST\u6700\u5927\u503c\uff0c\u9884\u5904\u7406\u8f6c\u79fb\u53ef\u4ee5\\(O(1)\\)\u8f6c\u79fb\u3002</p> <p>\u8fd9\u91cc\u56fe\u8fde\u901a\u6027\u7684\u6700\u5c0f\u8868\u793a\u6cd5\uff0c\u5927\u6982\u662f\\(f_i\\)\u8868\u793a\u7b2c\\(i\\)\u4e2a\u6570\u5b57\u8fde\u901a\u7684\u6700\u5c0f\u7684\u7f16\u53f7\u7684\u70b9\uff0c\u53ef\u4ee5\u6bcf\\(4\\)\u4f4d\u4e8c\u8fdb\u5236\u8868\u793a\u4e00\u4e2a\\(f\\)\uff0c\u7136\u540e\u7528map\u6765\u5b58\u7f16\u53f7\u5565\u7684\u3002</p> <p>\u72b6\u6001\u6570\\(i,j\\)\u90fd\u4e3a\\(O(m)\\)\uff0c\\(S\\)\u662f\u8d1d\u5c14\u6570\u7ea7\u522b\uff0c\\(Bell(9)=21147\\)\uff0c\u590d\u6742\u5ea6\\(O(m^2Bell(n))\\)\uff0c\u5b9e\u9645\u4e0a\u8fd8\u8981\u5e26\u4e2amap\u7684\u5c0flog\uff1f</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\n#define read yh\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long long db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\n\nconst int N=12,M=32,K=21200;\nint n,m,cnt,bas;\nint f[N],g[2][K][M],vis[N];\nll cb[K];\nmap&lt;ll,int&gt;mp;\n\nstruct edg{\n    int u,v,w,t;\n    edg(int u=0,int v=0,int w=0,int t=0):u(u),v(v),w(w),t(t){}\n};\nvector&lt;edg&gt;e;\n\nvoid dfs(int x,int y){//all state\n    if(x&gt;n){\n        ll s=0;\n        for(int i=1;i&lt;=n;++i) s=s&lt;&lt;4|f[i];\n        mp[s]=++cnt;cb[cnt]=s;\n        //cout&lt;&lt;s&lt;&lt;\" \"&lt;&lt;cnt&lt;&lt;hvie;\n        return;\n    }\n    for(int i=1;i&lt;=y+1;++i){\n        f[x]=i;\n        dfs(x+1,i&gt;y?i:y);\n    }\n}\nvoid chkmax(int &amp;x,int y){\n    x=max(x,y);\n}\n\nvoid init(){\n    cnt=bas=0;\n    e.clear();\n}\n\nvoid clr(int x){\n    for(int i=1;i&lt;=cnt;++i) for(int j=0;j&lt;=m;++j) g[x][i][j]=-1;\n}\nvoid up(int x){\n    for(int i=1;i&lt;=cnt;++i) for(int j=0;j&lt;=m;++j) g[x^1][i][j]=g[x][i][j];\n}\n\nsigned main(){\n    dwn(_,yh(),1){\n        init();\n        n=read();m=read();\n        for(int i=1;i&lt;=m;++i){\n            int u=read(),v=read(),a=read(),b=read();\n            if(a&lt;b) e.pb({u,v,a,1}),e.pb({u,v,b,0});\n            else ++bas,e.pb({u,v,a,0}),e.pb({u,v,b,-1});\n        }\n        sort(e.begin(),e.end(),[&amp;](const edg&amp;A,const edg&amp;B){\n            if(A.w==B.w) return (!A.t)&lt;(!B.t);\n            return A.w&lt;B.w;\n        });\n        dfs(1,0);\n\n        int cur=0,pre=1;\n        clr(pre);clr(cur);g[pre][cnt][bas]=0;   \n        for(auto p:e){\n            int u=p.u,v=p.v,w=p.w,t=p.t;\n            clr(cur);\n            for(int i=1;i&lt;=cnt;++i){\n                ll s=cb[i];\n                for(int j=n;j;--j){\n                    f[j]=s&amp;15;s&gt;&gt;=4;\n                }\n                int o=i,fu=f[u],fv=f[v],val=fu==fv?0:w;\n                if(fu!=fv){\n                    for(int j=1;j&lt;=n;++j) if(f[j]==fu) f[j]=fv;\n                    int now=0;\n                    for(int j=1;j&lt;=n;++j) vis[j]=0;\n                    for(int j=1;j&lt;=n;++j) if(!vis[f[j]]) vis[f[j]]=++now;\n                    s=0;\n                    for(int j=1;j&lt;=n;++j) s=s&lt;&lt;4|vis[f[j]];\n                    o=mp[s];\n                }\n                if(!t){\n                    for(int j=0;j&lt;=m;++j) if(~g[pre][i][j]) chkmax(g[cur][o][j],g[pre][i][j]+val);\n                }\n                else{\n                    for(int j=0;j&lt;=m;++j) if(~g[pre][i][j]) chkmax(g[cur][i][j],g[pre][i][j]);\n                    if(t&gt;0){\n                        for(int j=0;j&lt;m;++j) if(~g[pre][i][j]) chkmax(g[cur][o][j+1],g[pre][i][j]+val); \n                    }\n                    else{\n                        for(int j=1;j&lt;=m;++j) if(~g[pre][i][j]) chkmax(g[cur][o][j-1],g[pre][i][j]+val);\n                    }\n                }\n            }\n            cur^=1;pre^=1;\n        }\n        for(int i=0;i&lt;=m;++i) cout&lt;&lt;g[pre][1][i]&lt;&lt;hvie;\n    }\n    return 0;\n}\n/*\n2\n3 3\n1 2 4 6\n1 3 2 7\n2 3 3 5\n3 3\n1 2 4 6\n1 3 2 7\n2 3 3 5\n*/\n</code></pre> <p>1006. Dusk Moon</p> <p>\u7ed9\u4f60\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684n\u4e2a\u70b9\uff0c\u6bcf\u6b21\u53ef\u4ee5\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u5750\u6807\uff0c\u6216\u8005\u8be2\u95ee\u7f16\u53f7\u5728\\([l,r]\\)\u5185\u7684\u70b9\u7684\u6700\u5c0f\u8986\u76d6\u5706\u7684\u534a\u5f84\u3002</p> <p>\u4fdd\u8bc1\u70b9\u662f\u968f\u673a\u751f\u6210\u7684\u3002</p> <p>\\(n,q\\leq 1e5\\)</p> <p>\u9996\u5148\uff0c\u6ce8\u610f\u5230\u51f8\u5305\u7684\u6700\u5c0f\u8986\u76d6\u5706\u548c\u539f\u70b9\u96c6\u7684\u6700\u5c0f\u8986\u76d6\u5706\u662f\u4e00\u6837\u7684\u3002\u800c\u4e14\u5728\u968f\u673a\u751f\u6210\u70b9\u7684\u6761\u4ef6\u4e0b\uff0c\u51f8\u5305\u7684\u671f\u671b\u5927\u5c0f\u662f\\(O(\\log n)\\)\u7684\u3002\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u51f8\u5305\uff0c\u7136\u540eco\u4e00\u4e2a\u6700\u5c0f\u8986\u76d6\u5706\u7684\u4ee3\u7801\u3002</p> <p>\u6ce8\u610f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u51f8\u5305\uff0c\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u4e0a\u51f8\u5305\u4e00\u4e2a\u4e0b\u51f8\u5305\uff0c\u90fd\u6309\u7167\\(x\\)\u5347\u5e8f\u7684\u65b9\u5f0f\u6392\u5217\u3002\u5408\u5e76\u4e0a\u4e0b\u51f8\u5305\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6309\u7167\u5f52\u5e76\u6392\u5e8f\u7684\u65b9\u5f0f\u5148\u641e\u51fa\u4e00\u4e2a\\(x\\)\u5347\u5e8f\u7684\u70b9\u96c6\uff0c\u7136\u540e\u518d\u6309\u7167\u51f8\u5305\u7684\u539f\u5219\u6765\u5220\u70b9\u3002\u8fd9\u6837\u5408\u5e76\u590d\u6742\u5ea6\u662f\\(O(\u51f8\u5305\u5927\u5c0f)\\)\u7684\u3002\uff08\u6211\u4e4b\u524d\u76f4\u63a5\u7ef4\u62a4\u6574\u4e2a\u51f8\u5305\uff0c\u7136\u540e\u66b4\u529b\u5bf9\u4e24\u8fb9\u70b9\u96c6\u76f4\u63a5\u6c42\u51f8\u5305\uff0c\u591a\u4e2alog\uff0c\u7136\u540e\u5c31T\u4e86\uff09\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double db;\nint yh(){\n    int x;\n    scanf(\"%d\",&amp;x);\n    return x;\n}\nconst int maxn=1e5+5;\nconst db eps=1e-9;\nint sgn(db x){\n    if(x&gt;eps) return 1;\n    if(x&lt;-eps) return -1;\n    return 0;\n}\nstruct vec{\n    db x,y;\n    vec(){}\n    vec(db x,db y):x(x),y(y){}\n};\nostream&amp;operator&lt;&lt;(ostream&amp;out,const vec&amp;A){out&lt;&lt;'('&lt;&lt;A.x&lt;&lt;','&lt;&lt;A.y&lt;&lt;')';return out;}\nvec operator+(const vec&amp;A,const vec&amp;B){return vec(A.x+B.x,A.y+B.y);}\nvec operator-(const vec&amp;A,const vec&amp;B){return vec(A.x-B.x,A.y-B.y);}\nvec operator*(const db&amp;B,const vec&amp;A){return vec(A.x*B,A.y*B);}\nvec operator*(const vec&amp;A,const db&amp;B){return vec(A.x*B,A.y*B);}\nvec operator/(const vec&amp;A,const db&amp;B){return vec(A.x/B,A.y/B);}\ndb cross(const vec&amp;a,const vec&amp;b){\n    return a.x*b.y-a.y*b.x;\n}\ndb dot(const vec&amp;a,const vec&amp;b){\n    return a.x*b.x+a.y*b.y;\n}\ndb len(const vec &amp;v){return sqrt(dot(v,v));}\ndb dis(const vec&amp;a,const vec &amp;b){\n    return sqrt(dot(a-b,a-b));\n}\nvec normalize(const vec&amp;v){\n    return v/(len(v));\n}\nvec trunc(const vec&amp;v){\n    return vec(-v.y,v.x);\n}\ntypedef vec point;\ntypedef vector&lt;point&gt; Polygon;\n\npoint p[maxn];\nbool cmp0(int i,int j){\n    if(p[i].x!=p[j].x) return p[i].x&lt;p[j].x;\n    return p[i].y&gt;p[j].y;\n}\nbool cmp1(int i,int j){\n    if(p[i].x!=p[j].x) return p[i].x&lt;p[j].x;\n    return p[i].y&lt;p[j].y;\n}\n\nint st[maxn],h[maxn];\nvoid merge0(int *c,int *a,int *b){\n    int cnt=0,i=0,j=0,t=0;\n    while(a[i]&amp;&amp;b[j]) st[cnt++]=cmp0(a[i],b[j])?a[i++]:b[j++];\n    while(a[i]) st[cnt++]=a[i++];\n    while(b[j]) st[cnt++]=b[j++];\n    for(i=0;i&lt;cnt;i++){\n        j=st[i];\n        if(i&amp;&amp;p[st[i-1]].x==p[j].x) continue;//\u53ea\u8981y\u6700\u5927\u7684\u70b9\n        while(t&gt;1&amp;&amp;cross(p[h[t]]-p[h[t-1]],p[j]-p[h[t-1]])&gt;=0) --t;\n        h[++t]=j;\n    }\n    for(int i=0;i&lt;t;i++)c[i]=h[i+1];\n    c[t]=0;\n}\nvoid merge1(int *c,int *a,int *b){\n    int cnt=0,i=0,j=0,t=0;\n    while(a[i]&amp;&amp;b[j]) st[cnt++]=cmp1(a[i],b[j])?a[i++]:b[j++];\n    while(a[i]) st[cnt++]=a[i++];\n    while(b[j]) st[cnt++]=b[j++];\n    for(i=0;i&lt;cnt;i++){\n        j=st[i];\n        if(i&amp;&amp;p[st[i-1]].x==p[j].x) continue;//\u53ea\u8981y\u6700\u5c0f\u7684\u70b9\n        while(t&gt;1&amp;&amp;cross(p[h[t]]-p[h[t-1]],p[j]-p[h[t-1]])&lt;=0) --t;\n        h[++t]=j;\n    }\n    for(int i=0;i&lt;t;i++)c[i]=h[i+1];\n    c[t]=0;\n}\n\nint F[maxn&lt;&lt;2][50],G[maxn&lt;&lt;2][50];\n#define mid ((l+r)&gt;&gt;1)\n#define ls (v&lt;&lt;1)\n#define rs (v&lt;&lt;1|1)\n\nvoid push_up(int v){\n    merge0(F[v],F[ls],F[rs]);\n    merge1(G[v],G[ls],G[rs]);\n}\n\nvoid build(int v,int l,int r){\n    if(l==r){\n        F[v][0]=G[v][0]=l;\n        F[v][1]=G[v][1]=0;\n        return;\n    }\n    build(ls,l,mid);build(rs,mid+1,r);\n    push_up(v);\n}\nvoid mdf(int v,int l,int r,int p){\n    if(l==r)return;\n    if(p&lt;=mid) mdf(ls,l,mid,p);\n    else mdf(rs,mid+1,r,p);\n    push_up(v);\n}\nint ansF[50],ansG[50];\nvoid ask(int v,int l,int r,int al,int ar){\n    if(al&lt;=l&amp;&amp;ar&gt;=r){\n        merge0(ansF,F[v],ansF);\n        merge1(ansG,G[v],ansG);\n        return;\n    }\n    if(al&lt;=mid) ask(ls,l,mid,al,ar);\n    if(ar&gt;mid) ask(rs,mid+1,r,al,ar);\n}\npoint intersection(point p1, vec v1, point p2, vec v2){\n    vec u=p2-p1;\n    db dt=cross(v1,v2);\n    db t=cross(u,v2)/dt;\n    return p1+v1*t;\n}\n\ninline point center(const point&amp;x,const point&amp;y,const point&amp;z){\n  db a1=y.x-x.x,b1=y.y-x.y,\n     c1=(a1*a1+b1*b1)/2,a2=z.x-x.x,\n     b2=z.y-x.y,c2=(a2*a2+b2*b2)/2,\n     d=a1*b2-a2*b1;\n  return point(x.x+(c1*b2-c2*b1)/d,x.y+(a1*c2-a2*c1)/d);\n}\ndb minCircle(int *F,int *G){\n    Polygon C;\n    int i,j,k;\n    for(i=0;F[i];i++) C.pb(p[F[i]]);\n    for(i=0;G[i];i++) C.pb(p[G[i]]);\n    // for(auto i:C){cerr&lt;&lt;fixed&lt;&lt;setprecision(10)&lt;&lt;i&lt;&lt;hvie; }\n    // cerr&lt;&lt;hvie;\n    random_shuffle(C.begin(),C.end());\n    point O=C[0];\n    db R=0;\n    for(i=0;i&lt;(int)C.size();i++)if(sgn(dis(O,C[i])-R)&gt;0){\n        for(j=0,O=C[i],R=0;j&lt;i;j++)if(sgn(dis(O,C[j])-R)&gt;0){\n            for(k=0,O=(C[i]+C[j])*0.5,R=dis(O,C[i]);k&lt;j;k++)if(sgn(dis(O,C[k])-R)&gt;0){\n                O=center(C[i],C[j],C[k]);\n                R=dis(O,C[i]);\n            }\n        }\n    }\n    return R;\n}\nint ra(int l,int r){\n    return rand()%(r-l+1)+l;\n}\nsigned main(){\n    srand(time(0));\n    // cout&lt;&lt;p.fi&lt;&lt;' '&lt;&lt;p.se&lt;&lt;endl;\n    dwn(_,yh(),1){\n        int n=yh(),q=yh();\n        rep(i,1,n) p[i].x=yh(),p[i].y=yh();\n        build(1,1,n);\n        rep(i,1,q){\n            int op=yh();\n            if(op==1){\n                int k=yh();\n                p[k].x=yh(),p[k].y=yh();\n                mdf(1,1,n,k);\n            }\n            else{\n                int l=yh(),r=yh();\n                ansF[0]=ansG[0]=0;\n                ask(1,1,n,l,r);\n                cout&lt;&lt;(ll)ceil(minCircle(ansF,ansG))&lt;&lt;hvie;\n            }\n        }\n    }\n    return 0;\n}\n</code></pre> <p>1008.Range Reachability Query</p> <p>\u7ed9\u4f60\\(n\\)\u4e2a\u70b9\u7684dag\u56fe\uff0c\u73b0\u6709\\(q\\)\u4e2a\u8be2\u95ee\uff1a\u53ea\u4f7f\u7528\u7f16\u53f7\u4e3a\\([l,r]\\)\u7684\u8fb9\uff0cu\u80fd\u5426\u5230\u8fbev\u3002</p> <p>\\(n,q\\le 5e4\\)</p> <p>\u8003\u8651\u7528bitset\u7ef4\u62a4\u6bcf\u4e2a\u51fa\u53d1\u70b9\u80fd\u6ee1\u8db3\u7684\u8be2\u95ee\uff0c\\(F(x)|=F(y)&amp;BS(now)\\)\u3002\u73b0\u6309\u7167\u8fb9\u7684\u7f16\u53f7\u987a\u5e8f\u6765\u786e\u5b9a\u64cd\u4f5c\u987a\u5e8f\uff0c\u4e00\u4e2a\u8be2\u95ee\u5728\\([l,r]\\)\u4e2d\u624d\u6709\u6548\uff0c\u5373\u5728\\(l\\)\u65f6\u8fdb\u5165\u96c6\u5408\uff0c\\(r+1\\)\u65f6\u79bb\u5f00\u96c6\u5408\uff0c\u7b54\u6848\u5c31\u662f\u6c42\u96c6\u5408\u5185\u7684\u8be2\u95ee\u3002\u8fd9\u6837\u5c31\u6709\\(2q\\)\u4e2a\u4e8b\u4ef6\uff0c\u8868\u793a\u8be2\u95ee\\(i\\)\u5728\\(x\\)\u7f16\u53f7\u5904\u79bb\u5f00\u6216\u52a0\u5165\u96c6\u5408\u3002\u5c06\u4e8b\u4ef6\u6309\u7f16\u53f7\u6392\u5e8f\uff0c\u6bcf\u4e2a\u7f16\u53f7\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5230\u4ed6\u4e3a\u6b62\u7684\u4e8b\u4ef6\uff0c\u6bcf\\(\\sqrt {cnt}\\)\u4e2a\u5c31\u5b58\u4e0b\u6765\u4e00\u4e0b\u96c6\u5408\u72b6\u6001\u3002\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u6bcf\u4e2a\u90bb\u8fb9\uff0c\u5148\u5f97\u5230\u5230\u4ed6\u4e3a\u6b62\u7684\u4e8b\u4ef6\u7f16\u53f7\uff0c\u7136\u540e\u627e\u5230\u79bb\u4ed6\u6700\u8fd1\u7684\u72b6\u6001\uff0c\u540e\u9762\u7684\u66b4\u529b\u8dd1\u3002\\(F(x)|=F(y)&amp;BS(now)\\)\u4e00\u4e0b\u5c31\u53ef\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=1e5+5,N=5e4+5,B=350;\nint n,m,q;\nstruct edge{\n    int to,nxt;\n}e[maxn];\nint h[N];\nbitset&lt;N&gt;H[300];\nbitset&lt;N&gt;F[N];\npii event[maxn*2];\npii qry[maxn];\nint ed[maxn];\nbitset&lt;N&gt;bs;\nsigned main(){\n    // cout&lt;&lt;sizeof(F)/1024.0/1024&lt;&lt;hvie;\n    // freopen(\"1010.in\",\"r\",stdin);\n    // freopen(\"my.out\",\"w\",stdout);\n    dwn(_,yh(),1){\n        n=yh(),m=yh(),q=yh();\n        rep(i,1,n) F[i].reset(),h[i]=0;\n        rep(i,0,299) H[i].reset();\n        rep(i,1,m){\n            int x=yh(),y=yh();\n            e[i]={y,h[x]};\n            h[x]=i;\n        }\n        int cnt=0;\n        rep(i,0,q-1){\n            qry[i].fi=yh();\n            qry[i].se=yh();\n            F[qry[i].se][i]=1;\n            int l=yh(),r=yh();\n            event[++cnt]={l,i};\n            event[++cnt]={r+1,i};\n        }\n        sort(event+1,event+1+cnt);\n        int j=0;\n        rep(i,1,m){\n            while(j&lt;cnt&amp;&amp;event[j+1].fi&lt;=i) j++;\n            ed[i]=j;\n        }\n        bs.reset();\n        rep(i,1,cnt){\n            bs[event[i].se].flip();\n            if(i%B==0) H[i/B]=bs;\n        }\n        dwn(x,n,1)for(int j=h[x];j;j=e[j].nxt){\n            int y=e[j].to;\n            int o=ed[j];\n            bs=H[o/B];\n            for(int i=o/B*B+1;i&lt;=o;i++) bs[event[i].se].flip();\n            F[x]|=F[y]&amp;bs;\n        }\n        rep(i,0,q-1){\n            cout&lt;&lt;(F[qry[i].fi][i]?\"YES\":\"NO\")&lt;&lt;hvie;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"contests/hdu2022-5/","title":"2022\u676d\u7535\u591a\u6821(5)","text":"<p>1002.Jo loves counting</p> <p>\u8bbe\\(Good(n)\\)\u8bb0\u5f55\u6240\u6709n\u7684\u53ef\u4ee5\u88abn\u7684\u6240\u6709\u8d28\u56e0\u5b50\u6574\u9664\u7ea6\u6570\u3002\u6c42\\(1..n\\)\u7684\\(n/|Good(n)|\\)\u7684\u5e73\u5747\u503c</p> <p>\u4e0d\u96be\u53d1\u73b0\\(|Good(n)|\\)\u662fn\u6240\u6709\u8d28\u56e0\u5b50\u7684\u6307\u6570\u4e4b\u79ef\uff0c\u6240\u4ee5\\(f(p)=n/|Good(n)|\\)\u5c31\u662f\\(n\\)\u9664\u4ee5\u6240\u6709\u8d28\u56e0\u5b50\u6307\u6570\u4e4b\u79ef\u3002 \u8fd9\u6837\u4e00\u6765\u5bf9\u8d28\u6570\u800c\u8a00\\(f(p)=p\\), \u8bbe\\(g(n)=n\\)\u3002\u73b0\u5728\u6784\u9020\u4e00\u4e2a\u51fd\u6570\\(h(n)\\)\u4f7f\u5f97\\(f(n)=\\sum_{d\\mid n} h(d)g(n/d)\\) \u90a3\u4e48 $$ \\begin{aligned} \\sum_{i=1}^M f(i)&amp;=\\sum_{i=1}^M\\sum_{d\\mid n}h(d)g(n/d)\\ &amp;=\\sum_{d=1}^M h(d)\\sum_{i=1}^{\\lfloor M/d\\rfloor}g(i)\\&amp;=\\sum_{d=1}^Mh(d)Sg(\\lfloor M/d\\rfloor) \\end{aligned} $$ \u800c\\(1=f(1)=g(1)h(1)=1\\), \\(p=f(p)=g(p)h(1)+g(1)h(p)\\), \u6240\u4ee5\\(h(p)=0\\)\uff0c\u5373\u53ea\u6709powerful number\u7684h\u503c\u624d\u4e0d\u4e3a0\u3002\u800cpowerful number\u7684\u6570\u91cf\u662f\\(O(\\sqrt M)\\)\u7684\u3002 \u5bf9\u4e8e\\(h(p^k), k&gt;1\\)\uff1a $$ \\begin{aligned} f(p^k)&amp;=\\frac{p^k}{k}\\&amp;=\\sum_{i=0}^k h(p^i)g(p^{k-i})\\&amp;=\\sum_{i=0}^k h(p^i)p^{k-i}\\&amp;=p\\sum_{i=0}^{k}h(p^i)p^{k-1-i}+h(p^k)\\&amp;=pf(p^{k-1})+h(p^k)\\ \\end{aligned} \\(\\(\\ \u56e0\u6b64\\)h(p^k)=p^{k}(\\frac{1}k-\\frac1{k-1})\\) \u7136\u540e\u53ea\u9700\u8981\u679a\u4e3e\u4e0d\u8d85\u8fc7\\(\\sqrt{M}\\)\u7684\u8d28\u6570\uff0c\u66b4\u529b\u679a\u4e3e\u5f53\u524d\u8d28\u6570\u7684\u6b21\u6570\uff0c\u8ba1\u7b97\\(h(p^k)\\)\u7684\u503c\uff0c\u7ef4\u62a4\u5f53\u524d\u7684powerful number\\(n\\)\uff0c\u5e76\u7edf\u8ba1\u5230\u7b54\u6848\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\n\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int mod=4179340454199820289,maxn=2e6+5,maxtot=2e5+5;\nint add(int x,int y){x+=y; return x&gt;=mod?x-mod:x;}\nint sub(int x,int y){x=x+mod-y; return x&gt;=mod?x-mod:x;}\nint mul(__int128 x,int y){return x*y%mod;}\n\nint p[maxn],ntp[maxn],tot=0;\nvoid euler(int n){\n    for(int i=2;i&lt;=n;i++){\n        if(!ntp[i]) p[++tot]=i;\n        for(int j=1;j&lt;=tot&amp;&amp;p[j]*i&lt;=n;j++){\n            ntp[i*p[j]]=1;\n            if(i%p[j]==0) break;\n        }\n    }\n}\nint ksm(int x,int p){\n    int ans=1;for(;p;p&gt;&gt;=1,x=mul(x,x))if(p&amp;1){\n        ans=mul(ans,x);\n    }\n    return ans;\n}\nint ans=0;\nint global_n;\nbool vis[maxtot][40];\nint h[maxtot][40];\nint inv[maxtot];\n\nvoid dfs(int d,int hd,int pid){\n    int g=global_n/d;\n    int f=(g%2==0)?mul(g/2,(g+1)):mul((g+1)/2,g);\n    ans=add(ans, mul(hd,f));\n    for(int id=pid;id&lt;=tot;id++){\n        if (id &gt; 1 &amp;&amp; d &gt; global_n / p[id] / p[id]) break;  // \u526a\u679d\n        for(int k=2,x=d*p[id]*p[id],pc=p[id]*p[id];x&lt;=global_n;x*=p[id],pc*=p[id],k++){\n            if(!vis[id][k]){\n                h[id][k]=mul(pc, sub(mod, mul(inv[k],inv[k-1])));\n                vis[id][k]=1;\n            }\n            if(h[id][k])\n                dfs(x,mul(hd,h[id][k]),id+1);\n        }\n    }\n}\nint solve(int n){\n    global_n=n;\n    ans=0;\n    dfs(1,1,1);\n    // return ans;\n    return mul(ans,ksm(n,mod-2));\n}\n\nsigned main(){\n    //freopen(\"1002.in\",\"r\",stdin);\n    euler(2e6);\n    inv[1]=1;\n    rep(i,1,tot) vis[i][0]=vis[i][1]=1,h[i][0]=1,h[i][1]=0;\n    rep(i,2,maxtot-1){\n        inv[i]=sub(mod,  mul(mod/i, inv[mod%i]));\n    }\n    dwn(_,yh(),1){\n        cout&lt;&lt;solve(yh())&lt;&lt;hvie;\n    }\n    return 0;\n}\n</code></pre> <p>1005.3D Puzzles</p> <p>\u7ed9\u5b9a \\(13\\) \u4e2a\u4e09\u7ef4\u7269\u4f53\uff08\u5982\u4e0b\u56fe\u6240\u793a\uff09\uff0c\u5c06\u5b83\u4eec\u653e\u5230\u4e00\u4e2a \\(4\\times 4\\times 4\\) \u7684\u7acb\u65b9\u4f53\u4e2d\uff0c\u7269\u4f53\u4e4b\u95f4\u4e0d\u80fd\u91cd\u53e0\uff0c\u8981\u5b8c\u6574\u8986\u76d6\u6574\u4e2a\u7acb\u65b9\u4f53\u3002\u6bcf\u4e2a\u7269\u4f53\u53ef\u4ee5\u7ecf\u8fc7\u82e5\u5e72\u6b21\u65cb\u8f6c\u3001\u955c\u50cf\uff0c\u4e14\u53ea\u80fd\u653e\u7f6e\u4e00\u4e2a\u3002\u73b0\u5728\u7ed9\u5b9a\u7acb\u65b9\u4f53\u7684\u521d\u59cb\u72b6\u6001\uff08\u67d0\u4e9b\u4f4d\u7f6e\u5df2\u7ecf\u653e\u5165\u6307\u5b9a\u7f16\u53f7\u7684\u7269\u4f53\uff09\uff0c\u6309\u5b57\u5178\u5e8f\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684\u653e\u7f6e\u65b9\u6848\u3002</p> <p></p> <p>\u8fd9\u4e2a\u9898\u662f\u4e2a\u5927\u641c\u7d22\u9898\uff0c\u4e0d\u8fc7\u9274\u4e8e\u5b83\u662f\u51c6\u786e\u8986\u76d6 \\(4\\times 4\\times 4\\) \u7684\u6bcf\u4e2a\u683c\u5b50\uff0c\u6240\u4ee5\u8003\u8651Dancing Links\u3002Dancing Links\u7684\u677f\u5b50\u90fd\u5927\u540c\u5c0f\u5f02\uff0c\u9ebb\u70e6\u7684\u5730\u65b9\u5728\u4e8e\u5b83\u7684\u5efa\u6a21\u3002\u9996\u5148\u6211\u4eec\u8981\u53bb\u91cd\u7684\u5f97\u5230\u6bcf\u4e2a\u7269\u4f53\u7684\u6240\u6709\u53ef\u80fd\u5f62\u6001\uff08\u901a\u8fc7\u82e5\u5e72\u6b21\u65cb\u8f6c\u3001\u955c\u50cf\uff09\uff0c\u7136\u540e\u679a\u4e3e\u653e\u7f6e\u4f4d\u7f6e\u5de6\u4e0a\u89d2\u7684\u5750\u6807\uff0c\u5224\u65ad\u80fd\u5426\u653e\u5165\u3002</p> <p>\u6211\u7528\u4e00\u4e2a\u4e09\u7ef4\u77e9\u9635\u6765\u8868\u793a\u6bcf\u4e2a\u7269\u4f53\u7684\u72b6\u6001\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u662f \\(0\\) \u6216 \\(1\\)\uff0c\u8868\u793a\u8be5\u5750\u6807\u7684\u683c\u5b50\u662f\u5426\u4e3a\u7a7a\uff0c\u7136\u540e\u901a\u8fc7BFS+set\u7684\u65b9\u5f0f\u679a\u4e3e\u6240\u6709\u53d8\u6362\u7684\u53ef\u80fd\u6027\u3002</p> <p>Dancing Links\u662f\u4e00\u4e2a \\(01\\) \u77e9\u9635\uff0c\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u9009\u62e9\uff0c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u72b6\u6001\u3002\u6700\u540e\u7684\u76ee\u6807\u662f\u9009\u62e9\u82e5\u5e72\u884c\uff0c\u4f7f\u5f97\u6bcf\u4e00\u5217\u90fd\u6070\u597d\u6709 \\(1\\) \u4e2a \\(1\\) \u88ab\u9009\u62e9\u3002</p> <p>\u56e0\u6b64\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a \\(m\\times 4\\times 4\\times 4\\) \u884c\uff0c\\(4\\times 4\\times 4+13\\) \u5217\u7684DLX\uff08\u5176\u4e2d \\(m\\) \u662f \\(13\\) \u4e2a\u7269\u4f53\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001\uff0c\\(4\\times 4\\times 4\\) \u662f\u6240\u6709\u53ef\u80fd\u7684\u5de6\u4e0a\u89d2\u5750\u6807\uff0c\u56e0\u6b64 \\(m\\times 4\\times 4\\times 4\\) \u6db5\u76d6\u4e86\u6bcf\u4e00\u79cd\u653e\u7f6e\u9009\u62e9\uff1b\u800c \\(4\\times 4\\times 4\\) \u8868\u793a\u7acb\u65b9\u4f53\u9700\u8981\u88ab\u8986\u76d6\u7684\u683c\u5b50\u6570\uff0c\\(13\\) \u4e3a\u7269\u4f53\u7efc\u8ff0\uff08\u6bcf\u4e2a\u7269\u4f53\u53ea\u80fd\u653e\u7f6e\u4e00\u6b21\uff09\uff0c\u56e0\u6b64 \\(4\\times 4\\times 4+13\\) \u6db5\u76d6\u4e86\u6240\u6709\u72b6\u6001)\uff0c\u7136\u540edance\u5c31\u5b8c\u4e86\u3002\u4e3a\u4e86\u8f93\u51fa\u5177\u4f53\u65b9\u6848\uff0c\u9700\u8981\u8bb0\u5f55DLX\u6bcf\u884c\u6240\u5bf9\u5e94\u7684\u7acb\u65b9\u4f53\u7684\u72b6\u6001\u3001\u5de6\u4e0a\u89d2\u5750\u6807\u4ee5\u53ca\u7269\u4f53\u7f16\u53f7\uff0c\u6700\u540esort\u4e00\u4e0b\u8f93\u51fa\u5c31\u884c\u3002</p> <p>\u8fd9\u79cd\u9898\u601d\u8def\u4e0a\u90fd\u5927\u540c\u5c0f\u5f02\uff0c\u4e5f\u4e0d\u5361\u65f6\u95f4\u7a7a\u95f4\uff0c\u5c31\u662f\u5efa\u6a21\u8d77\u6765\u5f88\u6076\u5fc3\uff08\u52a0\u4e0a\u6211\u6781\u5dee\u7684\u4e09\u7ef4\u60f3\u8c61\u80fd\u529b\uff0c\u65cb\u8f6c\u8d77\u6765\u771f\u7684\u8981\u6740\u4eba\u4e86\uff09\u3002\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nvector&lt;vector&lt;int&gt;&gt; ans;\nvector&lt;int&gt; tmp;\n\nstruct DLX {\n    static const int MAXSIZE = 1e5 + 10;\n    int n, m, tot, first[MAXSIZE + 10], siz[MAXSIZE + 10];\n    int L[MAXSIZE + 10], R[MAXSIZE + 10], U[MAXSIZE + 10], D[MAXSIZE + 10];\n    int col[MAXSIZE + 10], row[MAXSIZE + 10];\n    int stk[MAXSIZE + 10];\n\n    void build(const int &amp;r, const int &amp;c) {  // \u8fdb\u884cbuild\u64cd\u4f5c\n        n = r, m = c;\n\n        for (int i = 0; i &lt;= c; ++i) {\n            L[i] = i - 1, R[i] = i + 1;\n            U[i] = D[i] = i;\n        }\n\n        L[0] = c, R[c] = 0, tot = c;\n        memset(first, 0, sizeof(first));\n        memset(siz, 0, sizeof(siz));\n    }\n\n    void insert(const int &amp;r, const int &amp;c) {  // \u8fdb\u884cinsert\u64cd\u4f5c\n        assert(0 &lt; r &amp;&amp; r &lt;= n);\n        assert(0 &lt; c &amp;&amp; c &lt;= m);\n        col[++tot] = c, row[tot] = r, ++siz[c];\n        D[tot] = D[c], U[D[c]] = tot, U[tot] = c, D[c] = tot;\n\n        if (!first[r])\n            first[r] = L[tot] = R[tot] = tot;\n        else {\n            R[tot] = R[first[r]], L[R[first[r]]] = tot;\n            L[tot] = first[r], R[first[r]] = tot;\n        }\n    }\n\n    void remove(const int &amp;c) {  // \u8fdb\u884cremove\u64cd\u4f5c\n        L[R[c]] = L[c], R[L[c]] = R[c];\n\n        for (int i = D[c]; i != c; i = D[i])\n            for (int j = R[i]; j != i; j = R[j])\n                U[D[j]] = U[j], D[U[j]] = D[j], --siz[col[j]];\n    }\n\n    void recover(const int &amp;c) {  // \u8fdb\u884crecover\u64cd\u4f5c\n        for (int i = U[c]; i != c; i = U[i])\n            for (int j = L[i]; j != i; j = L[j])\n                U[D[j]] = D[U[j]] = j, ++siz[col[j]];\n\n        L[R[c]] = R[L[c]] = c;\n    }\n\n    bool dance(int dep) {  // dance\n        if (!R[0]) {\n            tmp.clear();\n\n            for (int i = 0; i &lt; dep; ++i) {\n                tmp.push_back(stk[i]);\n            }\n\n            ans.push_back(tmp);\n            return 0;\n        }\n\n        int c = R[0];\n\n        for (int i = R[0]; i != 0; i = R[i])\n            if (siz[i] &lt; siz[c])\n                c = i;\n\n        remove(c);\n\n        for (int i = D[c]; i != c; i = D[i]) {\n            stk[dep] = row[i];\n\n            for (int j = R[i]; j != i; j = R[j])\n                remove(col[j]);\n\n            if (dance(dep + 1))\n                return 1;\n\n            for (int j = L[i]; j != i; j = L[j])\n                recover(col[j]);\n        }\n\n        recover(c);\n        return 0;\n    }\n} dl;\n\ntypedef vector&lt;vector&lt;vector&lt;int&gt;&gt;&gt; cube;\n\ncube rotate(cube c, char dimension) { // [z, y, x]\n    int z = c.size(), y = c[0].size(), x = c[0][0].size();\n    cube res;\n\n    if (dimension == 'Z') { // [z, x, y]\n        res = cube(z, vector&lt;vector&lt;int&gt;&gt;(x, vector&lt;int&gt;(y, 0)));\n\n        for (int i = 0; i &lt; z; ++i)\n            for (int j = 0; j &lt; x; ++j)\n                for (int k = 0; k &lt; y; ++k)\n                    res[i][j][k] = c[i][k][x - 1 - j];\n    }\n\n    if (dimension == 'Y') { // [x, y, z]\n        res = cube(x, vector&lt;vector&lt;int&gt;&gt;(y, vector&lt;int&gt;(z, 0)));\n\n        for (int i = 0; i &lt; x; ++i) {\n            for (int j = 0; j &lt; y; ++j) {\n                for (int k = 0; k &lt; z; ++k) {\n                    res[i][j][k] = c[z - 1 - k][j][i];\n                }\n            }\n        }\n    }\n\n    if (dimension == 'X') { // [y, z, x]\n        res = cube(y, vector&lt;vector&lt;int&gt;&gt;(z, vector&lt;int&gt;(x, 0)));\n\n        for (int i = 0; i &lt; y; ++i) {\n            for (int j = 0; j &lt; z; ++j) {\n                for (int k = 0; k &lt; x; ++k) {\n                    res[i][j][k] = c[j][y - 1 - i][k];\n                }\n            }\n        }\n    }\n\n    return res;\n}\n\ncube mirror(cube c, char dimension) {\n    int z = c.size(), y = c[0].size(), x = c[0][0].size();\n    cube res(z, vector&lt;vector&lt;int&gt;&gt;(y, vector&lt;int&gt;(x, 0)));\n\n    if (dimension == 'X') {\n        for (int i = 0; i &lt; z; ++i) {\n            for (int j = 0; j &lt; y; ++j) {\n                for (int k = 0; k &lt; x; ++k) {\n                    res[i][j][k] = c[i][j][x - 1 - k];\n                }\n            }\n        }\n    }\n\n    if (dimension == 'Y') {\n        for (int i = 0; i &lt; z; ++i) {\n            for (int j = 0; j &lt; y; ++j) {\n                for (int k = 0; k &lt; x; ++k) {\n                    res[i][j][k] = c[i][y - 1 - j][k];\n                }\n            }\n        }\n    }\n\n    if (dimension == 'Z') {\n        for (int i = 0; i &lt; z; ++i) {\n            for (int j = 0; j &lt; y; ++j) {\n                for (int k = 0; k &lt; x; ++k) {\n                    res[i][j][k] = c[z - 1 - i][j][k];\n                }\n            }\n        }\n    }\n\n    return res;\n}\n\nvoid print(cube c) {\n    cout &lt;&lt; \"--------printing cube--------\" &lt;&lt; endl;\n\n    for (int i = 0; i &lt; c.size(); ++i) {\n        for (int j = 0; j &lt; c[i].size(); ++j) {\n            for (int k = 0; k &lt; c[i][j].size(); ++k)\n                cout &lt;&lt; c[i][j][k] &lt;&lt; \" \";\n\n            cout &lt;&lt; endl;\n        }\n\n        cout &lt;&lt; endl;\n    }\n}\n\nconst cube blocks[] = {\n    {{{1, 0}, {0, 0}}, {{1, 0}, {0, 0}}, {{1, 0}, {0, 0}}, {{1, 1}, {1, 1}}},\n    {{{1, 0}, {0, 0}}, {{1, 0}, {0, 0}}, {{1, 1}, {1, 0}}},\n    {{{1, 0, 0}, {0, 0, 0}}, {{1, 1, 1}, {0, 0, 1}}},\n    {{{1, 1, 0}, {0, 0, 0}}, {{1, 1, 1}, {1, 1, 0}}},\n    {{{0, 1, 0}, {0, 0, 0}}, {{0, 1, 0}, {0, 0, 0}}, {{1, 1, 1}, {1, 0, 0}}},\n    {{{0, 1}, {0, 0}}, {{1, 1}, {1, 0}}},\n    {{{1, 0}}, {{1, 1}}},\n    {{{1}}, {{1}}},\n    {{{1, 1}, {1, 1}}, {{1, 1}, {1, 1}}},\n    {{{1, 1}, {1, 0}}, {{1, 1}, {1, 1}}},\n    {{{1, 1}}, {{1, 1}}, {{1, 1}}},\n    {{{1}}, {{1}}, {{1}}},\n    {{{1}}}\n};\n\nvector&lt;vector&lt;string&gt;&gt; graph;\n\nbool check(const cube &amp;c, int px, int py, int pz, int block_id) {\n    int z = c.size(), y = c[0].size(), x = c[0][0].size();\n\n    if (px + x &gt; 4 || py + y &gt; 4 || pz + z &gt; 4)\n        return false;\n\n    for (int i = 0; i &lt; z; ++i) {\n        for (int j = 0; j &lt; y; ++j) {\n            for (int k = 0; k &lt; x; ++k) {\n\n                if (c[i][j][k] &amp;&amp; graph[pz + i][py + j][px + k] != '.')\n                    return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nstruct Info {\n    int block_id;\n    int px, py, pz;\n    cube c;\n};\n\nvector&lt;Info&gt; belong;\nint id[4][4][4], cnt;\nint row;\n\nvoid insert(int block_id, int px, int py, int pz, cube c) {\n    ++row;\n    belong.push_back((Info) {\n        block_id, px, py, pz, c\n    });\n    int z = c.size(), y = c[0].size(), x = c[0][0].size();\n\n    for (int i = 0; i &lt; z; ++i) {\n        for (int j = 0; j &lt; y; ++j) {\n            for (int k = 0; k &lt; x; ++k) {\n                if (c[i][j][k] == 1) {\n                    dl.insert(row, id[pz + i][py + j][px + k]);\n                }\n            }\n        }\n    }\n\n    dl.insert(row, 4 * 4 * 4 + block_id + 1);\n}\n\nset&lt;cube&gt; s2;\nset&lt;cube&gt; s[13];\n\nvoid bfs(int id) {\n    queue&lt;cube&gt; q;\n    q.push(blocks[id]);\n    auto push = [&amp;](const cube &amp; c) {\n        if (s2.count(c))\n            return ;\n\n        q.push(c);\n        s[id].insert(c);\n        s2.insert(c);\n    };\n\n    while (!q.empty()) {\n        auto a = q.front();\n        q.pop();\n        push(rotate(a, 'X'));\n        push(rotate(a, 'Y'));\n        push(rotate(a, 'Z'));\n        push(mirror(a, 'X'));\n        push(mirror(a, 'Y'));\n        push(mirror(a, 'Z'));\n    }\n}\n\nvoid solve() {\n    ans.clear();\n    belong.clear();\n    cnt = 0;\n    row = 0;\n\n    dl.build(s2.size() * 4 * 4 * 4 + 1, 4 * 4 * 4 + 13);\n\n    set&lt;char&gt; used;\n\n    graph.resize(4);\n\n    for (int z = 0; z &lt; 4; ++z) {\n        graph[z].resize(4);\n\n        for (int y = 0; y &lt; 4; ++y) {\n            cin &gt;&gt; graph[z][y];\n\n            for (int x = 0; x &lt; 4; ++x) {\n                id[z][y][x] = ++cnt;\n\n                if (graph[z][y][x] != '.') {\n                    dl.insert(dl.n, id[z][y][x]);\n                    used.insert(graph[z][y][x]);\n                }\n            }\n        }\n    }\n\n    for (auto c : used)\n        dl.insert(dl.n, 4 * 4 * 4 + c - 'A' + 1);\n\n    for (int i = 0; i &lt; 13; ++i) {\n        if (used.count(i + 'A'))\n            continue;\n\n        for (auto &amp;c : s[i]) {\n            for (int x = 0; x &lt;= 3; ++x) {\n                for (int y = 0; y &lt;= 3; ++y) {\n                    for (int z = 0; z &lt;= 3; ++z) {\n                        if (check(c, x, y, z, i)) {\n                            insert(i, x, y, z, c);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    dl.dance(0);\n\n    if (ans.empty()) {\n        cout &lt;&lt; \"No Solution!\\n\";\n    } else {\n        cout &lt;&lt; ans.size() &lt;&lt; endl;\n        vector&lt;vector&lt;vector&lt;string&gt;&gt;&gt; res;\n\n        for (auto &amp;v : ans) {\n            for (auto o : v) {\n                if (o == dl.n)\n                    continue;\n\n                --o;\n                char cc = belong[o].block_id + 'A';\n                int px = belong[o].px, py = belong[o].py, pz = belong[o].pz;\n                cube &amp;c = belong[o].c;\n                int z = c.size(), y = c[0].size(), x = c[0][0].size();\n\n                for (int i = 0; i &lt; z; ++i) {\n                    for (int j = 0; j &lt; y; ++j) {\n                        for (int k = 0; k &lt; x; ++k) {\n                            assert(pz + i &lt; 4 &amp;&amp; py + j &lt; 4 &amp;&amp; px + k &lt; 4);\n\n                            if (c[i][j][k])\n                                graph[pz + i][py + j][px + k] = cc;\n                        }\n                    }\n                }\n            }\n\n            res.push_back(graph);\n        }\n\n        sort(res.begin(), res.end());\n\n        for (int k = 0; k &lt; res.size(); ++k) {\n            for (int i = 0; i &lt; 4; ++i) {\n                for (int j = 0; j &lt; 4; ++j) {\n                    cout &lt;&lt; res[k][i][j] &lt;&lt; \"\\n\";\n                }\n            }\n\n            if (k != res.size() - 1)\n                cout &lt;&lt; \"\\n\";\n        }\n    }\n}\n\nint main() {\n    cin.tie(NULL)-&gt;ios_base::sync_with_stdio(false);\n    int Case;\n    cin &gt;&gt; Case;\n\n    for (int i = 0; i &lt; 13; ++i)\n        bfs(i);\n\n    while (Case--)\n        solve();\n\n    return 0;\n}\n</code></pre> <p>1006.BBQ</p> <p>abba\u4e32\u662f\u6307\u5c06\u5b57\u7b26\u4e32\u6bcf\u56db\u4e2a\u5b57\u7b26\u5206\u4e3a\u4e00\u6bb5\u540e\uff0c\u6bcf\u6bb5\u90fd\u5f62\u5982abba\u3002\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\\(s\\)\uff0c\u6bcf\u6b21\u53ef\u4ee5\u589e\u52a0\u3001\u5220\u9664\u6216\u4fee\u6539\u4e00\u4e2a\u5b57\u7b26\uff0c\u95ee\u591a\u5c11\u6b21\u80fd\u5c06\u8fd9\u4e2a\u4e32\u53d8\u6210abba\u4e32\u3002</p> <p>\\(|s|\\leq 10^6\\)</p> <p>\u8fd9\u4e2a\u9898\u5176\u5b9e\u662f\u4e2aeasy\u9898\uff0c\u5173\u952e\u662f\u770b\u5230\u9898\u76ee\u7684\u6027\u8d28\u3002\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u8981\u8003\u8651\u7684\u53ea\u662f\u6bcf\u4e00\u6bb5abba\u662f\u600e\u4e48\u6765\u7684\u3002\u52a0\u5165\u6211\u4eec\u73b0\u5728\u8003\u8651\u5c06\u957f\u5ea6\u4e3a\\(L\\)\u7684\u4e32\u53d8\u6210abba(4\u4e2a\u5b57\u7b26)\uff0c\u6211\u4eec\u8981\u8003\u8651\u7684\u4e32\u957f\u4e00\u5b9a\u5c0f\u4e8e8\u3002\u8fd9\u662f\u56e0\u4e3a\u957f\u5ea6\u4e3a8\u65f6\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u81f3\u591a4\u6b21\u53d8\u4e3a\u4e24\u4e2aabba\u5f62\u5f0f\uff0c\u4f46\u662f\u53d8\u6210\u4e00\u4e2aabba\u81f3\u5c11\u9700\u8981\u5220\u96644\u6b21\uff0c\u5176\u4ed6\u957f\u5ea6\u7c7b\u4f3c\u3002\u4e8e\u662f\u8bbe\\(f_i\\)\u8868\u793a\u524d\\(i\\)\u4e2a\u5b57\u7b26\u51d1\u6210abba\u4e32\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\uff0c\u6bcf\u6b21\u8f6c\u79fb\u8003\u8651\u5c06\u4e00\u6bb5\u957f\u5ea6\u4e0d\u8d85\u8fc78\u7684\u6bb5\u53d8\u4e3aabba\u4e32\u5373\u53ef\u3002\u590d\u6742\u5ea6\\(O(n)\\)\u3002\u4e8b\u5b9e\u4e0a\u8003\u8651\u4e00\u4e2a\u957f\u5ea6\u4e3a5\\(\\sim\\)7\u7684\u4e32\u7684\u65f6\u5019\u9700\u8981\u6bd4\u8f83\u7cbe\u5999\uff0c\u4e0d\u7136\u5bb9\u6613T\u98de\u3002\uff08\u663e\u7136\u6211T\u98de\u4e86\uff0c\u4f46\u662f\u6539\u8d77\u6765\u592a\u9ebb\u70e6\uff0c\u8dd1\u5bf9\u4e86\u5c31\u4e0d\u7ba1\u4e86\uff09</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#include &lt;random&gt;\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int, int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double db;\nint read() {\n    int ret = 0;\n    bool f = 0;\n    char c = getchar();\n\n    while (!isdigit(c)) {\n        if (c == EOF)\n            return -1;\n\n        if (c == '-')\n            f = 1;\n\n        c = getchar();\n    }\n\n    while (isdigit(c))\n        ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c ^ 48), c = getchar();\n\n    return f ? -ret : ret;\n}\n\nconst int N=1e6+10,inf=0x3f3f3f3f;\n\nchar s[N];\n\nint res,f[N];\nstring st;\nchar c[6];\n\nvoid dfs(int x,int len,int k){\n    if(k==4){\n        res=min(res,2-(c[1]==c[4])-(c[2]==c[3]));\n        return;\n    }\n    for(int i=x;i&lt;len;++i){\n        c[k+1]=st[i];\n        dfs(i+1,len,k+1);\n    }\n}\n\nint calc(int l,int r){\n    int len=r-l+1;\n    if(len&lt;=2) return len;\n    if(len==3){\n        return 2-((s[l]==s[r] || s[l]==s[l+1] || s[r]==s[r-1]));\n    }\n    if(len==4){\n        return 2-(s[l]==s[r])-(s[l+1]==s[r-1]);\n    }\n\n    st=\"\";\n    for(int i=l;i&lt;=r;++i) st+=s[i];\n\n    res=inf;\n    dfs(0,len,0);\n    return len-4+res;\n}\n\nvoid solve() {\n    scanf(\"%s\",s+1);int n=strlen(s+1);\n    memset(f,0x3f,sizeof(f));f[0]=0;\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=7;++j) {\n            if(i-j&lt;0) break;\n            f[i]=min(f[i],f[i-j]+calc(i-j+1,i));\n        }\n    }\n    cout&lt;&lt;f[n]&lt;&lt;hvie;\n}\n\n\nsigned main() {\n    //freopen(\"1006.in\",\"r\",stdin);\n    for (int cas = read(); cas--;) {\n        solve();\n    }\n\n    return 0;\n}\n\n/*\n\n*/\n</code></pre>"},{"location":"contests/hdu2022-6/","title":"2022\u676d\u7535\u591a\u6821(6)","text":"<p>1001.Multiply 2 Divide 2</p> <p>\u6bcf\u6b21\u628a\u4e00\u4e2a\u6570\u4e58\u4e8c\u6216\u9664\u4ee5\u4e8c\uff0c\u8ba9\u5e8f\u5217\u5355\u8c03\u4e0d\u51cf\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>\\(n,a_i\\leq 10^5\\)</p> <p>\u9996\u5148\u4e00\u4e2a\u6570\u4e00\u5b9a\u662f\u5148\u9664\u4ee5\u518d\u4e58\uff0c\u90a3\u4e48\u4e00\u4e2a\u5f88\u66b4\u529b\u7684DP\u662f\\(f_{i,j,k}\\)\u8868\u793a\u8003\u8651\u5230\\(i\\)\u4e2a\u6570\uff0c\u5b83\u9664\u4ee5\u4e86\\(j\\)\u6b21\uff0c\u4e58\u4e86\\(k\\)\u6b21\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\u4f46\u662f\u7b2c\u4e09\u7ef4\u5176\u5b9e\u662f\u53ef\u4ee5\u5230200\u5de6\u53f3\u7684\uff0c\u6240\u4ee5\u76f4\u63a5DP\u4e0d\u884c\u3002</p> <p>\u8bbe\\(m=10^5\\)\u4e3a\u503c\u57df\u4e0a\u754c\uff0c\u4e00\u4e2a\u6027\u8d28\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u6700\u7ec8\u8d85\u8fc7\u4e86\\(m\\)\uff0c\u90a3\u4e48\u5b83\u540e\u9762\u7684\u6570\u4e5f\u4f1a\u8d85\u8fc7\\(m\\)\uff0c\u4e14\u5982\u679c\u6700\u4f18\u65b9\u6848\u4e0b\u5b83\u8d85\u8fc7\u4ee5\u540e\u53c8\u4e58\u4e86\\(k\\)\u6b21\uff0c\u540e\u9762\u7684\u6570\u4e5f\u8981\u8ddf\u7740\u4e58\\(k\\)\u6b21\u3002\u90a3\u4e48\u8003\u8651\u628a\\(f\\)\u7684\u7b2c\u4e09\u7ef4\u5f00\u5230\\(\\log m\\)\u7ea7\u522b\uff0c\u73b0\u5728\u5c31\u8981\u8003\u8651\u5f53\u4e00\u4e2a\u6570\u6070\u597d\u8d85\u8fc7\\(m\\)\u65f6\u540e\u9762\u7684\u6700\u4f18\u65b9\u5f0f\u3002\u4e8e\u662f\u8bbe\\(g_{i,j}\\)\u8868\u793a\u7b2c\\(i\\)\u4e2a\u6570\u9664\u4ee5\u4e86\\(j\\)\u6b21\u5e76\u6070\u597d\u8d85\u8fc7\\(m\\)\u65f6\uff0c\u540e\u9762\u7684\u6570\u6700\u5c11\u8981\u64cd\u4f5c\u591a\u5c11\u6b21\u3002\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u5012\u7740\u8f6c\u79fb\u3002\u8f6c\u79fb\u7684\u65f6\u5019\u8981\u4e48\u540e\u9762\u6574\u4f53\u4e582\uff0c\u8981\u4e48\u4e0d\u6539\u53d8\uff0c\u8f6c\u79fb\u4e00\u4e2a\u72b6\u6001\u662f\\(O(\\log m)\\)\u7684\uff0c\u8ba1\u7b97\\(g\\)\u7684\u590d\u6742\u5ea6\u5c31\u662f\\(O(n\\log ^2m)\\)\u3002</p> <p>\u73b0\u5728\u74f6\u9888\u5728\u8f6c\u79fb\\(f\\)\uff0c\u6211\u4eec\u9700\u8981\u505a\u5230\u5747\u644a\\(O(1)\\)\u7684\u8f6c\u79fb\uff0c\u89c2\u5bdf\u5230\u8fd9\u4e2a\u8f6c\u79fb\u662f\u5355\u8c03\u7684\uff0c\u53ef\u4ee5\u7528\u53cc\u6307\u9488\u4f18\u5316\u3002</p> <p>\u6700\u540e\u590d\u6742\u5ea6\\(O(n\\log ^2m)\\)</p> <p>1003.Find the Number of Paths</p> <p>\u6709\\(n+k\\)\u4e2a\u57ce\u5e02\uff0c\u5bf9\u4e8e\\(i=1..k+n\\)\u7684\u57ce\u5e02\uff0c\u6709\\(n+k-i\\)\u6761\u8def\u8d70\u5230\\(i+1\\)\u3002\u5bf9\u4e8e\\(x=1,2,\\dots,n-1\\)\uff0c\u57ce\u5e02\\(i=x+1,\\dots,n+k\\)\uff0c\u6709\\(a_x\\)\u6761\u9053\u8def\u8d70\u5230\\(i-x\\)\u3002\u95ee\u5bf9\u4e8e\u57ce\u5e02\\(k+1,\\dots,k+n\\)\uff0c\u4ece\\(k+1\\)\uff0c\u8d70\u6070\u597d\\(k\\)\u6761\u8def\uff0c\u5230\u8fbe\u8fd9\u4e9b\u57ce\u5e02\u7684\u65b9\u6848\u6570\u3002</p> <p>\\(n,k\\le 2e5, \\sum (n+k)\\le 1006769\\)</p> <p>\u9996\u5148\uff0c\u628a\u57ce\u5e02\u7f16\u53f7\u6362\u6210\\(i'=n+k-i\\)\uff0c\u8fd9\u6837\u53d8\u6210\u4e86\u5bf9\u4e8e\u57ce\u5e02\\(0\\dots n+k-1\\)\u6709\\(i\\)\u6761\u8def\u8d70\u5230\\(i-1\\)\uff0c\u5bf9\u4e8e\\(0\\le i\\le (n+k-1)-x\\)\uff0c\u6709\\(a_x\\)\u6761\u9053\u8def\u8d70\u5230\\(i+x\\)\u3002\u95ee\u4ece\\(n-1\\)\u8d70\\(k\\)\u6761\u8def\u5230\\(0,1,\\dots,n-1\\)\u7684\u65b9\u6848\u6570\u3002</p> <p>\u8bbe\\(dp(k,i)\\)\u8868\u793a\u4ece\\(n-1\\)\u51fa\u53d1\uff0c\u8d70\\(k\\)\u6761\u8def\uff0c\u5230\u8fbe\\(i\\)\u7684\u65b9\u6848\u6570\uff0c\u9996\u5148\\(dp(0,n-1)=1,dp(0,others)=0\\)</p> <p>\u7136\u540e\u6709\uff1a $$ dp(k+1,i)=dp(k,i+1)\\cdot (i+1)+ \\sum_{x=1}^i dp(k,i-x)a_x $$</p> <p>\u8bbe\\(F_k(x)=\\sum_{i=0}^ {n-1} dp(k,i) x^i, A(x)=\\sum_{i=1}^{n-1} a_i x^i\\)</p> <p>\u90a3\u4e48\uff0c\\(F_k(x)=F_{k-1}'(x)+F_{k-1}(x) A(x)\\), \\(F_0(x)=x^{n-1}\\)\uff0c\u8fd9\u91cc\u5c31\u9700\u8981\u7528\u5230\u5fae\u5206\u65b9\u7a0b\u7684\u6280\u5de7\u4e86\u3002</p> <p>\u8bbe\\(G(x)=\\exp(\\int A(x))\\), \u90a3\u4e48\\(G'(x)=A(x)G(x)\\)</p> <p>\u8bbe\\(P_k(x)=F_k(x)G(x)\\)\uff0c\u90a3\u4e48\\(P_k'(x)=G(x)(F_k'(x)+F_k(x)A(x))=G(x)F_{k+1}=P_{k+1}(x)\\)</p> <p>\u6240\u4ee5\\(P_k(x)=P_0^{(k)}(x)\\)\uff0c\\(F_k(x)=G(x)^{-1} (x^{n-1}G(x))^{(k)}\\)\uff0c\u7531\u4e8e\u53ea\u9700\u8981\u6c42\u5230\\(x^{n-1}\\)\u6240\u4ee5\\(exp\\)\u53ea\u9700\u8981\u6c42\u5230\\(x^k\\)\u9879\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u6700\u540e\u7b54\u6848\u5c31\u662f\\([x^i]|F_k(x)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=555555+5;\nint inv[maxn],fac[maxn],ifac[maxn];\nnamespace polynomial{\n    typedef vector&lt;int&gt;poly;\n    constexpr mod(998244353),G(3);\n    int add(int x,int y){x+=y;return x&gt;=mod?x-mod:x;}\n    int sub(int x,int y){x+=mod-y;return x&gt;=mod?x-mod:x;}\n    int mul(ll x,ll y){return x*y%mod;}\n    int ksm(int x,int p){\n        int ans=1;for(;p;p&gt;&gt;=1,x=mul(x,x)){\n            if(p&amp;1) ans=mul(ans,x);\n        }\n        return ans;\n    }\n    const int InvG=ksm(G,mod-2);\n    int rev[maxn];\n    int w[maxn]={1};\n    void dft(int *a,int n,int flg=0){\n        rep(i,0,n-1) if(i&lt;rev[i]) swap(a[i],a[rev[i]]);\n        int wn;\n        for(int mid=1;mid&lt;n;mid&lt;&lt;=1){\n            wn=ksm(G,(mod-1)/(mid&lt;&lt;1));\n            for(int k=1;k&lt;mid;k++) w[k]=mul(w[k-1],wn);\n            for(int R=mid&lt;&lt;1,j=0;j&lt;n;j+=R){\n                for(int k=0;k&lt;mid;k++){\n                    int x=a[j+k],y=mul(a[j+k+mid],w[k]);\n                    a[j+k]=add(x,y);\n                    a[j+k+mid]=sub(x,y);\n                }\n            }\n        }\n        if(flg){\n            reverse(a+1,a+n);\n            int invn=mod-(mod-1)/n;\n            rep(i,0,n-1) a[i]=mul(a[i],invn);\n        }\n    }\n    void dft(poly &amp;a, int flg=0){\n        dft(a.data(),a.size(),flg);\n    }\n    int init_n(int n){\n        int lim=1,T=0;while(lim&lt;n) lim&lt;&lt;=1,T++;\n        rep(i,1,lim-1) rev[i]=(rev[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(T-1));\n        return lim;\n    }\n    poly operator*(poly a,poly b){\n        int n=a.size(),m=b.size(),len=n+m-1;\n        poly c;\n        if(n&lt;=10||m&lt;=10){\n            c.resize(len);\n            for(int i=0;i&lt;n;i++)for(int j=0;j&lt;m;j++){\n                c[i+j]=add(c[i+j],mul(a[i],b[j]));\n            }\n            return c;\n        }\n        int lim=init_n(len);\n        a.resize(lim),b.resize(lim),c.resize(lim);\n        dft(a),dft(b);\n        rep(i,0,lim-1) c[i]=mul(a[i],b[i]);\n        dft(c,1);\n        c.resize(len);\n        return c;\n    }\n    poly operator+(poly a,poly b){\n        a.resize(max(a.size(),b.size()));\n        rep(i,0,b.size()-1) a[i]=add(a[i],b[i]);\n        return a;\n    }\n    poly operator-(poly a,poly b){\n        a.resize(max(a.size(),b.size()));\n        rep(i,0,b.size()-1) a[i]=sub(a[i],b[i]);\n        return a;\n    }\n    poly poly_inv(poly &amp;a,int n){\n        if(n==1) {poly b(1);b[0]=ksm(a[0],mod-2);return b;}\n        poly h=poly_inv(a,(n+1)/2);\n        poly f=poly(a.begin(),a.begin()+min(n,(int)a.size()));\n        int lim=init_n(n&lt;&lt;1);\n        h.resize(lim),f.resize(lim);\n        dft(h),dft(f);\n        for(int i=0;i&lt;lim;i++) h[i]=mul(h[i],sub(2,mul(f[i],h[i])));\n        dft(h,1);\n        h.resize(n);\n        return h;\n    }\n    void poly_deriv(poly &amp;a){\n        rep(i,0,a.size()-2){\n            a[i]=mul(a[i+1],i+1);\n        }\n        a.pop_back();\n    }\n    void poly_inter(poly &amp;a){\n        a.pb(mul(a.back(),inv[a.size()]));\n        dwn(i,a.size()-2,1){\n            a[i]=mul(a[i-1],inv[i]);\n        }\n        a[0]=0;\n    }\n    void poly_ln(poly &amp;a,int n){\n        poly c=poly_inv(a,n);\n        poly_deriv(a);\n        a.resize(n);\n        a=a*c;\n        poly_inter(a);\n        a.resize(n);\n    }\n    poly poly_exp(poly &amp;a,int n){\n        if(n==1){\n            poly b(1,1);return b;\n        }\n        poly f=poly_exp(a,(n+1)/2);\n        poly l=f; poly_ln(l,n);\n        if(a.size()&lt;l.size()) a.resize(l.size());\n        rep(i,0,l.size()-1) l[i]=add((mod+(i==0)-l[i])%mod,a[i]);\n        f=f*l;\n        f.resize(n);\n        return f;\n    }\n}\nusing namespace polynomial;\nint n,k;\nint a[maxn];\nsigned main(){\n    // freopen(\"14.in\",\"r\",stdin);freopen(\"my.out\",\"w\",stdout);\n    inv[1]=fac[1]=ifac[1]=fac[0]=ifac[0]=1;\n    rep(i,2,maxn-1){\n        inv[i]=sub(mod,mul(mod/i,inv[mod%i]));\n        fac[i]=mul(fac[i-1],i);\n        ifac[i]=mul(ifac[i-1],inv[i]);\n    }\n\n    dwn(_,yh(),1){\n        n=yh(),k=yh();\n        poly g(n+1),h;\n        rep(i,2,n){\n            a[i]=yh();\n            g[i]=mul(a[i],inv[i]);\n        }\n        g=poly_exp(g,k+1);\n        h=poly_inv(g,n);\n        g.insert(g.begin(),n-1,0);\n        // rep(i,0,n+k){\n        //     cout&lt;&lt;g[i]&lt;&lt;\" \\n\"[i==n+k];\n        // }\n        // cout&lt;&lt;\"--------------\\n\";\n        rep(i,k,n+k){\n            g[i-k]=mul(mul(fac[i],ifac[i-k]),g[i]);\n        }\n        g.resize(n);\n        g=g*h;\n        dwn(i,n-1,0){\n            cout&lt;&lt;g[i]&lt;&lt;\" \\n\"[i==0];\n        }\n    }\n    return 0;\n}\n</code></pre> <p>1011.Find different</p> <p>\u5bf9\u6bcf\u4e00\u4e2a\\(n=1,2,\\dots, N\\)\u6c42\u957f\u5ea6\u4e3a\\(n\\)\u7684\u73af\uff0c\u503c\u57df\u4e3a\\(0,\\dots,m-1\\)\u7684\u672c\u8d28\u4e0d\u540c\u7684\u65b9\u6848\u6570\u3002\u4e24\u4e2a\u73af\u672c\u8d28\u76f8\u540c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\\(k,s\\)\u4f7f\u5f97\u4e24\u4e2a\u73af\u4e0a\\(a_{(i+s)\\%n}+k\\equiv a_{i} \\pmod m\\)</p> <p>Burnside\u677f\u9898\uff0c\u627e\u51fa\u6240\u6709\u7684\u672c\u8d28\u4e0d\u540c\u7684\u53d8\u5316\u4e0b\u4e0d\u53d8\u7684\u65b9\u6848\u6570\uff0c\u6c42\u5e73\u5747\u503c\u3002 \u679a\u4e3e\u9006\u65f6\u9488\u79fb\u52a8\u4e86\\(s(0\\le s\\le n-1)\\)\u6b65\uff0c\u73af\u6574\u4f53\u52a0\u4e86\\(k(0\\le k\\le m-1)\\)\uff0c\u73af\u5728\u53d8\u5316\u524d\u540e\u76f8\u7b49\uff0c\u5f53\u4e14\u4ec5\u5f53\\(a_{(i+s)\\%n}\\equiv a_i+k\\pmod m\\)\uff0c\u7531\u4e8e\u79fb\u52a8\u4e86\\(s\\)\u6b65\uff0c\u79fb\u52a8\u540e\u5bf9\u5e94\u7684\u7f6e\u6362\u53ef\u4ee5\u770b\u505a\u73af\u957f\u4e3a\\(n/gcd(n,s)\\)\u7684\\(gcd(n,s)\\)\u4e2a\u73af\uff0c\u6bcf\u4e2a\u73af\u4e0a\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u662f\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\\(+k\\)\u3002\u8981\u4f7f\u5f97\u53d8\u5316\u540e\u4fdd\u6301\u76f8\u540c\uff0c\u5373\u8981\u627e\u5230\u90a3\u4e9b\u516c\u5dee\u4e3a\\(k\\)\u7684\u73af\uff0c\u800c\u4e14\u8f6c\u5b8c\u4e00\u5708\u8fc7\u540e\u521a\u597d\u6743\u503c\u548c\u521d\u503c\u76f8\u7b49\uff0c\u8fd9\u5c31\u8981\u6c42\\(n/gcd(n,s)\\times k\\equiv 0\\pmod m\\)\u3002</p> <p>\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u6837\u7684\u8981\u6c42\u7684\\(k,s\\)\uff0c\u5373\u4e3a\\(k\\)\u662f\\(m/gcd(m,n/gcd(n,s))\\)\u7684\u500d\u6570\uff0c\u5171\u6709\\(gcd(m,n/gcd(n,s))\\)\u4e2ak\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u4e3a $$ \\begin{aligned} &amp;\\frac1{nm}\\sum_{s=0}^{n-1} m^{gcd(n,s)}\\cdot gcd(m,n/gcd(n,s))\\&amp;=\\frac1{nm}\\sum_{s=1}^n\\sum_{d=1} m^d\\cdot gcd(m,n/d)[d=gcd(n,s)]\\&amp;=\\frac1{nm}\\sum_{d=1}^n[d|n]m^dgcd(m,n/d)\\varphi(n/d)  \\end{aligned} $$ \u53ef\u4ee5\\(O(\\sqrt n)\\)\u7b97\u51fa\u6765\uff0c\u5bf9\u6bcf\u4e2an\u90fd\u8fd9\u4e48\u7b97\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u6700\u540e\u590d\u6742\u5ea6\\(O(n\\sqrt n)\\)</p>"},{"location":"contests/hdu2022-8/","title":"2022\u676d\u7535\u591a\u6821(8)","text":"<p>1007.Darnassus</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5b8c\u5168\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u6743\u503c \\(p_i\\)\uff0c\\(p\\) \u6784\u6210 \\(1\\sim n\\) \u7684\u6392\u5217\u3002 \\(i,j\\) \u4e4b\u95f4\u7684\u8fb9\uff0c\u6743\u503c\u4e3a \\(|i-j|\\times |p_i-p_j|\\)\u3002 \u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u6743\u503c\u3002</p> <p>\\(n\\leq 50000\\)</p> <p>\u8003\u8651\u6700\u5c0f\u751f\u6210\u6811\u7684\u4e00\u4e2a\u53ef\u884c\u4e0b\u754c\uff0c\u5982\u679c \\(i\\) \u548c \\(i+1\\) \u8fde\u8fb9\uff0c\u5219\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u6ee1\u8db3 \\(1\\times |p_i-p_{i+1}|&lt;n\\)\u3002</p> <p>\u56e0\u6b64\u53ea\u9700\u8981\u7ef4\u62a4\u6240\u6709\u8fb9\u6743\u5c0f\u4e8e \\(n\\) \u7684\u8fb9\uff0c\u800c\u5bf9\u4e8e\u70b9 \\(i\\) \u800c\u8a00\uff0c\\(|i-j|\\times|p_i-p_j|&lt;n\\)\uff0c\u5219\u610f\u5473\u7740 \\(|i-j|&lt;\\sqrt{n}\\) \u6216\u8005 \\(|p_i-p_j|&lt;\\sqrt{n}\\)\uff0c\u53ef\u4ee5 \\(O(\\sqrt{n})\\) \u679a\u4e3e \\(j\\) \u3002</p> <p>\u7531\u4e8e\u6240\u6709\u8fb9\u6743\u90fd\u5728 \\([1,n)\\)\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u6392\u5e8f\uff0c\u53ea\u9700\u8981\u5f00 \\(n\\) \u4e2a\u6876\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u505aKruskal\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n\\sqrt{n}\\alpha(n))\\)\u3002</p>"},{"location":"contests/nerc2022/","title":"NERC2022","text":"<p>E.Even Split</p> <p>\u957f\u5ea6\u4e3a\\(L\\)\u7684\u7ebf\u6bb5\u4e0a\u6709\\(n\\)\u4e2a\u70b9\uff0c\u73b0\u5728\u8981\u628a\u8fd9\u6761\u7ebf\u6bb5\u5206\u6210\\(n\\)\u6bb5\uff0c\u4f7f\u5f97\u6bcf\u4e00\u6bb5\u80fd\u63a7\u5236\u4e00\u4e2a\u70b9\u3002\u63a7\u5236\u7684\u5b9a\u4e49\u662f\u5728\u8fd9\u4e2a\u7ebf\u6bb5\u4e0a\u6216\u7aef\u70b9\u5904\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u540c\u65f6\u5728\u4e24\u4e2a\u7ebf\u6bb5\u7aef\u70b9\u5904\uff0c\u53ef\u4ee5\u7ed9\u5b83\u5206\u914d\u4e00\u4e2a\u3002</p> <p>\\(n\\leq 10^5,L\\leq 10^9\\)</p> <p>\u4e00\u4e2a\u5e76\u4e0d\u660e\u663e\u7684\u7ed3\u8bba\u662f\uff0c\u6700\u5c0f\u503c\u53d8\u5927\u7684\u65f6\u5019\u53ea\u4f1a\u8ba9\u6700\u5927\u503c\u53d8\u5c0f\uff08yy\u4e00\u4e0b\u6bd4\u5982\u6700\u5927\u503c\u53cd\u800c\u53d8\u5927\u4e86\uff0c\u4e00\u5b9a\u53ea\u4f1a\u4f7f\u5f97\u53f3\u7aef\u70b9\u53f3\u79fb\uff0c\u800c\u4e14\u6b64\u65f6\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u7f29\u77ed\u5176\u4e2d\u67d0\u6761\uff0c\u6240\u4ee5\u8fd9\u662f\u4e0d\u4f18\u7684\uff09\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u8981\u6c42\u6700\u77ed\u7684\u6700\u957f\u548c\u6700\u957f\u7684\u6700\u77ed\u3002\u5148\u4e8c\u5206\u8fd9\u4e2a\u6700\u957f\u7684\u7ebf\u6bb5\u957f\u5ea6\uff0c\u56fa\u5b9a\u6700\u957f\u518d\u4e8c\u5206\u6700\u77ed\u3002check\u7684\u65f6\u5019\u987a\u7740\u63a8\u4e00\u904d\u53ef\u884c\u7684\u53f3\u7aef\u70b9\u8303\u56f4\uff0c\u5982\u679c\u7ebf\u6bb5\u603b\u957f\u4e0d\u591f\u957f\u8bf4\u660e\u6700\u77ed\u7684\u957f\u5ea6\u5c0f\u4e86\uff0c\u957f\u8fc7\u4e86\u8bf4\u660e\u5927\u4e86\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log^2L)\\)\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define int long long\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\nconst int N=1e5+10,mod=1000000007,inf=1e9+7;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nint n,L,ans;\nint a[N],pos[N];\n\nint check(int x){\n    int l=1,r=1e9,ret=0;\n    while(l&lt;=r){//min\n        int mid=(l+r)&gt;&gt;1,tl=0,tr=0,flag=1;\n        for(int i=1;i&lt;=n;++i){\n            tl+=mid;tr+=mid+x;\n            tl=max(tl,a[i]);tr=min(tr,a[i+1]);\n            if(tr&lt;a[i]){\n                l=mid+1;flag=0;break;\n            }\n            if(tl&gt;a[i+1]){\n                r=mid-1;flag=0;break;\n            }\n        }\n        if(flag &amp;&amp; tr&lt;L) l=mid+1,flag=0;\n        if(flag){\n            ret=mid;\n            l=mid+1;\n        }\n    }\n    return ret;\n}\n\npii calc(int l,int r,int i,int t){\n    if(i==n){\n        pos[i]=L;\n        return mkp(L,L);\n    }\n    pii ret=calc(max(a[i+1],l+t),min(a[i+2],r+t+ans),i+1,t);\n    ret.fi=max(ret.fi-t-ans,l);ret.se=min(ret.se-t,r);\n    pos[i]=ret.se;\n    return ret;\n}\n\n\nvoid solve(){\n    L=read();n=read();\n    for(int i=1;i&lt;=n;++i) a[i]=read();\n    a[n+1]=L;\n\n    int l=0,r=L;ans=L;\n    while(l&lt;=r){//max\n        int mid=(l+r)&gt;&gt;1;\n        if(check(mid)) ans=mid,r=mid-1;\n        else l=mid+1;\n    }\n    int t=check(ans);\n    calc(0,0,0,t);\n    for(int i=0;i&lt;n;++i) printf(\"%lld %lld\\n\",pos[i],pos[i+1]);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>J.Job Lookup</p> <p>\\(n\\)\u4e2a\u8282\u70b9\u7f16\u53f7\u4e3a\\(1\\sim n\\)\uff0c\u6bcf\u5bf9\u8282\u70b9\u4e4b\u95f4\u6709\u4e00\u4e2a\u6743\u503c\\(c_{ij}=c_{ji}\\)\uff0c\u73b0\u5728\u8981\u6784\u9020\u4e00\u68f5BST\uff08\u4e2d\u5e8f\u904d\u5386\\(1\\sim n\\)\uff09\uff0c\u4ee3\u4ef7\u4e3a\\(\\sum_{i=1}^n\\sum_{j=i+1}^n dis_{i,j}\\cdot c_{ij}\\)\uff0c\u6700\u5c0f\u5316\u4ee3\u4ef7\u3002</p> <p>\\(n\\leq 200,0\\leq c\\leq 10^9\\)</p> <p>\u8fd9\u4e2a\u4e00\u770b\u5c31\u5f88\u533a\u95f4DP\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u6289\u62e9\u4ee5\u54ea\u4e2a\u70b9\u4f5c\u4e3a\u6839\u3002\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55\u7edf\u8ba1\u8d21\u732e\u3002</p> <p>\u8fd9\u91cc\u7684\u8d21\u732e\u548c\u8ddd\u79bb\u6709\u5173\uff0c\u4f46\u662f\u6211\u4eec\u65e0\u6cd5\u5b58\u4e0b\u6240\u6709\u7684\u8ddd\u79bb\u3002\u4f46\u662f\u7531\u4e8e\\(c_{ij}=c_{ji}\\)\uff0c\u5b9e\u9645\u4e0a\u5728\u7edf\u8ba1\u533a\u95f4\u8d21\u732e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u6b62\u8ba1\u7b97\u533a\u95f4\u5185\u7684\u8d21\u732e\uff0c\u8fd8\u8003\u8651\u533a\u95f4\u5185\u8282\u70b9\u5bf9\u5916\u9762\u8282\u70b9\u7684\u8d21\u732e\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\\([l,r]\\)\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u4ee5\\(k\\)\u4e3a\u6839\uff0c\u5bf9\u4e8e\\([l,k-1]\\)\u6765\u8bf4\uff0c\u91cc\u9762\u6240\u6709\u8282\u70b9\u5230\u5916\u9762\u6240\u6709\u8282\u70b9\u7684\u8ddd\u79bb\u90fd\u4f1a\u589e\u52a01\uff0c\u800c\u5bf9\\([k+1,r]\\)\u6765\u8bf4\u662f\u4e00\u6837\u7684\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u8d21\u732e\u7684\u7edf\u8ba1\u53d8\u6210\u4e00\u6b65\u4e00\u6b65\u7684\uff0c\u800c\u975e\u6700\u540e\u518d\u7edf\u8ba1\u8d21\u732e\u3002</p> <p>\u9884\u5904\u7406\u51fa\\(s[i][l][r]\\)\u8868\u793a\\(1\\sim i\\)\u7684\u6240\u6709\u8282\u70b9\u5bf9\\([l,r]\\)\u7684\u6240\u6709\u8282\u70b9\u7684\\(c\\)\u7684\u548c\u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n^3)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\nconst int N=205,mod=1000000007,inf=1e9+7;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nint n,ans;\nint fa[N],c[N][N],pos[N][N];\nll val[N][N][N],sum[N][N][N],f[N][N];\n\nvoid init(){\n    n=read();\n    for(int i=1;i&lt;=n;++i) for(int j=1;j&lt;=n;++j) c[i][j]=read();\n    for(int i=1;i&lt;=n;++i) for(int l=i+1;l&lt;=n;++l){\n        ll s=0;\n        for(int r=l;r&lt;=n;++r){\n            s+=c[i][r];\n            val[i][l][r]=s;\n        }\n    }\n    for(int l=1;l&lt;=n;++l) for(int r=l;r&lt;=n;++r){\n        for(int i=1;i&lt;l;++i) sum[i][l][r]=sum[i-1][l][r]+val[i][l][r];\n    }\n}\n\nvoid fun(int l,int r,int ff){\n    if(l&gt;r) return;\n    fa[pos[l][r]]=ff;\n    fun(l,pos[l][r]-1,pos[l][r]);fun(pos[l][r]+1,r,pos[l][r]);\n}\n\nvoid solve(){\n    init();memset(f,0x3f,sizeof(f));\n    for(int l=0;l&lt;=n+1;++l) for(int r=0;r&lt;=n+1;++r)\n        if(l&gt;=r) f[l][r]=0;\n    for(int len=2;len&lt;=n;++len){\n        for(int l=1;l&lt;=n;++l){\n            int r=l+len-1;\n            if(r&gt;n) break;\n            for(int k=l;k&lt;=r;++k){\n                ll tmp=0;\n                /*\n                tmp+=sum[r][r+1][n]-sum[l-1][r+1][n];\n                tmp+=sum[l-1][l][r];\n                tmp+=val[k][k+1][r];\n                tmp+=sum[k-1][k][k]-sum[l-1][k][k];\n                tmp-=val[k][r+1][n];\n                tmp-=sum[l-1][k][k];\n                tmp+=(sum[k-1][k+1][r]-sum[l-1][k+1][r])*2;\n                //\u8d5b\u65f6\u4ee3\u7801\n                */\n                tmp+=sum[k-1][k][n]-sum[l-1][k][n]+sum[l-1][l][k-1];\n                tmp+=sum[r][r+1][n]-sum[k][r+1][n]+sum[k][k+1][r];\n                if(tmp+f[l][k-1]+f[k+1][r]&lt;f[l][r]){\n                    pos[l][r]=k;\n                    f[l][r]=tmp+f[l][k-1]+f[k+1][r];\n                }\n            }\n        }\n    }\n    for(int i=1;i&lt;=n;++i) pos[i][i]=i;\n    fun(1,n,0);\n    for(int i=1;i&lt;=n;++i) printf(\"%d \",fa[i]);\n}\n\nint main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"contests/nowcoder2022-3/","title":"2022\u725b\u5ba2\u591a\u6821(3)","text":"<p>B.Boss</p> <p>\\(n\\)\u4e2a\u4eba\uff0c\\(K\\)\u5ea7\u57ce\u5e02\uff0c\u6bcf\u5ea7\u57ce\u5e02\u6709\u9700\u8981\\(e_i\\)\u7684\u4eba\uff0c\u7b2c\\(i\\)\u4e2a\u4eba\u5206\u914d\u5230\\(j\\)\u57ce\u5e02\u82b1\u8d39\\(c_{ij}\\)\uff0c\u6c42\u6700\u5c0f\u5206\u914d\u82b1\u8d39\u3002</p> <p>\\(n\\leq 10^5,K\\leq 10,\\sum e_i=n\\)</p> <p>\u4e0d\u8003\u8651\u6570\u636e\u8303\u56f4\uff0c\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u95ee\u9898\u3002\u76f4\u63a5\u505a\u4e0d\u4e86\uff0c\u90a3\u4e48\u9898\u76ee\u5f88\u660e\u663e\u5c31\u662f\u8981\u6211\u4eec\u7528\u6a21\u62df\u8d39\u7528\u6d41\u6765\u4f18\u5316\u3002</p> <p>\u8003\u8651\u589e\u5e7f\u8fc7\u7a0b\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ea\u6709\u4e24\u5c42\u7684\u56fe\uff0c\u5c06\u4e00\u4e2a\u5df2\u7ecf\u5206\u914d\u597d\u7684\u4eba\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\u53ea\u9700\u8981\u8d70\u4e00\u6761\u53cd\u5411\u8fb9\u518d\u8d70\u4e00\u6761\u6b63\u5411\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u5408\u5e76\u8fd9\u4e24\u6b65\uff0c\u7528\u4e00\u6761\u8fb9\u4ee3\u66ff\u6b63\u5411\u8fb9+\u53cd\u5411\u8fb9\u3002</p> <p>\u8fd9\u6837\u56fe\u4e0a\u4e00\u5171\u6709\\(K\\)\u4e2a\u70b9\u8868\u793a\u57ce\u5e02\uff0c\u6211\u4eec\u5148\u628a\u6240\u6709\u4eba\u5206\u914d\u5230\u4e00\u53f7\u57ce\u5e02\uff0c\u5176\u4ed6\u57ce\u5e02\u518d\u4ece\u8fd9\u91cc\u62a2\u4eba\uff0c\u6bcf\u4e2a\u4eba\u5206\u914d\u7684\u4ee3\u4ef7\u5c31\u662f\u4e0a\u8ff0\u7684\u6b63\u5411\u8fb9+\u53cd\u5411\u8fb9\u3002\u5bf9\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u4ece\u5f53\u524d\u57ce\u5e02\u8d70\u5230\u4efb\u4e00\u5176\u4ed6\u57ce\u5e02\uff0c\u90a3\u5c31\u662f\\(K-1\\)\u6761\u8fb9\uff0c\u4f46\u662f\u8fd9\u6837\u5b9e\u9645\u4e0a\u4f1a\u6709\u5f88\u591a\u91cd\u8fb9\uff0c\u800c\u6211\u4eec\u5b9e\u9645\u4e0a\u53ea\u5173\u5fc3\u5176\u4e2d\u6700\u77ed\u7684\u4e00\u6761\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\\(K^2\\)\u4e2a\u5806\u7ef4\u62a4\u4e24\u4e24\u4e4b\u95f4\u7684\u91cd\u8fb9\uff0c\u518d\u8dd1SPFA\u6c42\u51fa\u6700\u5c0f\u8d39\u7528\u6a21\u62df\u589e\u5e7f\u5373\u53ef\u3002\u540c\u65f6\u6ce8\u610f\u6bcf\u8f6c\u79fb\u4e00\u4e2a\u4eba\u8981\u66f4\u65b0\u4e00\u6b21\u5806\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\cdot \\text{SPFA}(K^2)+nK\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int N=1e5+5,M=12,mod=998244353,inf=0x3f3f3f3f3f3f3f3f;\n\nint n,K,s;\nint bl[N],c[N][M],e[N];\nint dis[M],vis[M],las[M];\nvector&lt;int&gt;G[N];\npriority_queue&lt;pii&gt;q[M][M];\n\nint spfa(int s){\n    for(int i=1;i&lt;=K;++i){\n        dis[i]=inf;vis[i]=0;las[i]=0;\n    }\n    queue&lt;int&gt;que;que.push(s);\n    dis[s]=0;vis[s]=1;\n    while(!que.empty()){\n        int x=que.front();que.pop();vis[x]=0;\n        for(int v=s-1;v&gt;=1;--v){\n            if(q[x][v].empty()) continue;\n            int d=-q[x][v].top().fi;\n            if(dis[v]&gt;dis[x]+d){\n                dis[v]=dis[x]+d;las[v]=x;\n                if(!vis[v]) vis[v]=1,que.push(v);\n            }\n        }\n    }\n\n    vector&lt;int&gt;vec;\n    for(int x=1;x!=s;x=las[x]){\n        int t=q[las[x]][x].top().se;\n        vec.pb(t);bl[t]=las[x];\n    }\n    for(auto x:vec){\n        for(int i=1;i&lt;=s;++i){\n            if(i!=x) q[i][bl[x]].push({c[x][bl[x]]-c[x][i],x});\n        }\n    }\n    return dis[1];\n}\n\nsigned main(){\n    n=read();K=read();\n    for(int i=1;i&lt;=K;++i) e[i]=read();\n    for(int i=1;i&lt;=n;++i) for(int j=1;j&lt;=K;++j) c[i][j]=read();\n\n    int ans=0;\n    for(int i=1;i&lt;=n;++i){\n        ans+=c[i][1];\n        bl[i]=1;\n    }\n    for(int j=2;j&lt;=K;++j){\n        for(int i=1;i&lt;=n;++i) q[j][bl[i]].push({c[i][bl[i]]-c[i][j],i}); // may change from bl[i] to j\n        for(int i=1;i&lt;=e[j];++i){\n            for(int u=1;u&lt;=j;++u) for(int v=1;v&lt;=j;++v){\n                while(!q[u][v].empty() &amp;&amp; bl[q[u][v].top().se]!=v) q[u][v].pop();\n            }\n            ans+=spfa(j);\n        }\n\n    }\n    cout&lt;&lt;ans&lt;&lt;hvie;\n    return 0;\n}\n</code></pre> <p>D.Directed</p> <p>\u6709\u4e00\u68f5\u6811\uff0c\u53ef\u4ee5\u968f\u673a\u9009\\(k\\)\u6761\u8fb9\u5b9a\u5411\u81f3\u6839\u65b9\u5411\uff0c\u95ee\u968f\u673a\u5b9a\u5411k\u6761\u8fb9\uff0c\u4eces\u51fa\u53d1\u968f\u673a\u6e38\u8d70\u5230\u6839\u7684\u671f\u671b\u6b65\u6570\u3002</p> <p>\u9996\u5148\u6709\u4e2a\u7ed3\u8bba\uff1a\u4ece\u4e00\u4e2a\u70b9\u968f\u673a\u6e38\u8d70\u8d70\u5230\u7236\u4eb2\u7684\u671f\u671b\u6b65\u6570\u662f\\(2siz(x)-1\\) \u7136\u540e\u5982\u56fe</p> <p></p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=1e6+5,mod=998244353;\n/*\ng(x)=1+\\frac1{d(x)}\\sum_{y\\in son(x)}(g(y)+g(x))\\\\\nd\\cdot g(x)=d+\\sum g(y)+(d-1)g(x)\\\\\ng(x)=d+\\sum g(y)=1+\\sum (g(y)+1)\n*/\n/*\nsz(x)=1+\\sum sz(y)\\\\\n2sz(x)-1=1+\\sum((2sz(y)-1)+1)\ng(x)=2sz(x)-1\n*/\n/*\n\u5b9a\u5411\u4e00\u4e2a\u8fb9\uff0c\u5bf9\u4e8e\u5176\u7956\u5148\u94fe\u4e0a\u7684\u8fb9\u6765\u8bf4\uff0c\u76f8\u5f53\u4e8e\u5220\u53bb\u4e00\u4e2a\u5b50\u6811\uff0c\u8d21\u732e\u4e3a-2siz\n\u8981\u7b97\u7684\u662f\u4eces\u52301\u7684\u8d21\u732e\n\u5982\u679c\u5b9a\u5411\u7684\u8fb9\u5728\u94fe\u4e0a\uff0c\u90a3\u5bf9\u4efb\u610f\u957f\u5ea6\u90fd\u4f1a-2siz\n\u53ef\u4ee5\u628a\u6240\u6709\u957f\u5ea6\u7684\u8d21\u732e\u90fd\u7b97\u51fa\u6765\n\n\u7136\u540e\u4ecen-1\u4e2d\u9009k\u4e2a\uff0c\u9009\u51fa\u957f\u5ea6\u4e3ai\u7684\u8fb9\u7684\u65b9\u6848\u6570\uff0c\u8003\u8651\u9009\u4e2d\u6700\u4e0b\u65b9\u7684\u8fb9\uff0c\u800c\u4e14\u4e0d\u9009\u4e2d\u4e0a\u9762\u7684i-1\u6761\u8fb9\uff0c\u7136\u540e\u65b9\u6848\u6570\u662f\nC(n-1-i,k-1)\n*/\nvector&lt;int&gt;adj[maxn];\nint n,k,s;\nint sz[maxn],dep[maxn];\nint nxt[maxn];\nbool onChain[maxn];\nll sum[maxn];\nll fac[maxn],ifac[maxn],inv[maxn];\nvoid dfs(int x,int fa){\n    sz[x]=1;\n    onChain[x]=(x==s);\n    for(int y:adj[x])if(y!=fa){\n        dep[y]=dep[x]+1;\n        dfs(y,x);\n        sz[x]+=sz[y];\n        onChain[x]|=onChain[y];\n    }\n}\nvoid dfs2(int x,int fa){\n    if(onChain[x]) nxt[x]=x;\n    else nxt[x]=nxt[fa];\n    for(int y:adj[x])if(y!=fa){\n        dfs2(y,x);\n    }\n    int l=dep[x]-dep[nxt[x]],r=dep[x];\n    // cout&lt;&lt;x&lt;&lt;' '&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;hvie;\n    (sum[l]+=mod-2ll*sz[x]%mod)%=mod;\n    (sum[r]+=2ll*sz[x]%mod)%=mod;\n}\nll binom(int x,int y){\n    if(x&lt;y) return 0;\n    return fac[x]*ifac[y]%mod*ifac[x-y]%mod;\n}\n\nsigned main(){\n    n=yh(),k=yh(),s=yh();\n    fac[0]=ifac[0]=fac[1]=ifac[1]=inv[1]=1;\n    rep(i,2,n){\n        fac[i]=(ll)fac[i-1]*i%mod;\n        inv[i]=(mod-(mod/i)*inv[mod%i]%mod)%mod;\n        ifac[i]=ifac[i-1]*inv[i]%mod;\n    }\n    rep(i,1,n-1){\n        int x=yh(),y=yh();adj[x].pb(y);adj[y].pb(x);\n    }\n    dfs(1,0);\n    dfs2(1,0);\n    rep(i,1,n) sum[i]=(sum[i-1]+sum[i])%mod;\n    ll g=ifac[n-1]*fac[k]%mod*fac[n-1-k]%mod;\n    ll ans=0;\n    rep(i,1,n){\n        if(onChain[i]&amp;&amp;i!=1) ans=(ans+2ll*sz[i]%mod+mod-1)%mod;\n    }\n    // cout&lt;&lt;ans&lt;&lt;hvie;\n    rep(i,1,n-1){\n        ll p=binom(n-1-i,k-1)*g%mod;\n        ans=(ans+sum[i]*p%mod)%mod;\n    }\n    cout&lt;&lt;ans&lt;&lt;hvie;\n    return 0;\n}\n</code></pre> <p>G.Geometry</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u51f8\u5305\u548c\u521d\u901f\u5ea6\uff0c\u95ee\u4f55\u65f6\u78b0\u649e\u3002</p> <p>\u51f8\u5305\u5927\u5c0f\\(\\le 5e4\\)</p> <p>\u8bbe\\(P_1\\)\u76f8\u5bf9\\(P_2\\)\u7684\u901f\u5ea6\u662f\\(v\\),\u8981\u6c42\u7684\u5b9e\u9645\u4e0a\u662f\\(\\min t,s.t. U\\in P_1, V\\in P_2, U+vt\\in V, vt\\in V-U\\) \u5373\u6c42\\(P_2\\)\u548c\\(-P_1\\)\u7684\u95f5\u79d1\u592b\u65af\u57fa\u548c\u3002\u7136\u540e\u4e8c\u5206\u65f6\u95f4\u770b\u662f\u5426\u5728\u8fd9\u4e2a\u548c\u7684\u51f8\u5305\u91cc\uff0c\u6ce8\u610f\u521d\u59cb\u5c31\u5728\u548c\u65e0\u89e3\u7684\u60c5\u51b5\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\nconst db eps=1e-10,inf=1e18;\nint sgn(db x){\n    if(x&gt;eps) return 1;\n    if(x&lt;-eps) return -1;\n    return 0;\n}\nstruct vec{\n    db x,y;\n    vec(){}\n    vec(db x,db y):x(x),y(y){}\n};\nostream&amp;operator&lt;&lt;(ostream&amp;out,const vec&amp;A){out&lt;&lt;'('&lt;&lt;A.x&lt;&lt;','&lt;&lt;A.y&lt;&lt;')';return out;}\nvec operator+(const vec&amp;A,const vec&amp;B){return vec(A.x+B.x,A.y+B.y);}\nvec operator-(const vec&amp;A,const vec&amp;B){return vec(A.x-B.x,A.y-B.y);}\nvec operator*(const db&amp;B,const vec&amp;A){return vec(A.x*B,A.y*B);}\nvec operator*(const vec&amp;A,const db&amp;B){return vec(A.x*B,A.y*B);}\nvec operator/(const vec&amp;A,const db&amp;B){return vec(A.x/B,A.y/B);}\ndb cross(const vec&amp;a,const vec&amp;b){\n    return a.x*b.y-a.y*b.x;\n}\ndb dot(const vec&amp;a,const vec&amp;b){\n    return a.x*b.x+a.y*b.y;\n}\nvec trunc(const vec &amp;v){return vec(-v.y,v.x);}\ndb len(const vec &amp;v){return hypot(v.x,v.y);}\nvec normalize(const vec&amp;v){\n    return v/(len(v));\n}\ntypedef vec point;\ndb xmult(point a,point b,point o){\n    return cross(a-o,b-o);\n}\nstruct line{\n    vec s,e,v,n;\n    db angle;\n    line(){}\n    line(vec a,vec b):s(a),e(b){\n        v=b-a;\n        angle=atan2(v.y,v.x);\n        n=normalize(trunc(v));\n    }\n    bool operator&lt;(const line &amp;a )const{\n        if(sgn(angle-a.angle)==0){\n            return cross(v,a.e-s)&gt;=0;\n        }\n        return angle&lt;a.angle;\n    }\n};\nbool onLeft(line L,point P){\n    return cross(L.v,P-L.s)&gt;0;\n}\nint onSegment(point P,point A,point B){\n    if(sgn(xmult(A,B,P))) return 0;\n    int d=sgn(dot(A-P,B-P));\n    if(d==0) return 1;\n    if(d&lt;0) return 2;\n    return 0;  \n}\nint segcrossseg(line a,line b){\n    int d1=sgn(cross(a.e-a.s,b.s-a.s));\n    int d2=sgn(cross(a.e-a.s,b.e-a.s));\n    int d3=sgn(cross(b.e-b.s,a.s-b.s));\n    int d4=sgn(cross(b.e-b.s,a.e-b.s));\n    if((d1^d2)==-2&amp;&amp;(d3^d4)==-2) return 2;\n    return (d1==0&amp;&amp;sgn(dot(b.s-a.s,b.s-a.e))&lt;=0)||\n        (d2==0&amp;&amp;sgn(dot(b.e-a.s,b.e-a.e))&lt;=0)||\n        (d3==0&amp;&amp;sgn(dot(a.s-b.s,a.s-b.e))&lt;=0)||\n        (d4==0&amp;&amp;sgn(dot(a.e-b.s,a.e-b.e))&lt;=0);\n}\npoint intersection(line A,line B){\n    vec u=B.s-A.s;\n    db dt=cross(A.v,B.v);\n    if(sgn(dt)==0) return point(-inf,-inf);\n    db t=cross(u,B.v)/dt;\n    return A.s+A.v*t;\n}\n\ntypedef vector&lt;point&gt;Polygon;\n\nconst point O(0,0);\n\nline ls[maxn],hpi[maxn];\nbool onRight(line a,line b,line c){\n    point i=intersection(b,c);\n    return sgn(cross(a.v,i-a.s))&lt;0;\n}\nvoid HalfPlaneIntersection(vector&lt;line&gt;&amp;L){\n    sort(L.begin(),L.end());\n    int head=0,tail=0,cnt=0;\n    int n=L.size();\n    for(int i=0;i&lt;n-1;i++){\n        if(sgn(L[i].angle-L[i+1].angle)==0) continue;\n        ls[cnt++]=L[i];\n    }\n    ls[cnt++]=L[n-1];\n    for(int i=0;i&lt;cnt;i++){\n        while(tail-head&gt;1&amp;&amp;onRight(ls[i],hpi[tail-1],hpi[tail-2])) tail--;\n        while(tail-head&gt;1&amp;&amp;onRight(ls[i],hpi[head],hpi[head+1])) head++;\n        hpi[tail++]=ls[i];\n    }\n    while(tail-head&gt;1&amp;&amp;onRight(hpi[head],hpi[tail-1],hpi[tail-2])) tail--;\n    while(tail-head&gt;1&amp;&amp;onRight(hpi[tail-1],hpi[head],hpi[head+1])) head++;\n    L.clear();\n    if(tail-head&lt;3) return;\n    for(int i=head;i&lt;tail;i++){\n        L.pb(hpi[i]);\n        // cout&lt;&lt;hpi[i].s&lt;&lt;\"---&gt;\"&lt;&lt;hpi[i].e&lt;&lt;endl;\n    }\n    // cout&lt;&lt;L.size()&lt;&lt;hvie;\n}\n\ndb Section(const Polygon &amp;P){\n    db ans=0;\n    int n=P.size();\n    for(int i=0;i&lt;n;i++){\n        ans+=cross(P[i],P[(i+1)%n]);\n    }\n    return fabs(ans)/2.0;\n}\n\nvoid input(int &amp;n,Polygon&amp;A){\n    n=yh();\n    db x,y;\n    rep(i,0,n-1){\n        x=yh(),y=yh();\n        A.pb(point(x,y));\n    }\n}\nPolygon Mincowski(const Polygon&amp;a,const Polygon&amp;b){\n    Polygon c,u,v;\n    int n=a.size(),m=b.size();\n    for(int i=0;i&lt;n;i++){\n        u.pb(a[(i+1)%n]-a[i]);\n    }\n    for(int i=0;i&lt;m;i++){\n        v.pb(b[(i+1)%m]-b[i]);\n    }\n    c.pb(a[0]+b[0]);\n    int i=0,j=0;\n    while(i&lt;n&amp;&amp;j&lt;m){\n        if(i&lt;n&amp;&amp;sgn(cross(u[i],v[j]))&gt;=0) c.pb(c.back()+u[i++]);\n        else c.pb(c.back()+v[j++]);\n    }\n    while(i&lt;n) c.pb(c.back()+u[i++]);\n    while(j&lt;m) c.pb(c.back()+v[j++]);\n    return c;\n}\nvoid MakeConvex(Polygon &amp;C){\n    static int st[maxn];\n    int tot=0;\n    sort(C.begin(),C.end(),[&amp;](const point &amp;a,const point&amp;b){return a.y&lt;b.y||(a.y==b.y&amp;&amp;a.x&lt;b.x);});\n    point base=C[0];\n    st[++tot]=0;\n    for(auto &amp;p:C) p=p-base;\n    sort(C.begin()+1,C.end(),[&amp;](const point&amp;a,const point&amp;b){return cross(a,b)&gt;0||(cross(a,b)==0&amp;&amp;dot(a,a)&lt;dot(b,b));});\n    for(int i=1;i&lt;(int)C.size();st[++tot]=i++){\n        while(tot&gt;1&amp;&amp;xmult(C[st[tot]],C[i],C[st[tot-1]])&lt;=0){\n            tot--;\n        }\n    }\n    for(int i=0;i&lt;tot;i++){\n        C[i]=C[st[i+1]]+base;\n    }\n    C.resize(tot);\n}\nint n,m,K;\nPolygon A,B,C;\npoint va,vb;\n\nbool in(point p){\n    rep(i,0,K-1){\n        if(sgn(xmult(C[i],C[(i+1)%K],p))&lt;0) return 0;\n    }\n    return 1;\n}\nbool check(line l){\n    rep(i,0,K-1){\n        if(segcrossseg(l,line(C[(i+1)%K],C[i]))) return true;\n    }\n    return false;\n}\n\nsigned main(){\n    input(n,A);\n    input(m,B);\n    MakeConvex(A);\n    rep(i,0,m-1) B[i]=B[i]*(-1);\n    MakeConvex(B);\n    C=Mincowski(A,B);\n    MakeConvex(C);\n    K=C.size();\n    va.x=yh(),va.y=yh();\n    vb.x=yh(),vb.y=yh();\n    vb=vb-va;\n    if(in(point(0,0))){\n        cout&lt;&lt;\"0\\n\";return 0;\n    }\n    if(!check(line(point(0,0),vb*2e9))){\n        cout&lt;&lt;\"-1\\n\";return 0;\n    }\n    db l=0,r=2e9;\n    rep(_,1,66){\n        db mid=(l+r)/2.0;\n        if(check(line(point(0,0),vb*mid))){\n            r=mid;\n        }\n        else l=mid;\n    }\n    cout&lt;&lt;fixed&lt;&lt;setprecision(10)&lt;&lt;l&lt;&lt;hvie;\n    return 0;\n}\n</code></pre>"},{"location":"contests/nowcoder2022-6/","title":"2022\u725b\u5ba2\u591a\u6821(6)","text":"<p>C. Forest</p> <p>\u6c42\u4e00\u4e2a\u56fe\u6240\u6709\u7684\u751f\u6210\u5b50\u56fe\u7684\u751f\u6210\u68ee\u6797\u7684\u6743\u503c\u7684\u548c\u3002\\(n\\le 16\\)</p> <p>\u5148\u5c06\u8fb9\u6309\u6743\u503c\u6392\u5e8f\uff0c\u8003\u8651\u6bcf\u4e00\u6761\u8fb9\u8ba1\u5165\u7b54\u6848\u7684\u65b9\u6848\u6570\uff0c\u5373\u90a3\u4e9b\u7f16\u53f7\u5c0f\u4e8e\u4ed6\u7684\u8fb9\u52a0\u5165\u540e\u4ed6\u7684\u4e24\u4e2a\u7aef\u70b9\u8fd8\u6ca1\u6709\u8fde\u901a\u7684\u65b9\u6848\u6570\u3002\u4e00\u4e2a\u6734\u7d20\u7684\u505a\u6cd5\u662f\u679a\u4e3e\u5305\u542bu\u548cv\u7684\u96c6\u5408S\uff0c\u5e76\u679a\u4e3e\u5b50\u96c6\u4f7f\u5f97\u5305\u542bu\u4f46\u4e0d\u5305\u542bv\u3002\u7136\u540e\u7b97\u51fa\u4f7f\u5f97\u8fd9\u4e24\u4e2a\u5206\u522b\u8fde\u901a\u7684\u65b9\u6848\u6570\uff0c\u5e76\u4e58\u4e0a\u968f\u4fbf\u9009\u90a3\u4e9b\u8fd8\u6ca1\u8003\u8651\u5230\u7684\u8fb9\uff0c\u548c\u4e0d\u5305\u542b\u5728S\u5185\u7684\u8fb9\u7684\u65b9\u6848\u6570\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u662f3^n\u7684\u3002</p> <p>\u7136\u540e\u8003\u8651\u5229\u7528\u96c6\u5408\u5e42\u7ea7\u6570\u4f18\u5316\u3002\u96c6\u5408\u5e42\u7ea7\u6570\u662f\u5f62\u5982\\(\\sum_{s\\subseteq U} f(s)x^s\\)\u7684\u73a9\u610f\uff0c\u6ce8\u610f\u5176\u6307\u6570\u4e3a\u96c6\u5408\u3002\u8003\u8651\u5982\u4f55\u5b9a\u4e49\u5b83\u7684\u4e58\u6cd5\uff0c\u5c31\u662f\u8981\u7528\u96c6\u5408\u7684\u8fd0\u7b97\u6765\u5b9a\u4e49\u3002\u8bbe\\(*\\)\u4e3a\u96c6\u5408\u5e42\u7ea7\u6570\u7684\u4e58\u6cd5\uff0c\\(\\cdot\\)\u4e3a\u96c6\u5408\u7684\u8fd0\u7b97\u3002</p> <p>\\(F*G=\\sum_{s\\subseteq U}\\sum_{t\\subseteq U}f(s)g(t)x^{s\\cdot t}\\)\u3002</p> <p>\u5982\u679c\\(\\cdot\\)\u662f\u96c6\u5408\u5e76\u8fd0\u7b97\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u505a\u5982\u4e0b\u8f6c\u6362\uff1a</p> <p>\u4ee4\\(\\hat F=\\sum_{s\\subseteq U}x^s\\sum_{i\\subseteq s}f(i)\\) \u8fd9\u4e2a\u53d8\u6362\u88ab\u79f0\u4e3a\u83ab\u6bd4\u4e4c\u65af\u53d8\u6362\u3002</p> <p>\u90a3\u4e48\\(F*G=\\sum_{s\\subseteq U}x^s\\sum_{i \\subseteq s}f(i)\\sum_{j\\subseteq s}g(j)=\\sum_{s\\subseteq U} x^s[x^s]\\hat F[x^s]\\hat G\\)</p> <p>\u6240\u4ee5\u4e24\u4e2a\u5e42\u7ea7\u6570\u6c42\u4e58\u79ef\u76f8\u5f53\u4e8e\u8fdb\u884c\u83ab\u6bd4\u4e4c\u65af\u53d8\u6362\u8fc7\u540e\u518d\u5bf9\u5404\u4e2a\u96c6\u5408\u6c42\u70b9\u79ef\uff0c\u518d\u9006\u83ab\u6bd4\u4e4c\u65af\u53d8\u6362\u56de\u53bb\u3002</p> <p>\u539f\u9898\u8981\u6c42\u7684\u662f\u5b50\u96c6\u5377\u79ef\u3002</p> <p>\u90a3\u5c31\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u96c6\u5408\u7684\u65f6\u5019\u987a\u4fbf\u8bb0\u5f55popcount\uff0c\u5373\\(F(|S|,S)\\)\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2aFMT\u8fc7\u540e\u7684\u96c6\u5408\uff0c\u76f8\u5f53\u4e8e\u6709\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e86\u539f\u96c6\u5408\u4e2dpopcount\u4e3ai\u7684\u90a3\u4e9b\u70b9\u503c\u548c\uff0c\u5bf9\u4e8e\u96c6\u5408\\(S\\)\u548c\\(T\\)\uff0c\u53ea\u53d6\u96c6\u5408\u5e76\u5377\u79ef\u4e2dpopcount\u4e3a\\(|S|+|T|\\)\u7684\u90a3\u4e9b\u503c\uff0c\u8fd9\u53ef\u4ee5\u770b\u505a\u56fa\u5b9a\\(|S|\\),\\(|T|\\)\u540e\uff08\u5173\u4e8e\u96c6\u5408\u7684\u70b9\u79ef\u610f\u4e49\u4e0b\uff09\uff0c\u8fdb\u884c\u591a\u9879\u5f0f\u5377\u79ef\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff1a\u5982\u679c\u5c06\u96c6\u5408\u5e42\u7ea7\u6570\u4e58\u6cd5\u5b9a\u4e49\u4e3a\u5b50\u96c6\u5377\u79ef\uff0c\u5373FMT\u540e\u5bf9\u6bcf\u4e2a\u96c6\u5408\u8fdb\u884c\u591a\u9879\u5f0f\u5377\u79ef\uff0cIFMT\u540e\u53d6F(|S|,S)\uff0c\u540c\u7406\u4efb\u4f55\u591a\u9879\u5f0f\u51fd\u6570\u4e5f\u662f\u4e00\u6837\u3002</p> <p>\u5bf9\u4e8e\u539f\u9898\uff0c\u9700\u8981\u6c42\u4e00\u4e2a\u4f7f\u5f97\\(S\\)\u8fde\u901a\u7684\u65b9\u6848\u6570\uff0c\\(G(x)=e^F\\)\u5373\u4e3a\u4efb\u610f\u9009\u8fb9\u7684\u65b9\u6848\u6570\uff0c\u800c\\(f^{\\phi}=1\\)\uff0c\\(f(S)=2^{S\u5305\u542b\u7684\u8fb9\u6570}\\)\uff0c\u6240\u4ee5\u9700\u8981\u6c42\u7684\u662fF\u7684ln\uff0c\u7167\u5e38\u8fdb\u884cFMT\uff0c\u8fdb\u884c\u70b9\u79ef\u610f\u4e49\u4e0b\u7684ln(1+x)\uff0c\u8fd9\u91cc\u7531\u4e8e\u9879\u6570\u53ea\u6709popcount\u4e2a\uff0c\u8003\u8651\u66b4\u529b\u6c42\uff1a $$ F'=\\ln'(G+1)=\\frac{G'}{G+1}\\ F'=G'-F'G\\ f_i=g'[i]-\\sum_{j=1}^n f_ig[i] $$ \u8fd9\u6837\u53ef\u4ee5\\(n^2\\)\u6c42\u51fa\u591a\u9879\u5f0fln\u3002</p> <p>\u8fd9\u6837\uff0c\u6bcf\u8003\u8651\u8fdb\u4e00\u6761\u8fb9\uff0c\u90fd\u91cd\u65b0\u7b97\u4e00\u4e0bG\uff0c\u518d\u8fdb\u884cFMT\u540eln\u7684\u64cd\u4f5c\u540e\u53d6F[|S|][S]\uff0c\u5373\u53ef\u5f97\u5230\\(S\\)\u8fde\u901a\u7684\u65b9\u6848\uff0c\u4ece\u800c\u53ea\u9700\u8981\\(2^{\u5df2\u52a0\u5165\u8fb9\u6570}\\)-\u8fd9\u4e2a\u7ed3\u679c\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5,mod=998244353,inv2=(mod+1)/2;\nint add(int x,int y){x+=y;return x&gt;=mod?x-mod:x;}\nint mul(ll x,ll y){return x*y%mod;}\nvoid FMT(int *a,int n){\n    for(int mid=1;mid&lt;n;mid&lt;&lt;=1){\n        for(int R=mid&lt;&lt;1,j=0;j&lt;n;j+=R){\n            for(int k=0;k&lt;mid;k++){\n                a[j+k+mid]=add(a[j+k+mid],a[j+k]);\n            }\n        }\n    }\n}\nvoid IFMT(int *a,int n){\n    for(int mid=1;mid&lt;n;mid&lt;&lt;=1){\n        for(int R=mid&lt;&lt;1,j=0;j&lt;n;j+=R){\n            for(int k=0;k&lt;mid;k++){\n                a[j+k+mid]=add(a[j+k+mid],mod-a[j+k]);\n            }\n        }\n    }\n}\nint inv[maxn];\nint cnte[maxn];\nint n,mask,pop[maxn],G[20][maxn];\nvoid recalc(){\n    memset(G,0,sizeof(G));\n    rep(i,1,mask){\n        G[pop[i]][i]=cnte[i];\n    }\n    rep(i,0,n) FMT(G[i],1&lt;&lt;n);\n    static int a[20],f[20];\n    rep(S,1,mask){\n        rep(i,0,n) a[i]=G[i][S];\n        rep(i,0,n-1){\n            int res=0;\n            for(int j=0;j&lt;i;j++){\n                res=add(res,mul(f[j], a[i-j]));\n            }\n            f[i]=add(mul(a[i+1],i+1),mod-res);\n        }\n        rep(i,1,n){\n            G[i][S]=mul(f[i-1],inv[i]);\n        }\n    }\n    rep(i,0,n) IFMT(G[i],1&lt;&lt;n);\n\n}\nsigned main(){\n    inv[1]=1;\n    rep(i,2,100){\n        inv[i]=mod-mul(mod/i,inv[mod%i]);\n    }\n\n    n=yh(),mask=(1&lt;&lt;n)-1;\n    rep(i,0,mask) pop[i]=pop[i&gt;&gt;1]+(i&amp;1),cnte[i]=1;\n    vector&lt;array&lt;int,3&gt;&gt;v;\n    int pwe=1;\n    rep(i,0,n-1)rep(j,0,n-1){\n        int x=yh();\n        if(x&amp;&amp;i&lt;j){\n            v.pb({x,i,j});\n            pwe=2ll*pwe%mod;\n        }\n    }\n    sort(v.begin(),v.end());\n    int ans=0;\n    for(auto [w,x,y]:v){\n        // cout&lt;&lt;w&lt;&lt;' '&lt;&lt;x&lt;&lt;' '&lt;&lt;y&lt;&lt;endl;\n        pwe=mul(pwe,inv2);\n        recalc();\n        int res=0;\n        rep(S,1,mask)if((S&gt;&gt;x&amp;1)&amp;&amp;(S&gt;&gt;y&amp;1)){\n            res=add(res,mul(G[pop[S]][S],cnte[mask^S]));\n        }\n        res=add(cnte[mask],mod-res);\n        // cout&lt;&lt;res&lt;&lt;endl;\n        ans=add(ans, mul(res, mul(pwe, w)));\n        rep(S,0,mask)if((S&gt;&gt;x&amp;1)&amp;&amp;(S&gt;&gt;y&amp;1)){\n            cnte[S]=mul(cnte[S],2);\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;hvie;\n    return 0;\n}\n</code></pre> <p>F. Hash</p> <p>\u5b9a\u4e49\u4e00\u68f5\u6811\\(T\\)\u7684\u54c8\u5e0c\u503c\\(F(T)\\)\u4e3a:\\(F(T)=\\sum_{i=1}^n\\sum_{j=i+1}^n X^iY^jZ^{\\text{lca}(i,j)}\\) \u5bf9\\(998244353\\)\u53d6\u6a21\u7684\u7ed3\u679c\u3002</p> <p>\u73b0\u5728\u7ed9\u5b9a\\(F(T),X,Y,Z\\)\uff0c\u6784\u9020\u4e00\u68f5\u4e0d\u8d85\u8fc750\u4e2a\u70b9\u7684\u6811\u6ee1\u8db3\u8fd9\u4e2a\u54c8\u5e0c\u503c\uff0c\\(X,Y,Z\\)\u5747\u968f\u673a\u3002</p> <p>\u9996\u5148\u8fd9\u4e2a\u968f\u673a\u5c31\u5f88\u8010\u4eba\u5bfb\u5473\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\\(X^k,Y^k,Z^k\\)\u8fd9\u5806\u4e1c\u897f\u90fd\u662f\u4e0d\u4e00\u6837\u7684\u3002\u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5bf9\\((i,j)\\)\uff0c\u6709\\(n\\)\u4e2a\u53ef\u9009\u7684\\(\\text{lca}\\)\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u70b9\u5bf9\u5728\\(n\\)\u4e2a\u53d6\u503c\u91cc\u9009\u62e9\u4e00\u4e2a\uff0c\u4f7f\u5f97\u54c8\u5e0c\u503c\u7b26\u5408\u6761\u4ef6\u4e14\u80fd\u6784\u9020\u51fa\u8fd9\u6837\u4e00\u68f5\u6811\u3002\u7531\u4e8e\u968f\u673a\u7684\u7279\u6027\uff0c\u8fd9\u6837\u51e0\u4e4e\u4e00\u5b9a\u80fd\u6784\u9020\u51fa\u6765\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\u8fd9\u4e2a\u65b9\u6cd5\u5728\u505a\u80cc\u5305\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4ea7\u751f\u7684\u503c\u8fdc\u8d85\u8fc7\\(998244353\\)\u4e2a\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7f29\u5c0f\u80cc\u5305\u7684\u89c4\u6a21\uff0c\u7528\u66f4\u7b80\u5355\u7684\u6784\u9020\u65b9\u5f0f\u3002</p> <p>\u6211\u4eec\u8003\u8651\u6784\u9020\u4e00\u4e2a\\(n=49\\)\u7684\u6811\uff0c\u4e00\u5f00\u59cb\u6240\u6709\u70b9\u7684\u7236\u4eb2\u90fd\u662f\\(1\\)\u3002\u7136\u540e\u5c06\\(2\\sim 49\\)\u6bcf\\(8\\)\u4e2a\u70b9\u5206\u4e3a\u4e00\u7ec4\uff0c\u6bcf\u7ec4\u4e2d\u9009\u62e9\\(x&lt;y&lt;z\\)\u7684\u4e09\u4e2a\u70b9\uff0c\u5c06\\(y\\)\u548c\\(z\\)\u7684\u7236\u4eb2\u6539\u4e3a\\(x\\)\uff0c\u5176\u4ed6\u70b9\u7684\u7236\u4eb2\u90fd\u4e3a\\(1\\)\uff0c\u8fd9\u6837\u4f1a\u4ea7\u751f\u4e00\u4e2a\u54c8\u5e0c\u503c\u7684\u589e\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\uff0c\u65b9\u6848\u6570\u662f\\(\\binom {8} {3}=56\\)\u7684\uff0c\u90a3\u4e48\u603b\u7684\u53ef\u80fd\u7684\u54c8\u5e0c\u503c\u7684\u589e\u91cf\u5b9e\u9645\u4e0a\u5c31\u662f\\(56^6\\)\u7684\uff0c\u8fd9\u8fdc\u5927\u4e8e\u6a21\u6570\u7684\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u51e0\u4e4e\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u6765\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u91cc\u9009\u53d6\\(x&lt;y&lt;z\\)\u662f\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u5982\u679c\u662f\u6bcf\u7ec4\u4e2d\u4efb\u9009\u4e09\u4e2a\u70b9\u53ef\u4ee5\u8ba9\u70b9\u6570\u7684\u89c4\u6a21\u66f4\u5c0f\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#include &lt;random&gt;\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\n#define int long long\nusing namespace std;\ntypedef pair&lt;int, int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double db;\nint read() {\n    int ret = 0;\n    bool f = 0;\n    char c = getchar();\n\n    while (!isdigit(c)) {\n        if (c == EOF)\n            return -1;\n\n        if (c == '-')\n            f = 1;\n\n        c = getchar();\n    }\n\n    while (isdigit(c))\n        ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c ^ 48), c = getchar();\n\n    return f ? -ret : ret;\n}\n\nconst int N=55,inf=0x3f3f3f3f,mod=998244353;\n\nint X[N],Y[N],Z[N];\nvector&lt;array&lt;int,3&gt;&gt;ord;\n\nint upm(int x){\n    return (x%mod+mod)%mod;\n}\n\nvoid solve() {\n    int fans=read(),n=49;\n    X[0]=Y[0]=Z[0]=1;\n    X[1]=read(),Y[1]=read(),Z[1]=read();\n    for(int i=2;i&lt;N;++i){\n        X[i]=X[i-1]*X[1]%mod;\n        Y[i]=Y[i-1]*Y[1]%mod;\n        Z[i]=Z[i-1]*Z[1]%mod;\n    }\n\n    int now=0;\n    for(int i=1;i&lt;=n;++i){\n        for(int j=i+1;j&lt;=n;++j){\n            now+=X[i]*Y[j]%mod*Z[1]%mod;\n            now%=mod;\n        }\n    }\n\n    vector&lt;pii&gt;vec[6];\n    for(int i=2,c=0;i&lt;=n;i+=8,++c){\n        int id=0;\n        for(auto v:ord){\n            int x=v[0]+i,y=v[1]+i,z=v[2]+i;//change y,z's fa to x\n            int tmp=(X[y]*Y[z]%mod*(Z[x]-Z[1])%mod+X[x]*Y[y]%mod*(Z[x]-Z[1])%mod+X[x]*Y[z]%mod*(Z[x]-Z[1])%mod)%mod;\n            tmp=upm(tmp);\n            vec[c].pb(mkp(tmp,id));\n            ++id;\n        }\n    }\n\n    unordered_map&lt;int,array&lt;int,3&gt;&gt;mp;\n    int cnt=0;\n    for(auto [i,idi]:vec[0]) for(auto [j,idj]:vec[1]) for(auto [k,idk]:vec[2]){\n        mp[(i+j+k)%mod]={idi,idj,idk};\n        ++cnt;\n    }\n    //cout&lt;&lt;cnt&lt;&lt;hvie;\n    for(auto [i,idi]:vec[3]) for(auto [j,idj]:vec[4]) for(auto [k,idk]:vec[5]){\n        int tmp=(i+j+k)%mod,hs=upm(mod-(now+tmp-fans));\n        if(mp.count(hs)){\n            cout&lt;&lt;n&lt;&lt;hvie;\n            auto t=mp[hs];\n            for(int m=0;m&lt;3;++m){\n                for(int p=0;p&lt;8;++p){\n                    if(p!=ord[t[m]][1] &amp;&amp; p!=ord[t[m]][2]){\n                        cout&lt;&lt;\"1 \"&lt;&lt;p+m*8+2&lt;&lt;hvie;\n                    }\n                }\n                cout&lt;&lt;ord[t[m]][0]+m*8+2&lt;&lt;\" \"&lt;&lt;ord[t[m]][1]+m*8+2&lt;&lt;hvie;\n                cout&lt;&lt;ord[t[m]][0]+m*8+2&lt;&lt;\" \"&lt;&lt;ord[t[m]][2]+m*8+2&lt;&lt;hvie;\n            }\n\n            for(int p=0;p&lt;8;++p){\n                if(p!=ord[idi][1] &amp;&amp; p!=ord[idi][2]){\n                    cout&lt;&lt;\"1 \"&lt;&lt;p+26&lt;&lt;hvie;\n                }  \n            }\n            cout&lt;&lt;ord[idi][0]+26&lt;&lt;\" \"&lt;&lt;ord[idi][1]+26&lt;&lt;hvie;\n            cout&lt;&lt;ord[idi][0]+26&lt;&lt;\" \"&lt;&lt;ord[idi][2]+26&lt;&lt;hvie;\n\n            for(int p=0;p&lt;8;++p){\n                if(p!=ord[idj][1] &amp;&amp; p!=ord[idj][2]){\n                    cout&lt;&lt;\"1 \"&lt;&lt;p+34&lt;&lt;hvie;\n                }\n            }\n            cout&lt;&lt;ord[idj][0]+34&lt;&lt;\" \"&lt;&lt;ord[idj][1]+34&lt;&lt;hvie;\n            cout&lt;&lt;ord[idj][0]+34&lt;&lt;\" \"&lt;&lt;ord[idj][2]+34&lt;&lt;hvie;\n\n            for(int p=0;p&lt;8;++p){\n                if(p!=ord[idk][1] &amp;&amp; p!=ord[idk][2]){\n                    cout&lt;&lt;\"1 \"&lt;&lt;p+42&lt;&lt;hvie;\n                }\n            }\n            cout&lt;&lt;ord[idk][0]+42&lt;&lt;\" \"&lt;&lt;ord[idk][1]+42&lt;&lt;hvie;\n            cout&lt;&lt;ord[idk][0]+42&lt;&lt;\" \"&lt;&lt;ord[idk][2]+42&lt;&lt;hvie;\n\n            return;\n        }\n    }\n}\n\nvoid init(){\n    for(int i=0;i&lt;8;++i) for(int j=i+1;j&lt;8;++j) for(int k=j+1;k&lt;8;++k){\n        ord.pb({i,j,k});\n    }\n}\n\nsigned main() {\n    init();\n    for (int cas = read(); cas--;) {\n        solve();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"contests/nowcoder2022-7/","title":"2022\u725b\u5ba2\u591a\u6821(7)","text":"<p>E. Ternary Search</p> <p>\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(n\\)\u7684\u5e8f\u5217\uff0c\u95ee\u5bf9\u4e8e\u6bcf\u4e2a\u524d\u7f00\uff0c\u8981\u628a\u8fd9\u4e2a\u524d\u7f00\u53d8\u6210\u5355\u5cf0\u7684\u81f3\u5c11\u9700\u8981\u4ea4\u6362\u76f8\u90bb\u7684\u6570\u591a\u5c11\u6b21\u3002\u4fdd\u8bc1\u6240\u6709\u6570\u90fd\u4e92\u4e0d\u76f8\u540c\u3002</p> <p>\\(n\\leq 2\\times 10^5,1\\leq a_i\\leq 10^9\\)</p> <p>\u8fd9\u9898\u7684\u5355\u5cf0\uff0c\u4e0a\u51f8\u548c\u4e0b\u51f8\u662f\u672c\u8d28\u76f8\u540c\u7684\uff0c\u6211\u4eec\u53ea\u8003\u8651\u4e0a\u51f8\u7684\u60c5\u51b5\u3002</p> <p>\u9996\u5148\u8003\u8651\u53ea\u6c42\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u600e\u4e48\u505a\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u786e\u5b9a\u8fd9\u4e2a\u5cf0\u7684\u4f4d\u7f6e\uff0c\u540e\u9762\u7684\u8ba1\u7b97\u4f1a\u6bd4\u8f83\u56f0\u96be\uff0c\u56e0\u6b64\u8981\u6362\u4e00\u4e2a\u89d2\u5ea6\u3002\u4e00\u4e2a\u89c2\u5bdf\u662f\uff0c\u5bf9\u4e8e\u6700\u5c0f\u7684\u6570\u5b57\uff0c\u53ef\u4ee5\u653e\u5230\u6700\u5de6\u6216\u6700\u53f3\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u5b50\u95ee\u9898\uff0c\u4e0e\u8fd9\u4e2a\u6700\u5c0f\u503c\u662f\u65e0\u5173\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4ece\u5c0f\u5f80\u5927\u505a\uff0c\u6bcf\u6b21\u8d2a\u5fc3\u5730\u9009\u62e9\u653e\u5230\u5de6\u7aef\u6216\u53f3\u7aef\u5373\u53ef\u3002</p> <p>\u73b0\u5728\u8003\u8651\u539f\u95ee\u9898\u600e\u4e48\u505a\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u4e2a\u6570\\(a_x\\)\u5f80\u5de6\u7aef\u653e\u7684\u7b54\u6848\u662f\u4e00\u5b9a\u7684\uff0c\u4e5f\u5373\u5b83\u5de6\u4fa7\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u8bb0\u4f5c\\(L\\)\u3002\u4f46\u662f\u5f80\u53f3\u653e\u7684\u7b54\u6848\\(R\\)\uff0c\u5373\u53f3\u4fa7\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u53d6\u51b3\u4e8e\u5f53\u524d\u8003\u8651\u7684\u53f3\u7aef\u70b9\u3002\u7531\u4e8e\u8fd9\u4e2a\u53f3\u4fa7\u7684\u8d21\u732e\\(R\\)\u662f\u9636\u68af\u72b6\u7684\uff0c\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u7ef4\u62a4\uff0c\u9700\u8981\u53cd\u8fc7\u6765\u8003\u8651\u3002\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\\(p\\)\uff0c\u5b83\u4f1a\u4f7f\u5b83\u5de6\u4fa7\u6240\u6709\u503c\u5c0f\u4e8e\\(a_p\\)\u7684\\(R\\)\u90fd\u52a0\u4e00\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4f1a\u4f7f\u524d\u7f00\u4e2d\\(L&gt;R\\)\u4e14\\(a_i &lt; a_p\\)\u7684\u6240\u6709\u4f4d\u7f6e\u8d21\u732e\\(+1\\)\uff0c\u6211\u4eec\u5c31\u662f\u8981\u5feb\u901f\u7ef4\u62a4\u51fa\u8d21\u732e\u52a0\u4e86\u591a\u5c11\uff08\u540c\u65f6\u4e0d\u96be\u53d1\u73b0\u521a\u52a0\u8fdb\u6765\\(R=0\\)\uff0c\u56e0\u6b64\u8d21\u732e\u4e00\u5b9a\u662f\\(0\\)\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\\(L-R\\)\u7684\u503c\uff0c\u5f53\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\u53d8\u4e3a\u4e86\\(0\\)\uff0c\u8bf4\u660e\u4e0d\u518d\u4f1a\u5f80\u53f3\u79fb\u52a8\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u6570\u4ece\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u5220\u6389\u3002\u7136\u540e\uff0c\u6240\u6709\u6709\u503c\u7684\u4f4d\u7f6e\u4f1a\u4f7f\u5f97\u8d21\u732e\\(+1\\)\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8003\u8651\u5230\\(p\\)\u8fd9\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\\([1,a_p-1]\\)\u6bcf\u4e2a\u6709\u503c\u7684\u4f4d\u7f6e\u4f1a\u8d21\u732e\\(1\\)\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u4e0a\\(a_p\\)\u8fd9\u4e2a\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\\(L\\)\uff0c\\([1,a_p-1]-=1\\)\uff0c\u5982\u679c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\u53d8\u4e3a\u4e86\\(0\\)\uff0c\u6211\u4eec\u5c31\u5c06\u5b83\u53d6\u51fa\uff0c\u8868\u793a\u4e0d\u518d\u4f1a\u9009\u62e9\u5f80\u53f3\u79fb\u52a8\u4e86\u3002</p> <p>\u5199\u7684\u65f6\u5019\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6240\u6709\u6709\u8d21\u732e\u7684\u4f4d\u7f6e\uff0c\u53d8\u4e3a\u6811\u72b6\u6570\u7ec4\u4e0a\u7684\u533a\u95f4\u6c42\u548c\u3002\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u53ef\u4ee5\u5c06\u6240\u6709\u4f4d\u7f6e\u7684\u521d\u59cb\u503c\u8bbe\u7f6e\u4e3a\\(inf\\)\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u3002\u6bcf\u6b21\u64cd\u4f5c\u65f6\u5c31\u662fcover\u4e00\u4e2a\\(L\\)\uff0c\u533a\u95f4\\(-1\\)\uff0c\u8fd9\u4e00\u4e2a\u503c\u53d8\u4e3a\\(0\\)\u4ee5\u540e\u53ef\u4ee5\u5c06\u5b83\u91cd\u65b0\u8bbe\u7f6e\u4e3a\\(inf\\)\uff0c\u7531\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u53ea\u4f1a\u53d8\u4e3a\\(0\\)\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#include &lt;random&gt;\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int, int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double db;\nint read() {\n    int ret = 0;\n    bool f = 0;\n    char c = getchar();\n\n    while (!isdigit(c)) {\n        if (c == EOF)\n            return -1;\n\n        if (c == '-')\n            f = 1;\n\n        c = getchar();\n    }\n\n    while (isdigit(c))\n        ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c ^ 48), c = getchar();\n\n    return f ? -ret : ret;\n}\n\nconst int N = 2e5 + 10,M=N&lt;&lt;2,inf = 0x3f3f3f3f, mod = 998244353;\n\nvector&lt;int&gt;vec;\n\nstruct Segment{\n    #define ls (x&lt;&lt;1)\n    #define rs (x&lt;&lt;1|1)\n    #define mid ((l+r)&gt;&gt;1)\n    int tag[M],mn[M];\n    void build(int x,int l,int r){\n        tag[x]=0;mn[x]=inf;\n        if(l==r) return;\n        build(ls,l,mid);\n        build(rs,mid+1,r);\n    }\n    void pushup(int x){\n        mn[x]=min(mn[ls],mn[rs]);\n    }\n    void pushdown(int x){\n        int &amp;t=tag[x];\n        if(!t) return;\n        tag[ls]+=t;tag[rs]+=t;mn[ls]+=t;mn[rs]+=t;\n        t=0;\n    }\n    void cover(int x,int l,int r,int p,int v){\n        if(l==r){\n            mn[x]=v;\n            return;\n        }\n        pushdown(x);\n        if(p&lt;=mid) cover(ls,l,mid,p,v);\n        else cover(rs,mid+1,r,p,v);\n        pushup(x);\n    }\n    void update(int x,int l,int r,int L,int R,int v){\n        if(L&gt;R) return;\n        if(L&lt;=l &amp;&amp; r&lt;=R){\n            mn[x]+=v;tag[x]+=v;\n            return;\n        }\n        pushdown(x);\n        if(L&lt;=mid) update(ls,l,mid,L,R,v);\n        if(R&gt;mid) update(rs,mid+1,r,L,R,v);\n        pushup(x);\n    }\n    void query(int x,int l,int r){\n        if(mn[x]&gt;0) return;\n        if(l==r){\n            vec.pb(l);mn[x]=inf;\n            return;\n        }\n        pushdown(x);\n        query(ls,l,mid);\n        query(rs,mid+1,r);\n        pushup(x);\n    }\n    #undef ls\n    #undef rs\n    #undef mid\n}T;\n\nstruct BIT{\n    int lim;\n    vector&lt;int&gt;c;\n    void clear(int n){\n        c.resize(n+5);\n        fill(c.begin(),c.end(),0);\n        lim=n+1;\n    }\n    int lowbit(int x){\n        return x&amp;(-x);\n    }\n    void update(int x,int v){\n        for(;x&lt;lim;x+=lowbit(x)) c[x]+=v;\n    }\n    int query(int x){\n        int ret=0;\n        for(;x;x-=lowbit(x)) ret+=c[x];\n        return ret;\n    }\n    int query(int l,int r){\n        if(l&gt;r) return 0;\n        return query(r)-query(l-1);\n    }\n}bit0,bit1;\n\n\nint n;\nint a[N],b[N];\nll fans[N],ans;\n\nvoid solve() {\n    n=read();\n    for(int i=1;i&lt;=n;++i) a[i]=read(),b[i]=a[i];\n    sort(b+1,b+n+1);\n    for(int i=1;i&lt;=n;++i) a[i]=lower_bound(b+1,b+n+1,a[i])-b;\n    //for(int i=1;i&lt;=n;++i) cout&lt;&lt;a[i]&lt;&lt;\" \";cout&lt;&lt;hvie;\n\n    memset(fans,0x3f,sizeof(fans));\n\n    bit0.clear(n);\n    bit1.clear(n);\n    T.build(1,1,n);\n    ans=0;\n    for(int i=1;i&lt;=n;++i){\n        //cout&lt;&lt;\"!!\"&lt;&lt;i&lt;&lt;hvie;\n        ans+=bit0.query(a[i]-1);\n        fans[i]=min(fans[i],ans);\n\n        bit0.update(a[i],1);\n        bit1.update(a[i],1);\n\n        T.update(1,1,n,1,a[i]-1,-1);\n        T.cover(1,1,n,a[i],bit1.query(a[i]+1,n));\n\n        vec.clear();\n        T.query(1,1,n);\n        for(auto v:vec) bit0.update(v,-1);\n\n        //cout&lt;&lt;\"!!\"&lt;&lt;i&lt;&lt;hvie;\n    }\n\n    bit0.clear(n);\n    bit1.clear(n);\n    T.build(1,1,n);\n    ans=0;\n    for(int i=1;i&lt;=n;++i){\n        a[i]=n-a[i]+1;\n        ans+=bit0.query(a[i]-1);\n        fans[i]=min(fans[i],ans);\n\n        bit0.update(a[i],1);\n        bit1.update(a[i],1);\n\n        T.update(1,1,n,1,a[i]-1,-1);\n        T.cover(1,1,n,a[i],bit1.query(a[i]+1,n));\n\n        vec.clear();\n        T.query(1,1,n);\n        for(auto v:vec) bit0.update(v,-1);\n\n        //cout&lt;&lt;\"!!\"&lt;&lt;i&lt;&lt;hvie;\n    }\n\n    for(int i=1;i&lt;=n;++i) printf(\"%lld\\n\",fans[i]);\n    puts(\"\");\n}\n\nsigned main() {\n    for (int cas = 1; cas--;) {\n        solve();\n    }\n\n    return 0;\n}\n</code></pre> <p>K.Great Party</p> <p>\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(n\\)\u7684\u5e8f\u5217\\(a_i\\)\uff0c\u8868\u793a\u7b2c\\(i\\)\u5806\u6709\\(a_i\\)\u4e2a\u77f3\u5b50\u3002\\(Q\\)\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\\([l,r]\\)\u7684\u6240\u6709\u5b50\u533a\u95f4\u8fdb\u884c\u535a\u5f08\u6709\u591a\u5c11\u4e2a\u5148\u624b\u5fc5\u80dc\u3002</p> <p>\u535a\u5f08\u7684\u5185\u5bb9\u662f\uff0c\u6bcf\u6b21\u5148\u4ece\u4e00\u5806\u77f3\u5b50\u4e2d\u62ff\u4efb\u610f\u6570\u91cf\uff0c\u7136\u540e\u53ef\u4ee5\u9009\u62e9\u5c06\u8fd9\u5806\u77f3\u5b50\u5408\u5e76\u5230\u4efb\u610f\u4e00\u5806\u4e0a\uff0c\u4e0d\u80fd\u53d6\u77f3\u5b50\u7684\u4eba\u8f93\u3002</p> <p>\\(n,Q\\leq 10^5, 1\\leq a_i\\leq 10^6\\)</p> <p>\u5982\u679c\u6ca1\u6709\u5408\u5e76\u5c31\u662f\u4e2a\u6734\u7d20\u7684nim\u6e38\u620f\uff0c\u53ef\u4ee5\u5f80\u8fd9\u4e0a\u9762\u53bb\u60f3\u3002\u9996\u5148\u4e00\u5806\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u5148\u624b\u80dc\uff0c\u4e24\u5806\u7684\u65f6\u5019\uff0c\u60f3\u8d62\u8981\u4fdd\u8bc1\u81ea\u5df1\u62ff\u5b8c\u8fd8\u662f\u4e24\u5806\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e00\u5806\u6709\u4e00\u4e2a\u77f3\u5b50\u4e0d\u80fd\u62ff\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\\(a_i-1\\)\u7684nim\u6e38\u620f\u3002\u4e09\u5806\u7684\u65f6\u5019\uff0c\u6211\u4e00\u5b9a\u53ef\u4ee5\u64cd\u4f5c\u6700\u5927\u7684\u90a3\u5806\uff0c\u7136\u540e\u9009\u62e9\u5408\u5e76\uff0c\u4f7f\u5f97\u5269\u4e0b\u4e24\u5806\u77f3\u5b50\u6570\u91cf\u76f8\u540c\uff0c\u56e0\u6b64\u4e09\u5806\u662f\u5148\u624b\u5fc5\u80dc\u3002</p> <p>\u8fd9\u6837\u4f9d\u6b64\u7c7b\u63a8\uff0c\u53ef\u4ee5\u53d1\u73b0\u5947\u6570\u5806\u65f6\u5148\u624b\u5fc5\u80dc\uff0c\u5076\u6570\u65f6\u4e0d\u80fd\u6539\u53d8\u5806\u6570\uff0c\u662f\u4e2a\\(a_i-1\\)\u7684nim\u6e38\u620f\u3002\u95ee\u9898\u8f6c\u5316\u4e3a\u6709\u591a\u5c11\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u5b50\u533a\u95f4\u7684\u5f02\u6216\u548c\u4e3a\\(0\\)\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u83ab\u961f\u95ee\u9898\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\sqrt n)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int M = 1e5 + 5;\nconst int N = 2e6 + 5;\n\nint a[M], s[M],n, q, k, blo[M], bloSZ;\nll answer, ans[M];\nstruct query {\n    int l, r, id;\n} queries[M];\n\nbool cmp(const query &amp;x, const query &amp;y) {\n    return (blo[x.l] ^ blo[y.l]) ? blo[x.l] &lt; blo[y.l] : ((blo[x.l] &amp; 1) ? x.r &lt; y.r : x.r &gt; y.r);\n}\n\nvoid divide() {\n    bloSZ = sqrt(n);\n\n    for (int i = 1; i &lt;= n; ++i) {\n        blo[i] = (i - 1) / bloSZ + 1;\n    }\n}\n\nll cnt[2][N];\n\nvoid add(int pos) {\n    answer += cnt[pos&amp;1][s[pos] ^ k];\n    cnt[pos&amp;1][s[pos]]++;\n}\n\nvoid del(int pos) {\n    cnt[pos&amp;1][s[pos]]--;\n    answer -= cnt[pos&amp;1][s[pos] ^ k];\n}\n\nvoid Mo() {\n    sort(queries + 1, queries + 1 + q, cmp);\n    int l = 0, r = -1;\n\n    for (int i = 1; i &lt;= q; ++i) {\n        while (l &gt; queries[i].l)\n            add(--l);\n\n        while (r &lt; queries[i].r)\n            add(++r);\n\n        while (l &lt; queries[i].l)\n            del(l++);\n\n        while (r &gt; queries[i].r)\n            del(r--);\n\n        ans[queries[i].id] = answer;\n    }\n}\n\nint l[M], r[M];\n\nint main() {\n    cin.tie(NULL)-&gt;ios_base::sync_with_stdio(false);\n    cin &gt;&gt; n &gt;&gt; q;\n\n    for (int i = 1; i &lt;= n; ++i) {\n        cin &gt;&gt; a[i];\n        s[i] = s[i - 1] ^ (a[i]-1);\n    }\n\n    divide();\n\n    for (int i = 1; i &lt;= q; ++i) {\n        cin &gt;&gt; l[i] &gt;&gt; r[i];\n        queries[i] = (query) {\n            l[i] - 1, r[i], i\n        };\n    }\n\n    Mo();\n\n    for (int i = 1; i &lt;= q; ++i) {\n        printf(\"%lld\\n\", 1ll * (r[i] - l[i] + 1) * (r[i] - l[i] + 2) / 2 - ans[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"contests/whu-2022-fresh/","title":"2022 \u6b66\u6c49\u5927\u5b66\u65b0\u751f\u8d5b","text":"<p>I \u5f02\u5ea6\u4e4b\u5203</p> <p>\u957f\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\)\uff0c\u6709 \\(m\\) \u7ec4\u8be2\u95ee\u3002\u6bcf\u6b21\u67e5\u8be2\u533a\u95f4 \\([l,r]\\) \u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u300c\u672c\u8d28\u4e0d\u540c\u300d\u7684\u300c\u8fde\u7eed\u4e0a\u5347\u300d\u7684\u5b50\u4e32\u3002</p> <p>\\(n,m\\leq 10^6\\)</p> <p>\u6ce8\u610f\u5230\u591a\u7ec4\u67e5\u8be2\u4e14\u65e0\u4fee\u6539\uff0c\u8003\u8651\u5c06\u67e5\u8be2\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u540e\uff0c\u79bb\u7ebf\u64cd\u4f5c\u3002</p> <p>\u7531\u4e8e\u53f3\u7aef\u70b9\u4e0d\u65ad\u5411\u53f3\u79fb\u52a8\uff0c\u56e0\u6b64\u5bf9\u4e8e\u672c\u8d28\u76f8\u540c\u7684\u5b50\u4e32\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u5b58\u6700\u53f3\u4fa7\u7684\u5373\u53ef\u3002</p> <p>\u8bb0 \\(f[i]\\) \u4e3a\u5de6\u7aef\u70b9\u4e3a \\(i\\) \u7684\u8fde\u7eed\u4e0a\u5347\u7684\u5b50\u4e32\u4e2a\u6570\uff08\u672c\u8d28\u76f8\u540c\u7684\u5b50\u4e32\u53ea\u5728\u6700\u53f3\u4fa7\u7684\u5de6\u7aef\u70b9\u5904\u88ab\u7edf\u8ba1\uff09\uff0c\u5219\u6bcf\u6b21\u67e5\u8be2\u7684\u7b54\u6848\u4e3a \\(\\sum\\limits_{i=l}^{r}{f[i]}\\)\u3002</p> <p>\u79fb\u52a8\u53f3\u7aef\u70b9 \\(r\\)\uff0c\u8bb0 \\([l,r]\\) \u662f\u4ee5 \\(r\\) \u4e3a\u53f3\u7aef\u70b9\u4e14\u6700\u957f\u7684\u300c\u8fde\u7eed\u4e0a\u5347\u300d\u5b50\u4e32\uff0c\u5219\u7531\u4e8e \\(r\\) \u7684\u52a0\u5165\uff0c\u533a\u95f4 \\(f[l\\sim r]\\) \u90fd\u589e\u52a0 \\(1\\)\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u6d88\u9664\u5de6\u4fa7\u300c\u672c\u8d28\u76f8\u540c\u300d\u7684\u5b50\u4e32\u7684\u5f71\u54cd\uff0c\u663e\u7136\u8fd9\u4e9b\u300c\u672c\u8d28\u76f8\u540c\u300d\u7684\u5b50\u4e32\u7684\u672b\u5c3e\u5143\u7d20\u4e0e \\(a[r]\\) \u76f8\u540c\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u503c\u5f00\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u8bb0\u5f55\u4e09\u4e2a\u503c\uff1a</p> <ul> <li>\u5b83\u7684\u4f4d\u7f6e \\(rp\\)</li> <li>\u4ee5 \\(rp\\) \u4e3a\u53f3\u7aef\u70b9\u7684\u6700\u957f\u300c\u8fde\u7eed\u4e0a\u5347\u300d\u5b50\u4e32\u7684\u5de6\u7aef\u70b9 \\(la\\)</li> <li>\u5f53\u524d\u300c\u8fde\u7eed\u4e0a\u5347\u300d\u5b50\u4e32\u7684\u53f3\u7aef\u70b9 \\(ra\\)</li> </ul> <p>\u6ce8\u610f\u5230 \\([la,rp]\\) \u662f\u6700\u957f\u300c\u8fde\u7eed\u300d\u4e0a\u5347\u5b50\u4e32\uff0c\u800c \\([la,r]\\) \u662f\u5b83\u7684\u4e00\u4e2a\u524d\u7f00\u3002</p> <p>\u6808\u662f\u5355\u8c03\u7684\uff0c\u81ea\u5e95\u5411\u4e0a \\(rp-la+1\\) \uff08\u5373\u6700\u5927\u5b50\u4e32\u957f\u5ea6\uff09\u4f9d\u6b21\u9012\u51cf\u3002</p> <p>\u5355\u8c03\u9012\u51cf\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u5982\u679c\u53f3\u4fa7\u51fa\u73b0\u4e00\u4e2a\u957f\u5ea6\u66f4\u5927\u7684\u300c\u8fde\u7eed\u5b50\u4e32\u300d\uff0c\u5219\u9760\u5de6\u7684\u90a3\u4e9b\u5b50\u4e32\u90fd\u4f1a\u88ab\u5220\u53bb\uff08\u672c\u8d28\u76f8\u540c\u4e14\u66f4\u9760\u5de6\uff09\u3002\u53ea\u6709\u5f53\u66f4\u5de6\u4fa7\u7684\u5b50\u4e32\u957f\u5ea6\u66f4\u5927\u65f6\uff0c\u5b83\u6bd4\u53f3\u4fa7\u5b50\u4e32\u957f\u7684\u90a3\u90e8\u5206\u624d\u4f1a\u88ab\u4fdd\u7559\uff08\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u4fa7\u7684\u90e8\u5206\u88ab\u5220\u9664\uff09\uff0c\u8fd9\u4e5f\u5c31\u662f\u7b2c\u4e09\u4e2a\u53d8\u91cf \\(ra\\) \u7684\u610f\u4e49\u3002</p> <p>\u5bf9\u4e8e\u5f53\u524d\u5b50\u4e32 \\([l,r,r]\\)\uff0c\u5bf9\u4e8e\u5f53\u524d\u6808\u9876 \\([la,ra,rp]\\)\uff0c\u82e5 \\(rp-la\\leq r-l\\) \uff0c\u5219\u5f39\u51fa\u6808\u9876\uff0c\u540c\u65f6 \\(f[la\\sim ra]\\) \u51cf\u4e00\u3002</p> <p>\u5426\u5219\uff0c\u8003\u8651\u5220\u53bb \\([la,ra,rp]\\) \u4e2d\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(r-l+1\\) \u7684\u90e8\u5206\uff0c\u5373 \\([rp-(r-l),rp]\\)\u3002\u4f46\u7531\u4e8e\u5b83\u6b64\u524d\u90e8\u5206\u540e\u7f00\u5df2\u7ecf\u88ab\u5220\u9664\uff0c\u56e0\u6b64\u5b9e\u9645\u662f \\(f[rp-(r-l)\\sim ra]\\) \u51cf\u4e00\uff0c\u5e76\u66f4\u65b0 \\(ra\\) \u4e3a \\(rp-(r-l+1)\\) \u3002</p> <p>\\(ra\\) \u5b9e\u9645\u4e0a\u5c31\u662f\u5f53\u524d\u5b50\u4e32\u4e2d\uff0c\u672a\u88ab\u5220\u9664\u7684\u5b9e\u9645\u53f3\u7aef\u70b9\u3002</p> <p>\u6700\u540e\u5c06 \\([l,r,r]\\) \u63d2\u5165\u6808\u9876\u3002</p> <p>\u533a\u95f4\u52a0\u6cd5\u548c\u6c42\u548c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002</p> <p>\u590d\u6742\u5ea6 \\(O((n+m)\\log{n})\\)\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\ntemplate&lt;typename T&gt;\nstruct SegmentTree {\n    vector&lt;T&gt; sum, tag;\n    void build();\n    void pushUp();\n    void pushDown();\n    void update();\n    T querySum();\n    SegmentTree(int n) {\n        sum.resize(n * 4 + 100, 0);\n        tag.resize(n * 4 + 100, 0);\n    }\n    SegmentTree(int n, vector&lt;T&gt; &amp;a) {\n        sum.resize(n * 4 + 100, 0);\n        tag.resize(n * 4 + 100, 0);\n        build(1, 1, n, a);\n    }\n    void build(int rt, int l, int r, vector&lt;T&gt; &amp;a) {\n        if (l == r) {\n            sum[rt] = a[l];\n            return;\n        }\n\n        int m = (l + r) / 2;\n        build(rt &lt;&lt; 1, l, m, a);\n        build(rt &lt;&lt; 1 | 1, m + 1, r, a);\n\n        pushUp(rt);\n    }\n    void pushUp(int rt) {\n        sum[rt] = sum[rt &lt;&lt; 1] + sum[rt &lt;&lt; 1 | 1];\n    }\n    void pushDown(int rt, int len) {\n        if (tag[rt]) {\n            tag[rt &lt;&lt; 1] += tag[rt];\n            tag[rt &lt;&lt; 1 | 1] += tag[rt];\n            sum[rt &lt;&lt; 1] += tag[rt] * (len - (len &gt;&gt; 1));\n            sum[rt &lt;&lt; 1 | 1] += tag[rt] * (len &gt;&gt; 1);\n            tag[rt] = 0;\n        }\n    }\n    void add(int rt, int l, int r, int a, int b, T x) {\n        if (a &lt;= l &amp;&amp; r &lt;= b) {\n            sum[rt] += x * (r - l + 1);\n            tag[rt] += x;\n            return;\n        }\n\n        pushDown(rt, r - l + 1);\n        int m = (l + r) / 2;\n\n        if (a &lt;= m)\n            add(rt &lt;&lt; 1, l, m, a, b, x);\n\n        if (b &gt; m)\n            add(rt &lt;&lt; 1 | 1, m + 1, r, a, b, x);\n\n        pushUp(rt);\n    }\n\n    T querySum(int rt, int l, int r, int a, int b) {\n        if (a &lt;= l &amp;&amp; r &lt;= b)\n            return sum[rt];\n\n        pushDown(rt, r - l + 1);\n\n        int m = (l + r) / 2;\n        T ret = 0;\n\n        if (a &lt;= m)\n            ret += querySum(rt &lt;&lt; 1, l, m, a, b);\n\n        if (b &gt; m)\n            ret += querySum(rt &lt;&lt; 1 | 1, m + 1, r, a, b);\n\n        return ret;\n    }\n};\n\nstruct Query {\n    int l, r, id;\n    bool operator &lt; (const Query &amp;x) const {\n        return r &lt; x.r;\n    }\n};\n\nint main() {\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    vector&lt;int&gt; a(n + 1);\n\n    for (int i = 1; i &lt;= n; ++i)\n        cin &gt;&gt; a[i];\n\n    vector&lt;Query&gt; qry(m);\n\n    for (int i = 0; i &lt; m; ++i) {\n        cin &gt;&gt; qry[i].l &gt;&gt; qry[i].r;\n        qry[i].id = i;\n    }\n\n    sort(qry.begin(), qry.end());\n\n    vector&lt;long long&gt; ans(m);\n\n    int pre = 1, pos = 0;\n    SegmentTree&lt;long long&gt; seg(n);\n    unordered_map&lt;int, int&gt; id;\n\n    for (auto x : a) {\n        if (!id.count(x))\n            id.insert({x, id.size()});\n    }\n\n    vector&lt;deque&lt;array&lt;int, 3&gt;&gt;&gt; stk(id.size()); // [lpos, rpos, ori_rpos]\n\n    for (int i = 1; i &lt;= n; ++i) {\n        if (i == 1 || a[i] != a[i - 1] + 1)\n            pre = i;\n\n        seg.add(1, 1, n, pre, i, 1);\n        int val = id[a[i]], len = i - pre + 1;\n\n        while (!stk[val].empty() &amp;&amp; stk[val].back()[2] - stk[val].back()[0] + 1 &lt;= len) {\n            auto [l, r, rr] = stk[val].back();\n            stk[val].pop_back();\n            seg.add(1, 1, n, l, r, -1);\n        }\n\n        if (!stk[val].empty()) {\n            auto [l, r, rr] = stk[val].back();\n            stk[val].pop_back();\n            seg.add(1, 1, n, rr - len + 1, r, -1);\n            stk[val].push_back({l, rr - len, rr});\n        }\n\n        stk[val].push_back({pre, i, i});\n\n        while (pos &lt; m &amp;&amp; qry[pos].r == i) {\n            ans[qry[pos].id] = seg.querySum(1, 1, n, qry[pos].l, qry[pos].r);\n            ++pos;\n        }\n    }\n\n    for (auto x : ans)\n        cout &lt;&lt; x &lt;&lt; \"\\n\";\n\n    return 0;\n}\n</code></pre>"},{"location":"vp/cf-gym-102392/","title":"2019-2020 ICPC Southeastern European Regional Programming Contest (SEERC 2019)","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 22, solved 8/11</p> </li> </ul> <p>\u611f\u89c9\u5e76\u4e0d\u662f\u5f88\u96be\uff0c\u4e0d\u8fc7\u8fd8\u662f\u6709\u5999\u5999\u9898\u7684\u3002</p>"},{"location":"vp/cf-gym-102392/#a-max-or-min","title":"A. Max or Min","text":"<p>\u5047\u5982\u6211\u4eec\u8981\u8ba9\u6240\u6709\u6570\u53d8\u4e3a\\(k\\)\uff0c\u9996\u5148\u9700\u8981\u5b58\u5728\\(k\\)\u8fd9\u4e2a\u6570\uff0c\u63a5\u7740\u4e0d\u96be\u53d1\u73b0\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u79cd\u65b9\u6848\u3002\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5176\u5b9e\u53ea\u5173\u5fc3\u4e00\u4e2a\u6570\u548c\\(k\\)\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u4e0d\u59a8\u4ee4\\(a[i]&lt;k\\)\u53d8\u4e3a-1\uff0c\\(a[i]&gt;k\\)\u53d8\u4e3a1\uff0c\\(a[i]=k\\)\u53d8\u4e3a0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u51681\u6216\u8005\u5168-1\u6bb5\uff0c\u9700\u8981\u64cd\u4f5c\u7684\u6b21\u6570\u5c31\u662f\u957f\u5ea6\u6b21\u3002\u5bf9\u4e8e\u4e00\u4e2a1\u548c-1\u4ea4\u9519\u7684\u957f\u5ea6\u4e3a\\(L\\)\u7684\u6bb5\uff0c\u9700\u8981\u5148\u628a\u5176\u4e2d\u5c11\u7684\u4e00\u534a\u53d8\u4e3a\u6700\u5c0f/\u5927\u624d\u80fd\u64cd\u4f5c\uff0c\u5373\\((0,1,-1,1,-1,1)\\rightarrow (0,1,1,1,1,1)\\rightarrow (0,0,0,0,0,0)\\)\u3002\u4e8e\u662f\u989d\u5916\u64cd\u4f5c\\(\\lfloor \\frac {L} 2 \\rfloor\\)\u6b21\u3002\u90a3\u4e48\u603b\u7684\u8d21\u732e\u5c31\u662f\\(cnt_{-1}+cnt_{1}+\\sum_L \\lfloor  \\frac {L} 2 \\rfloor\\)\u3002</p> <p>\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u53d8\u5316\u7684\u8fc7\u7a0b\u5373\u53ef\uff0c\u590d\u6742\u5ea6\\(O(n\\log n)\\)\u3002</p>"},{"location":"vp/cf-gym-102392/#b-level-up","title":"B. Level Up","text":""},{"location":"vp/cf-gym-102392/#c-find-the-array","title":"C. Find the Array","text":"<p>\u8fd9\u4e2a\u9898\u5f88\u597d\u73a9\u554a\uff0c\u9996\u5148\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u5f97\u5230\u4e00\u4e2a\u6781\u503c\u7684\u4f4d\u7f6e\uff08\u5c3d\u7ba1\u4e0d\u77e5\u9053\u5b83\u662f\u591a\u5c11\uff09\uff0c\u4e8e\u662f\u6700\u591a\\(8+1\\)\u6b21\u53ef\u4ee5\u5f97\u5230\u4f4d\u7f6e\u548c\u503c\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5982\u4f55\u901a\u8fc7\u8fd9\u4e2a\u6781\u503c\u83b7\u53d6\u6240\u6709\u4fe1\u606f\u3002\u6b21\u6570\u5f88\u5c11\uff0c\u80af\u5b9a\u8003\u8651\\(O(\\log )\\)\u76f8\u5173\u7684\u505a\u6cd5\uff0c\u500d\u589e\u548c\u4e8c\u5206\u90fd\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u5728\u8fc7\u7a0b\u4e2d\uff0c\u9664\u4e86\u6781\u503c\u5916\u6570\u5e26\u6765\u7684\u4fe1\u606f\uff0c\u7531\u4e8e\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u77e5\u9053\uff0c\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u54ea\u4e9b\u6709\u7528\u3002</p> <p>\u518d\u8bfb\u4e00\u4e0b\u9898\uff0c\u53d1\u73b0\u8fd9\u4e2a\u9898\u53c8\u8981\u6c42\u4f4d\u7f6e\uff0c\u53c8\u8981\u6c42\u503c\uff0c\u90a3\u4e48\u8981\u4e48\u503c\u80fd\u591f\u901a\u8fc7\u5173\u4e8e\u4f4d\u7f6e\u7684\u8be2\u95ee\u5f97\u51fa\uff0c\u8981\u4e48\u4f4d\u7f6e\u80fd\u591f\u901a\u8fc7\u5173\u4e8e\u503c\u7684\u8be2\u95ee\u5f97\u51fa\u3002\u8fd9\u91cc\u8981\\(O(\\log )\\)\uff0c\u800c\u4e14\u7ed9\u51fa\u7684\u56de\u7b54\u662f\u4e00\u5806\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u5173\u4e8e\u4f4d\u7f6e\u505a\u6587\u7ae0\u3002\u4e00\u4e2a\u7ecf\u5178\u7684\u60f3\u6cd5\u662f\u5206\u6cbb\u2014\u2014\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u8fdb\u5236\u5206\u7ec4\u628a\u9664\u6781\u503c\\(pos\\)\u5916\u6240\u6709\u4e0b\u6807\u5206\u7ec4\u3002\u5047\u8bbe\u6709\u96c6\u5408\\(p_j\\)\uff0c\u5206\u522b\u8be2\u95ee\\(p_j\\cup pos\\)\u548c\\(p_j\\)\uff0c\u505a\u5dee\u540e\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6240\u6709\\(p_j\\)\u4e0b\u6807\u4e2d\u5173\u4e8e\u6781\u503c\u7684\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u8fd9\u4e2a\u503c\u662f\u552f\u4e00\u7684\u3002\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u679a\u4e3e\u8fd9\u4e2a\u5dee\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5dee\u503c\u5728\u54ea\u4e9b\u7ec4\u4e2d\u51fa\u73b0\u8fc7\uff0c\u4e5f\u5c31\u77e5\u9053\u5bf9\u5e94\u7684\u4e0b\u6807\u662f\u591a\u5c11\u4e86\u3002\u6700\u540e\u518d\u968f\u4fbf\u8be2\u95ee\u4e00\u4e2a\u5176\u4ed6\u7684\u503c\u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u6700\u5c0f\u503c\u8fd8\u662f\u6700\u5927\u503c\uff0c\u6839\u636e\u5dee\u503c\u5c31\u53ef\u4ee5\u7b97\u51fa\u6765\u539f\u5e8f\u5217\u4e86\u3002</p> <p>\u6b21\u6570\u662f\\(8+1+1+8+8=26\\)\u6b21\u7684\u3002</p>"},{"location":"vp/cf-gym-102392/#d-cycle-string","title":"D. Cycle String?","text":"<p>\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\u53ea\u6709\u4e00\u79cd\u5b57\u6bcd\u663e\u7136No</li> <li>\u6709\u4e09\u79cd\u4ee5\u4e0a\u7684\u5b57\u6bcd\u662fYes</li> <li>\u6709\u4e24\u79cd\u5b57\u6bcd\uff0c\u7279\u5224\\(n&lt;=2\\)\u7684\u60c5\u51b5\uff0c\u7136\u540e\u5982\u679c\u5176\u4e2d\u4e00\u79cd\u51fa\u73b0\u4e0d\u8db33\u4e2a\u4e3aNo\uff0c\u5426\u5219Yes</li> </ul> <p>\u5177\u4f53\u6784\u9020\uff0c\u53ea\u9700\u8981\u7c7b\u4f3c\u653e\\(n\\)\u4e2a\\(a\\)\uff0c\u4e00\u4e2a\\(b\\)\uff0c\u5269\u4e0b\u7684\u6392\u5e8f\u653e\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102392/#e-life-transfer","title":"E. Life Transfer","text":""},{"location":"vp/cf-gym-102392/#f-game-on-a-tree","title":"F. Game on a Tree","text":"<p>\u663e\u7136\u662f\u4e2a\u65e0\u5411\u56fe\u535a\u5f08\uff0c\u5373\u4e00\u4e2a\u70b9\u548c\u5b83\u5b50\u6811\u4e2d\u6240\u6709\u70b9\u8fde\u53cc\u5411\u8fb9\u5f62\u6210\u7684\u56fe\u3002 \u5224\u65ad\u662f\u5426\u6709\u5b8c\u7f8e\u5339\u914d\uff0c\u8bbe\\(f[i]\\)\u8868\u793a\u5b50\u6811\u4e2d\u6700\u5c11\u6709\u591a\u5c11\u4e2a\u70b9\u6ca1\u6709\u5339\u914d\u5230\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102392/#g-projection","title":"G. Projection","text":""},{"location":"vp/cf-gym-102392/#h-tree-permutations","title":"H. Tree Permutations","text":""},{"location":"vp/cf-gym-102392/#i-absolute-game","title":"I. Absolute Game","text":""},{"location":"vp/cf-gym-102392/#j-graph-and-cycles","title":"J. Graph and Cycles","text":"<p>\\(n\\)\u4e3a\u5947\u6570\u662f\u6784\u9020\u7684\u5145\u8981\u6761\u4ef6\uff0c\u56e0\u4e3a\u4e00\u4e2a\u73af\u6bcf\u4e2a\u8282\u70b9\u88ab\u5360\u7528\u7684\u5ea6\u6570\u662f\u5076\u6570\u4e2a\u3002 \u4ece\u5ea6\u6570\u8003\u8651\uff0c\u76f8\u90bb\u7684\u4e24\u6761\u8fb9\u6709\u4e00\u4e2a\u516c\u5171\u7684\u8282\u70b9\uff0c\u7531\u4e8e\u6bcf\u6761\u8fb9\u90fd\u9700\u8981\u7ecf\u8fc7\uff0c\u8fd9\u4e2a\u8282\u70b9\u7684\\(n-1\\)\u4e2a\u8fb9\u4e2d\uff0c\u6070\u597d\u6709\\(\\frac {n-1}{2}\\)\u6761\u8fb9\u6709\u8d21\u732e\uff0c\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8d2a\u5fc3\uff0c\u5373\u628a\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4ee5\u540e\u6bcf\u4e2a\u5076\u4e0b\u6807\u4f4d\u7f6e\u7684\u8fb9\u6743\u6709\u8d21\u732e\u3002</p>"},{"location":"vp/cf-gym-102392/#k-stranded-robot","title":"K. Stranded Robot","text":"<p>\u6700\u5f00\u59cb\u72b6\u6001\u662f\u5b58\u7684(\u4f4d\u7f6e\uff0c\u5149\u7ebf\u65b9\u5411)\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5149\u7ebf\uff0c\u5728\u6bcf\u4e2a\u9762\u90fd\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u65b9\u5757\u4f1a\u88ab\u627e\u5230\uff0c\u7136\u540e\u53ef\u4ee5O(1)\u5224\u65ad\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6bcf\u4e2a\u5149\u7ebf\u65b9\u5411\u662f\u5426\u662f\u5408\u6cd5\u7684\u3002\u7136\u540ebfs\u7684\u65f6\u5019\u679a\u4e3e\u5149\u7ebf\u65b9\u5411\uff0c\u679a\u4e3e\u8be5\u5149\u7ebf\u65b9\u5411\u4e0b\u7684\u79fb\u52a8\u65b9\u5411\u3002\u7136\u540e\u5c31\u5f88\u597dbfs\u3002\u4f46\u662f\u4ed6T\u4e86\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u5176\u5b9e\u8bb0\u5f55\u5149\u7ebf\u65b9\u5411\u662f\u6ca1\u5fc5\u8981\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u4f4d\u7f6e\u5224\u65ad\u3002\u4ed6\u6bcf\u4e00\u6b65\u7684\u90fd\u5fc5\u7136\u662f\u4ece\u201c\u5730\u9762\u201d\u51fa\u53d1\uff08\u5373\u811a\u4e0b\u6709\u65b9\u5757\uff09\uff0c\u7136\u540e\u4e0b\u4e00\u6b65\u4e00\u5b9a\u662f\u4f1a\u5230\u8fbe\u67d0\u4e00\u7ef4\u7684\u6700\u5927\u6216\u6700\u5c0f\u4f4d\u7f6e\u3002\u5c31\u53ef\u4ee5\u76f4\u63a5\u8d70\u4e86\u3002</p> <p>\u7136\u540e\u8bfb\u5165\u7684\u65f6\u5019500^3\u7528getchar\u8bfbT\u4e86\u3002\u4e0d\u77e5\u9053\u4e3a\u5565\u6539\u6210\u4e86\u53d6\u6d88\u540c\u6b65\u7684cin\u5c31\u8fc7\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\n\n\n/* \n(+dx, +dy, )  //\u5782\u76f4\u4e8ez\u8f74\n(+dx, , +dy)  //\u5782\u76f4\u4e8ey\u8f74\n( , +dx, +dy) //\u5782\u76f4\u4e8ex\u8f74\n*/\nstruct T{\n    int x,y,z;\n    T(){}\n    T(int x,int y,int z):x(x),y(y),z(z){}\n    friend T operator+(const T&amp;a, const T&amp;b){\n        return T(a.x+b.x, a.y+b.y, a.z+b.z);\n    }\n    friend ostream&amp; operator&lt;&lt;(ostream&amp;out, const T&amp;a){\n        out&lt;&lt;\"(\"&lt;&lt;a.x&lt;&lt;','&lt;&lt;a.y&lt;&lt;','&lt;&lt;a.z&lt;&lt;\")\";\n        return out;\n    }\n};\n\nint m,n,p;\nbool vis[505][505][505];\nint mixy[505][505], maxy[505][505];\nint miyz[505][505], mayz[505][505];\nint mixz[505][505], maxz[505][505];\nint dx[]={1,-1,0,0};\nint dy[]={0,0,1,-1};\nsigned main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    memset(maxy, 0x3f, sizeof(maxy));\n    memset(mayz, 0x3f, sizeof(maxy));\n    memset(maxz, 0x3f, sizeof(maxy));\n    memset(mixy, -1, sizeof(mixy));\n    memset(miyz, -1, sizeof(mixy));\n    memset(mixz, -1, sizeof(mixy));\n    cin&gt;&gt;m&gt;&gt;n&gt;&gt;p;\n    char s[505];\n    T S,E;\n\n    for(short z=0;z&lt;p;z++)for(short y=0;y&lt;n;y++){\n        cin&gt;&gt;s;\n        for(short x=0;x&lt;m;x++){\n            char c=s[x];\n            if(c=='*'){\n                if(mixy[x][y]==-1) mixy[x][y]=z;\n                maxy[x][y]=z;\n                if(miyz[y][z]==-1) miyz[y][z]=x;\n                mayz[y][z]=x;\n                if(mixz[x][z]==-1) mixz[x][z]=y;\n                maxz[x][z]=y;\n            }\n            else if(s[x]=='R'){\n                S=T(x,y,z);\n            }\n            else if(s[x]=='T'){\n                E=T(x,y,z);\n            }\n        }\n    }\n    queue&lt;T&gt;q;\n    int cnt=1,ans=0;\n    q.push(S);\n    while(!q.empty()){\n        auto[x,y,z]=q.front();\n        if(!cnt){\n            ans++;\n            cnt=q.size();\n        }\n        if(x==E.x&amp;&amp;y==E.y&amp;&amp;z==E.z){\n            cout&lt;&lt;ans&lt;&lt;hvie;\n            return 0;\n        }\n        q.pop();\n        --cnt;\n        if(vis[x][y][z])continue;\n        vis[x][y][z]=1;\n\n        for(short int k=0;k&lt;4;k++){\n            int nx=x+dx[k], ny=y+dy[k], nz=z;\n            if(nx&gt;=0&amp;&amp;ny&gt;=0&amp;&amp;nx&lt;m&amp;&amp;ny&lt;n){\n                if(z==mixy[x][y]-1&amp;&amp;z&lt;mixy[nx][ny]) q.push({nx,ny,mixy[nx][ny]-1});\n                if(z==maxy[x][y]+1&amp;&amp;z&gt;maxy[nx][ny]) q.push({nx,ny,maxy[nx][ny]+1});\n            }\n\n            nz=z+dy[k];\n            if(nx&gt;=0&amp;&amp;nz&gt;=0&amp;&amp;nx&lt;m&amp;&amp;nz&lt;p){\n                if(y==mixz[x][z]-1&amp;&amp;y&lt;mixz[nx][nz]) q.push({nx,mixz[nx][nz]-1,nz});\n                if(y==maxz[x][z]+1&amp;&amp;y&gt;maxz[nx][nz]) q.push({nx,maxz[nx][nz]+1,nz});\n            }\n\n            ny=y+dx[k];\n            if(ny&gt;=0&amp;&amp;nz&gt;=0&amp;&amp;ny&lt;n&amp;&amp;nz&lt;p){\n                if(x==miyz[y][z]-1&amp;&amp;x&lt;miyz[ny][nz]) q.push({miyz[ny][nz]-1,ny,nz});\n                if(x==mayz[y][z]+1&amp;&amp;x&gt;mayz[ny][nz]) q.push({mayz[ny][nz]+1,ny,nz});\n            }\n        }\n\n        if(z&lt;mixy[x][y]) q.push({x,y,mixy[x][y]-1});\n        if(z&gt;maxy[x][y]) q.push({x,y,maxy[x][y]+1});\n\n        if(y&lt;mixz[x][z]) q.push({x,mixz[x][z]-1,z});\n        if(y&gt;maxz[x][z]) q.push({x,maxz[x][z]+1,z});\n\n        if(x&lt;miyz[y][z]) q.push({miyz[y][z]-1,y,z});\n        if(x&gt;mayz[y][z]) q.push({mayz[y][z]+1,y,z});\n\n    }\n    cout&lt;&lt;-1&lt;&lt;hvie;\n    return 0;\n}\n</code></pre>"},{"location":"vp/cf-gym-102439/","title":"2018-2019 9th BSUIR Open Programming Championship. Semifinal","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 35, solved 8/12</p> </li> </ul> <p>\u6bdb\u5b50\u573a\u8fd8\u633a\u597d\u73a9\u7684\u3002</p>"},{"location":"vp/cf-gym-102439/#a-advertisement-matching","title":"A. Advertisement Matching","text":"<p>\u4ece\u540e\u5f80\u524d\u548c\u4ece\u524d\u5f80\u540e\u53ef\u4ee5\u5206\u522b\u63a8\u51fa\u5230\u67d0\u4e2a\u70b9\u5408\u6cd5\u7684\u6700\u5927\u901f\u5ea6v1\u548cv2\uff0c\u53d6min\u540e\u4f7f\u7528\u5c0f\u5b66\u4e8c\u5e74\u7ea7\u5b66\u7684\u516c\u5f0f\u53ef\u4ee5\u8fdb\u884c\u8ba1\u7b97\u3002\u590d\u6742\u5ea6\\(O(n)\\)</p> <p>\u8865\u70b9\u5f0f\u5b50\uff1a</p> <p>\u4ece\u540e\u5f80\u524d\u63a8\uff0c\u8981\u6c42\u4ece\u8fd9\u4e2a\u70b9(\\(f_{i}\\))\u51fa\u53d1\u80fd\u591f\u5230\u8fbe\u4e0b\u4e00\u4e2a\u70b9\u7684\u6700\u5c0f\u901f\u5ea6\\((f_{i+1})\\)\uff0c\u90a3\u4e48\u5c31\u8981\uff1a</p> \\[ f_i^2-2bx\\ge f_{i+1}^2 \\] <p>\u7136\u540e\u6bcf\u76f8\u90bb\u4e24\u4e2a\u70b9\u4e4b\u95f4\uff1a \u82e5\\(f_i\\le f_{i+1}\\), \u5219\u8981\u5148\u52a0\u901f\uff08\u518d\u51cf\u901f\uff0c\u5982\u679c\u4e00\u76f4\u52a0\u901f\u90fd\u5230\u4e0d\u4e86\u53ef\u4ee5\u518d\u5224\u4e0b\uff09\uff0c\u8bbe\u4e2d\u95f4\u6700\u9ad8\u901f\u5ea6\u4e3a\\(v\\)\uff0c\u5219</p> \\[ \\frac{v^2-f_i^2}{2a}+\\frac{v^2-f_{i+1}^2}{2b}=x \\] <p>\u53ef\u4ee5\u89e3\u51fa\u6765\u3002 \u82e5\\(f_i&gt; f_{i+1}\\)\uff0c \u9996\u5148\u80af\u5b9a\u6ee1\u8db3\u4e00\u76f4\u51cf\u901f\u662f\u53ef\u4ee5\u8ba9\u901f\u5ea6\u5728\\(f_{i+1}\\)\u4e4b\u4e0b\u7684\uff0c\u540c\u6837\u8bbe\u90a3\u4e2a\u5f0f\u5b50\uff0c\u53d1\u73b0\u662f\u4e00\u6837\u7684\u3002\u7136\u540e\u6bcf\u6b21\u628a\u65f6\u95f4\u52a0\u4e0a\u52a0\u901f\u548c\u51cf\u901f\u7684\u65f6\u95f4\u5c31\u53ef\u4ee5\u4e86\u3002 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\n\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int N=2e5+10,M=N&lt;&lt;3,mod=1e9+7;\n\nint n,a,b;\ndb v[N],f[N],x[N];\n\nvoid solve(){\n    n=yh(),a=yh(),b=yh();\n    rep(i,1,n) x[i]=yh(),v[i]=yh();\n    f[n]=v[n];\n    dwn(i,n-1,1){\n        db d=x[i+1]-x[i];\n        db val=sqrt(f[i+1]*f[i+1]+2*b*d);\n        f[i]=min(v[i], val);\n    }\n    x[0]=0;\n    db tot=0;\n    db u=0;\n    for(int i=1;i&lt;=n;i++){\n        db d=x[i]-x[i-1];\n        if(u&lt;=f[i]){\n            if(u*u+2*a*d&lt;=f[i]*f[i]){\n                db newu=sqrt(u*u+2*a*d);\n                tot+=(newu-u)/a;\n                u=newu;\n            }\n            else{\n                db K2=(2*a*b*d+b*u*u+a*f[i]*f[i])/(a+b);\n                db K=sqrt(K2);\n                tot+=(K-u)/a+(K-f[i])/b;\n                u=f[i];\n            }\n        }\n        else{\n            assert(f[i]*f[i]+2*b*d+0.1&gt;=u*u);\n            db K2=(2*a*b*d+b*u*u+a*f[i]*f[i])/(a+b);\n            db K=sqrt(K2);\n            tot+=(K-u)/a+(K-f[i])/b;\n            u=f[i];\n        }\n        // cout&lt;&lt;i&lt;&lt;\":\"&lt;&lt;u&lt;&lt;endl;\n    }\n    cout&lt;&lt;fixed&lt;&lt;setprecision(10)&lt;&lt;tot&lt;&lt;hvie;\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n}\n/*\n\n*/\n</code></pre></p>"},{"location":"vp/cf-gym-102439/#b-varvara-and-matrix","title":"B. Varvara and matrix","text":"<p>\u6bcf\u884c\u6bcf\u5217\u6700\u591a\u4e00\u4e2a\u96f6\uff0c\u6240\u4ee5\u9650\u5236\u53ea\u6709\u4e24\u79cd</p> <ul> <li>\u4e0d\u80fd\u4e3a\\(A(B)\\)</li> <li>\u4e0d\u80fd\u540c\u65f6\u4e3a\\(A(B)\\)</li> </ul> <p>\u8fd9\u662f2-SAT\u7684\u5f62\u5f0f\uff0c\u5173\u952e\u5728\u5efa\u56fe\u3002\u7b2c\u4e8c\u79cd\u9650\u5236\u53ef\u4ee5\u7b80\u5355\u679a\u4e3e\u5f97\u5230\uff0c\u7b2c\u4e00\u79cd\u9650\u5236\u662f\u7ecf\u5178\u7684\u5224\u65ad\u662f\u5426\u6709\u77e9\u5f62\u4e09\u4e2a\u89d2\u4e3a\u540c\u4e00\u4e2a\u6570\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u7528bitset\u4f18\u5316\uff0c\u6700\u540e\u590d\u6742\u5ea6\\(O(\\frac {n^3} {\\omega})\\) \u8dd1\u5408\u6cd5\u89e3\u7684\u65f6\u5019\u7f29\u73af\u6309\u62d3\u6251\u5e8f\u5927\u7684\u4f18\u5148\u9009\u62e9\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102439/#c-cockroach-racing","title":"C. Cockroach Racing","text":"<p>\u5f88\u5999\u7684\u9898\uff0c\u76f4\u63a5\u6458jiangly\u7684\u9898\u89e3\uff1a</p> <p>\\(dp[l][r][i][j]\\) \u8868\u793a\u586b\\([l,r)\\)\u7684\u884c\uff0c\\([i,m)\\)\u7684\u5217\uff0c\u5e76\u4e14\u7b2c\\(i\\) \u5217\u7684\u6240\u6709\u6570\u90fd \\(\\ge j\\) \u7684\u65b9\u6848\u6570 (\u603b\u548c)\uff0c\u8f6c\u79fb\u65f6\u679a\u4e3e \\(j\\) \u586b\u5230\u7b2c\u51e0\u884c\uff0c\u5219\u6709</p> \\[dp[l][r][i][j]=\\sum_{l\\leq k\\leq r}dp[l][k][i+1][0]\\cdot dp[k][r][i][j+1]\\] <p>\u603b\u548c\u7684\u8f6c\u79fb\u7c7b\u4f3c\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(10\\cdot n^3m)\\)\u3002</p> <p>\u8fd9\u91cc\u8bbe\u7684\u72b6\u6001\u5c31\u5f88\u5947\u5999\uff0c\u8f6c\u79fb\u4e5f\u60f3\u4e86\u534a\u5929\u662f\u600e\u4e48\u5b8c\u6210\u9898\u76ee\u4e2d\u7684\u9650\u5236\u7684\uff0cvandoor\u70b9\u62e8\u624d\u770b\u5230\u8fd9\u4e2a\u6c42\u548c\u4e2d\\([l,k)\\)\u662f\u4ece\\(i+1\\)\u5217\u8f6c\u79fb\u7684\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u5728\u8fd9\u4e00\u4f4d\u5f3a\u5236\u6bd4\u4e0a\u4e00\u884c\u5927\u5c31\u884c\u3002</p> <p>\u6211\u8bbe\u7684\u662f\\(dp[l][r][c][d]\\)\u8868\u793a\u586b\\([l,r]\\)\u7684\u884c\uff0c\\(a[l][m]\\)\u586bd\uff0c\u5e76\u4e14\\([l,r]\\)\u884c,\\([c,m]\\)\u5217\u6ee1\u8db3\u9012\u589e\u6027\u8d28\u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u8981\u6c42\u4e00\u4e2a\\(s[l][r][c][d]=\\sum_{i\\le d} dp[l][r][c][i]\\)\u7684\u73a9\u610f\u3002</p> <p>\u8f6c\u79fb\u65b9\u5f0f\u662f\u679a\u4e3ek\uff0c\u8ba9\\([l,k]\\)\u90fd\u586b\\(d\\)\uff0c \u7136\u540e\u65b9\u6848\u7684\u8f6c\u79fb\u5c31\u662f\uff1a</p> \\[ s[l][r][c][d]=\\sum_{l\\le k\\le up} s[l][k][c+1][0]\\cdot s[k+1][r][c][d+1] \\] <p>\u8fd9\u4e2aup\uff0c \u5f53\\(c=m\\)\u65f6\u53ea\u80fd\u7b49\u4e8el\uff0c\u5176\u4f59\u60c5\u51b5\u4e0b\u90fd\u662f\\(r\\)\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u7684\u662f\u4e25\u683c\u4e0a\u5347\uff0c\u6700\u540e\u4e00\u5217\u5df2\u7ecf\u6ca1\u6709\u8ba9\u4ed6\u4e25\u683c\u4e0a\u5347\u7684\u4f59\u5730\u4e86\uff0c\u53ea\u80fd\u586b\u4e00\u4e2a\u6570\u3002\u800c\u66f4\u9ad8\u5217\u53ef\u4ee5\u586b\u591a\u4e2a\u76f8\u540c\u7684\uff0c\u662f\u56e0\u4e3a\u80fd\u8ba9\u540e\u9762\u7684\u6ee1\u8db3\u4e25\u683c\u4e0a\u5347\u3002</p> <p>\u548c\u7684\u8f6c\u79fb\u7c7b\u4f3c\uff0c \u8bbe\u4e0b\u9762\u548c\u53f3\u8fb9\u7684\u548c\u548c\u65b9\u6848\u5206\u522b\u662f\\(s_1,c_1,s_2,c_2\\)\u3002\\(s_1\\)\u5b9e\u9645\u4e0a\u662f\\(c_1\\)\u9879\u7684\u4e1c\u897f\u6c42\u548c\uff0c \\(s_2\\)\u4e5f\u4e00\u6837 \u90a3\u4e48\u5408\u5e76\u7684\u7b54\u6848\u4e5f\u662f\u5c31\u662f\\(\\sum_{v_1\\in s_1, v_2\\in s_2}{v_1+v_2+10^{m-c}\\cdot d \\cdot (k-l+1)}\\)=\\(s_1c_2+s_2c_1+c_1c_2\\cdot 10^{m-c}d(k-l+1)\\)\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\nint n,m;\nint dp[55][55][55][11][2];\nint sdp[55][55][55][11][2];\nint pw[55]={1};\nint a[55][55];\nnamespace CALC{\n    constexpr int mod=1e9+7;\n    int add(int x,int y){x+=y;return x&gt;=mod?x-mod:x;}\n    void inc(int&amp;x,int y){x+=y;x&gt;=mod?x-=mod:x;}\n    int sub(int x,int y){x+=mod-y;return x&gt;=mod?x-mod:x;}\n    void dec(int &amp;x,int y){x+=mod-y;x&gt;=mod?x-=mod:x;}\n    int mul(ll x,ll y){return x*y%mod;}\n    int ksm(int x,int p,int c=1){for(;p;p&gt;&gt;=1,x=mul(x,x))if(p&amp;1)c=mul(c,x); return c;}\n};\n\nusing namespace CALC;\n\nint SDP(int,int,int,int,int);\nint DP(int l,int r,int c,int d,int type){\n    // cout&lt;&lt;\"dp :\"&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;' '&lt;&lt;c&lt;&lt;' '&lt;&lt;d&lt;&lt;' '&lt;&lt;type&lt;&lt;endl;\n    if(~dp[l][r][c][d][type]) return dp[l][r][c][d][type];\n    int ans=0;\n    int base=mul(pw[m-c], d), sum=0;\n    int up=(c==m?l:r);\n    for(int k=l;k&lt;=up;k++){\n        sum=add(sum, base);\n        if(~a[k][c]&amp;&amp;a[k][c]!=d) break;\n        if(type==1){// ways\n            ans=add(ans, mul(SDP(l,k,c+1,0,1), SDP(k+1,r,c,d+1,1)));\n        }\n        else{\n            int f1=SDP(l,k,c+1,0,0),   g1=SDP(l,k,c+1,0,1);\n            int f2=SDP(k+1,r,c,d+1,0), g2=SDP(k+1,r,c,d+1,1);\n            int ways=mul(g1, g2);\n            ans=add(ans, add(add(mul(f1,g2), mul(f2, g1)), mul(ways, sum)));\n        }\n    }\n    return dp[l][r][c][d][type]=ans;\n}\nint SDP(int l,int r,int c,int d,int type){//1 \u8868\u793a\u65b9\u6848\u6570\uff0c 0\u8868\u793a\u603b\u548c\n    // cout&lt;&lt;\"sdp :\"&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;' '&lt;&lt;c&lt;&lt;' '&lt;&lt;d&lt;&lt;' '&lt;&lt;type&lt;&lt;endl;\n    if(~sdp[l][r][c][d][type]) return sdp[l][r][c][d][type];\n    if(l&gt;r||c&gt;m) return type;\n    if(d==10) return sdp[l][r][c][d][type]=0;\n    return sdp[l][r][c][d][type]=add(SDP(l,r,c,d+1,type),DP(l,r,c,d,type));\n}\n\n\nsigned main(){\n    for(int i=1;i&lt;=50;i++){\n        pw[i]=mul(pw[i-1],10);\n    }\n    n=yh(),m=yh();\n    memset(dp,-1,sizeof(dp));\n    memset(sdp,-1,sizeof(sdp));\n    char st[55];\n    rep(i,1,n){\n        scanf(\"%s\", st+1);\n        rep(j,1,m){\n            if(st[j]=='?') a[i][j]=-1;\n            else a[i][j]=st[j]-'0';\n        }\n    }\n    cout&lt;&lt;SDP(1,n,1,0,0)&lt;&lt;hvie;\n    return 0;\n}\n</code></pre>"},{"location":"vp/cf-gym-102439/#d-light-show","title":"D. Light show","text":"<p>\u6ca1\u8bfb\u3002</p>"},{"location":"vp/cf-gym-102439/#e-small-business","title":"E. Small business","text":"<p>\u5206\u7c7b\u8ba8\u8bba</p>"},{"location":"vp/cf-gym-102439/#f-prime-or-number","title":"F. Prime or number","text":"<p>\u7b7e\u5230\u9898\uff0c\u5145\u8981\u6761\u4ef6\u662f \\(n-n\\bmod 2\\)\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u6709\u6070\u597d\u4e00\u4e2a\\(1\\)\u3002</p>"},{"location":"vp/cf-gym-102439/#g-sequence-exploration","title":"G. Sequence exploration","text":"<p>\u6253\u8868\u53ef\u4ee5\u53d1\u73b0\u672b\u5c3e1000\u4f4d\u5b58\u5728\u5faa\u73af\u8282\uff0c\u5927\u6982\u4ece40\u5de6\u53f3\u5f00\u59cb\u3002</p>"},{"location":"vp/cf-gym-102439/#h-nonfibonacci-numbers","title":"H. Nonfibonacci numbers","text":"<p>\u4e0d\u542bfib\u7684\u5b50\u5e8f\u5217\u7684\u6570\uff0c\u76f4\u63a5\u505a\u770b\u4e0a\u53bb\u6ca1\u6709\u89c4\u5f8b\uff0c\u53d1\u73b0\u5b9e\u9645\u4e0a\u5c31\u662f\u4e0d\u542b1,2,3,5,8\u7684\u6570\uff0c\u6570\u4f4dDP\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102439/#i-equal-mod-segments","title":"I. Equal Mod Segments","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684\u5de6\u7aef\u70b9\uff0c\\(a_l\\text{ mod }a_{l+1} \\text{ mod } \\cdots \\text{ mod }a_r\\)\u76f8\u7b49\u7684\\(r\\)\u53ea\u6709\\(O(\\log C)\\)\u6bb5\u3002\u6240\u4ee5\u53ef\u4ee5\u7528st\u8868\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u5de6\u7aef\u70b9\u5f80\u53f3\u7684\\(\\log\\)\u6bb5\u548c\u56fa\u5b9a\u53f3\u7aef\u70b9\u5f80\u5de6\u7684\\(\\log\\)\u6bb5\u3002\u8003\u8651\u679a\u4e3e\u7b54\u6848\u7b97\u5bf9\u6570\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4\\([i,j]\\)\u6ee1\u8db3\\(L_i\\leq j \\leq R_i,L_j\\leq i\\leq R_j\\)\uff0c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u626b\u63cf\u7ebf\u89e3\u51b3\u5373\u53ef\u3002\u590d\u6742\u5ea6\\(O(n\\log C\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\n\nstruct tree{\n    int tr[maxn];\n    int n;\n    void add(int x,int val){\n        for(int i=x;i&lt;=n;i+=i&amp;-i){\n            tr[i]+=val;\n        }\n    }\n    int sum(int x){\n        int s=0;\n        for(int i=x;i;i-=i&amp;-i){\n            s+=tr[i];\n        }\n        return s;\n    }\n}fw;\n\nstruct node{int op,l,r,p;};\n\nint n;\nint a[maxn];\nint mn[maxn][17];\nint lg[maxn];\n\nint getmin(int l,int r){\n    if(l&gt;r) return 0x3f3f3f3f;\n    int p=lg[r-l+1];\n    return min(mn[l][p], mn[r-(1&lt;&lt;p)+1][p]);\n}\n\nvector&lt;node&gt;mp[maxn];\n\nsigned main(){\n    n=yh();\n    rep(i,1,n) a[i]=yh(), mn[i][0]=a[i];\n    for(int j=1;j&lt;=16;j++){\n        for(int i=1;i&lt;=n;i++){\n            mn[i][j]=min(mn[i][j-1], mn[i+(1&lt;&lt;(j-1))][j-1]);\n        }\n    }\n    for(int i=2;i&lt;=n;i++) lg[i]=lg[i&gt;&gt;1]+1;\n    rep(i,1,n){\n        int P=i;\n        int now=a[i];\n        for(int l=i,r;l&lt;=n;l=r+1){\n            int ans=l, lp=l;\n            r=n;\n            while(l&lt;=r){\n                int mid=(l+r)&gt;&gt;1;\n                if(getmin(lp+1,mid)&gt;now) ans=mid,l=mid+1;\n                else r=mid-1;\n            }\n            r=ans;\n            mp[now].pb({0, lp, r, P});\n            // cout&lt;&lt;now&lt;&lt;\"(from L): \"&lt;&lt;\"start :\"&lt;&lt;P&lt;&lt;' '&lt;&lt;lp&lt;&lt;' '&lt;&lt;r&lt;&lt;' '&lt;&lt;endl;\n            if(r+1&lt;=n) now%=a[r+1];\n        }\n        now=a[i];\n        for(int r=i,l;r&gt;=1;r=l-1){\n            int ans=r, rp=r;\n            l=1;\n            while(l&lt;=r){\n                int mid=(l+r)&gt;&gt;1;\n                if(getmin(mid, rp-1)&gt;now) ans=mid, r=mid-1;\n                else l=mid+1;\n            }\n            l=ans;\n            mp[now].pb({1, l, rp, P});\n            // cout&lt;&lt;now&lt;&lt;\"(from R): \"&lt;&lt;\"start :\"&lt;&lt;P&lt;&lt;' '&lt;&lt;l&lt;&lt;' '&lt;&lt;rp&lt;&lt;' '&lt;&lt;endl;\n            if(l-1&gt;=1) now%=a[l-1];\n        }\n    }\n    ll ans=0;\n    fw.n=n+1;\n    rep(val,0,maxn-1)if(mp[val].size()){\n        vector&lt;node&gt;act;\n        for(auto [type, l, r, start]: mp[val]){\n            if(type==0){//start from l, do as query, it's sequence corresponds to legal \"R\", the axis of \"query sequence\"\n                act.pb({0, l, r, start});\n            }\n            else{//start from r, do as insertion, it's sequence corresponds to legal \"L\", as the axis of \"time\"\n                act.pb({ 1, 0, start, l});\n                act.pb({-1, 0, start, r+1});\n            }\n        }\n        sort(act.begin(), act.end(), [&amp;](const node&amp;a, const node&amp;b){\n            return a.p==b.p?((bool)a.op&gt;(bool)b.op):(a.p&lt;b.p);\n        });\n        for(auto [op, l, r, p]: act){\n            if(op){\n                fw.add(r, op);\n            }\n            else{\n                ans+=fw.sum(r)-fw.sum(l-1);\n            }\n        }\n        for(auto [op,l,r,p]:act)if(op) fw.add(r, -op);\n    }\n    cout&lt;&lt;ans&lt;&lt;hvie;\n\n    return 0;\n}\n</code></pre>"},{"location":"vp/cf-gym-102439/#j-boedium","title":"J. Boedium","text":"<p>\u597d\u73a9\u7684\u9898\u3002\u6bcf\u4e2a\u4eba\u53ea\u670921\u79cd\u72b6\u6001\uff0c\u5373\u5c04\u4e2d\\(0\\sim 20\\)\u53d1\u5b50\u5f39\uff0c\u8fd9\u4e2a\u6982\u7387\u662f\u53ef\u4ee5\u7b80\u5355\u8ba1\u7b97\u7684\u3002\u8003\u8651\u679a\u4e3e1\u53f7\u547d\u4e2d\u7684\u5b50\u5f39\u6570\uff0c\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e2a\u4eba\u540d\u6b21\u9ad8\u4e8e1\u53f7\u7684\u6982\u7387\uff0c\u8fdb\u800c\u7b97\u51fa\u6070\u597d\u6709\\(k\\)\u4e2a\u4eba\u6bd4ta\u4f18\u7684\u6982\u7387\u3002 \u590d\u6742\u5ea6\\(O(20^2\\cdot n)\\)</p> <p>\u8865\u70b9\u5f0f\u5b50\uff1a</p> <p>\u6bcf\u4e2a\u4eba\u5728\u6bcf\u79cd\u59ff\u52bf\u5c04\u5230\\(0\\dots 10\\)\u9897\u5b50\u5f39\u7684\u6982\u7387\u662f\u4e2a\u4e8c\u9879\u5206\u5e03\uff0c\u80a5\u80a0\u714e\u86cb\u3002 \u7136\u540e\u5728\u4e24\u79cd\u59ff\u52bf\u4e0b\u5c04\u4e2d\\(0\\dots20\\)\u53d1\u5b50\u5f39\u7684\u6982\u7387\u662f\u4e24\u4e2a\u4e1c\u897f\u5377\u8d77\u6765\uff0c\u4e5f\u80a5\u80a0\u714e\u86cb\u3002</p> <p>\u7136\u540e\u679a\u4e3e\u7b2c\u4e00\u4e2a\u4eba\u5c04\u4e2d\u4e86\u591a\u5c11\u53d1\uff0c\u7b97\u4e00\u4e2a\u4eba\u4e25\u683c\u5feb\u4e8e\\(1\\)\u7684\u6982\u7387\u3002\u5c31\u662f\u679a\u4e3e\u4ed6miss\u4e86\u591a\u5c11\u53d1</p> \\[ 60\\cdot miss_1+5\\cdot time_1&gt;60\\cdot miss_i+5\\cdot time_i \\] <p>\u52a0\u8d77\u6765\u5c31\u884c\u3002</p> <p>\u77e5\u9053\u4e86\\(p_i\\)\uff0c\u7136\u540e\u8bbe\\(q_i=1-p_i\\)\uff0c\\(Q=\\prod q_i\\)\u3002</p> <p>\u7136\u540e\u679a\u4e3e\u6709\\([0,1,\\dots 2-\\text{``\u4e00\u5b9a\u6bd4\u4ed6\u5feb\u7684\u4eba\u6570\"}]\\) \u4e2a\u4eba\u5feb\u4e8e\u4ed6\uff0c \u67090\u4e2a\u4eba\u5feb\u4e8e\u4ed6\u7684\u6982\u7387\u5c31\u662f\\(Q\\)\uff0c \u6709\u4e00\u4e2a\u5feb\u4e8e\u4ed6\u7684\u6982\u7387\u5c31\u662f</p> \\[ \\sum_{i} p_i \\cdot \\prod_{j\\ne i}q_i=\\sum_{i} p_i \\frac{Q}{q_i} \\] <p>\u8fd9\u91cc\u7684\u6c42\u548c\u8303\u56f4\u662f\u90a3\u4e9b\u6709\u53ef\u80fd\u6bd4\u4ed6\u6162\u7684\u4eba\uff0c\u4e5f\u5c31\u662f\\(q_i\\ne 0\\)\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u4e5f\u5c31\u662f\u5bf9\\(\\frac{p_i}{q_i}\\)\u6c42\u548c\u3002 \u6709\u4e24\u4e2a\u4eba\u6bd4\u4ed6\u5feb\u7684\u6982\u7387\uff1a</p> \\[ \\sum_{i}\\sum_{j\\ge i+1}p_ip_j\\prod_{k\\ne i,j} q_k=Q\\sum_{i}p_i\\sum_{j\\ge i+1}p_j\\frac{1}{p_ip_j}\\\\=Q\\sum_{i}\\frac{p_i}{q_i}\\sum_{j\\ge i+1}\\frac{p_j}{q_j} \\] <p>\u6c42\u4e2a\u540e\u7f00\u548c\u5c31\u884c\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\n\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int N=2e5+10,M=N&lt;&lt;3,mod=1e9+7;\n\nint n,tms[N];\ndb a[N][11],b[N][11],w[N][21],p[N],q[N],suf[N];\nll binom[105][105];\ndb ksm(db x,int p){\n    db ans=1.0;\n    for(;p;p&gt;&gt;=1,x=x*x) if(p&amp;1) ans=ans*x;\n    return ans;\n}\n\nvoid solve(){\n    n=yh();\n    cout&lt;&lt;fixed&lt;&lt;setprecision(12);\n    rep(i,1,n){\n        db A,B;\n        scanf(\"%lld %lf %lf\", &amp;tms[i], &amp;A, &amp;B);\n        for(int j=0;j&lt;=10;j++){\n            a[i][j]=binom[10][j]*ksm(A, j)*ksm(1.0-A, 10-j);\n\n        }\n        for(int j=0;j&lt;=10;j++){\n            b[i][j]=binom[10][j]*ksm(B, j)*ksm(1.0-B, 10-j);\n\n        }\n        for(int j=0;j&lt;=10;j++)for(int k=0;k&lt;=10;k++){\n            w[i][j+k]+=a[i][j]*b[i][k];\n        }\n    }\n    p[1]=1.0, q[1]=0;\n    db ans=0;\n    for(int k=0;k&lt;=20;k++){//1 miss k times\n        db Q=1.0;\n        vector&lt;db&gt;K;\n        int win=0;\n        for(int i=2;i&lt;=n;i++){\n            db prob=0;\n            for(int j=0;j&lt;=20;j++)if( 5.0*tms[i]+j*60 &lt; 5.0*tms[1]+k*60 ){\n                prob+=w[i][20-j];\n            }\n            p[i]=prob;\n            q[i]=1-prob;\n            if(prob+1e-10&gt;1.0){\n                win++;\n            }\n            else{\n                K.pb(p[i]);\n                Q*=q[i];\n            }\n        }\n        if(win&gt;=3) continue;\n        vector&lt;db&gt;suf(n+2);\n        db tmp=Q;\n        suf[K.size()]=0;\n        for(int i=K.size()-1;i&gt;=0;i--){\n            db p=K[i], q=1-p;\n            suf[i]=suf[i+1]+p/q;\n            if(i&lt;(int)K.size()-1&amp;&amp;win&lt;=0){//2\n                tmp+=Q*p/q*suf[i+1];\n            }\n        }\n        if(win&lt;=1) tmp+=suf[0]*Q;//1\n        ans+=tmp*w[1][20-k];\n    }\n    cout&lt;&lt;ans&lt;&lt;hvie;\n}\n\n\nsigned main(){\n    for(int i=0;i&lt;=50;i++){\n        binom[i][0]=1;\n        // cout&lt;&lt;\"???\\n\";\n        for(int j=1;j&lt;=i;j++) binom[i][j]=binom[i-1][j-1]+binom[i-1][j];//,cout&lt;&lt;binom[i][j]&lt;&lt;\" \\n\"[j==i];\n\n    }\n    for(int cas=1;cas--;){\n        solve();\n    }\n}\n/*\n4\n45 1.000 1.000\n60 0.800 0.800\n90 0.900 0.900\n120 1.000 1.000\n\n*/\n\u00a0\n</code></pre>"},{"location":"vp/cf-gym-102439/#k-innovations","title":"K. Innovations","text":"<p>\u4e00\u773c\u9898\uff0c\u6bcf\u6761\u8fb9\u7684\u8d21\u732e\u6b21\u6570\u5c31\u662f\\(sz\\cdot (n-sz)\\)\uff0c\u6743\u503c\u5f00\u6839\u6700\u591a\\(\\log \\log C\\)\u6b21\u3002\u5f00\u573a\u65e0\u8111\u5199\u4e86\u4e2a\u6811\u5256\u7ebf\u6bb5\u6811\u7ed3\u679cT\u98de\u4e86\uff0c\u5176\u5b9e\u66b4\u529b\u5f80\u4e0a\u8df3\u7236\u4eb2\u4fee\u6539\u5e76\u8ba1\u7b97\uff0c\u540c\u65f6\u5e76\u67e5\u96c6\u5408\u5e76\u8fde\u7eed\u7684\u6743\u503c\u4e3a1\u7684\u8fb9\u5373\u53ef\u3002\u590d\u6742\u5ea6\\(O(n\\log \\log W + m\\alpha(n))\\)</p>"},{"location":"vp/cf-gym-102439/#l-the-only-winner","title":"L. The only winner","text":"<p>\u8003\u8651\u679a\u4e3e\u4e24\u5f20\u724c\u662f\u4ec0\u4e48\uff0c\u6c42\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u65b9\u6848\u6570\u672c\u8d28\u4e0a\u662f\u6c42\u5b8c\u7f8e\u5339\u914d\u7684\u65b9\u6848\u6570\u3002\u7a0d\u5fae\u753b\u4e00\u753b\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u4e24\u5f20\u724c\u7684\u548c\u76f8\u7b49\uff0c\u5b83\u7684\u7b54\u6848\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u8003\u8651\u679a\u4e3e\u548c\uff0c\u6c42\u6bcf\u79cd\u548c\u7684\u65b9\u6848\u6570\u3002\uff08\u4ee5\u4e0b\u6765\u81eajiangly\uff09\u73b0\u5728\u5047\u8bbe\u6c42\u6240\u6709\u5bf9\u90fd\\(\\leq m\\)\u7684\u65b9\u6848\u6570\uff0c\u4ee4\\(l=\\frac m 2\\)\uff0c\u90a3\u4e48\\(l+1\\sim 2n\\)\u7684\u6bcf\u4e2a\u6570\u90fd\u5339\u914d\u4e86\\(1\\sim l\\)\u7684\u67d0\u4e2a\u6570\uff0c\u5269\u4e0b\u7684\u4efb\u610f\u5339\u914d\uff0c\u65b9\u6848\u6570\u4e3a\\(\\frac {(m-2n)^{2n-l}(2l-2n)!}{2^{l-n}(l-n)!}\\)\uff0c\u800c\u6070\u597d\u6709\u4e00\u5bf9\u4e3a\\(m+1\\)\uff0c\u5176\u4f59\\(\\leq m\\)\u7684\u65b9\u6848\u6570\u4e3a\\(\\frac {(2n-m+l)(m-2n)^{2n-l-1}(2l-2n)!}{(l-n)!2^{l-n}}\\)\u3002</p>"},{"location":"vp/cf-gym-102441/","title":"2018-2019 9th BSUIR Open Programming Championship. Final","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 86, solved 5/11</p> </li> </ul> <p>\u8bfb\u9519\u9898\u539f\u5730\u7206\u70b8\uff01</p>"},{"location":"vp/cf-gym-102441/#a-template-for-search","title":"A. Template for Search","text":""},{"location":"vp/cf-gym-102441/#b-redistribution-of-digits","title":"B. Redistribution of Digits","text":""},{"location":"vp/cf-gym-102441/#c-partial-sums","title":"C. Partial Sums","text":""},{"location":"vp/cf-gym-102441/#d-lis-on-circle","title":"D. Lis on Circle","text":"<p>\u8fd9\u9898\u8bfb\u9519\u4e86\uff0c\u4f46\u662f\u8f6c\u5316\u786e\u5b9e\u5f88\u5999\u3002 \u7531\u4e8e\u8981\u6700\u540e\u662f\u4e2a\u4e25\u683c\u5355\u589e\u7684\u5e8f\u5217\uff0c\u53ef\u4ee5\u60f3\u5230\u6309\u503c\u9012\u589e\u6392\u5e8f\u3002 \u7136\u540e\u6211\u4eec\u8003\u8651\u80fd\u53d6\u8fd9\u4e9b\u503c\u91cc\u9762\u7684\u54ea\u4e9b\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u7531\u4e8e\u503c\u5df2\u7ecf\u6ee1\u8db3\u9012\u589e\u6761\u4ef6\uff0c\u6211\u4eec\u73b0\u5728\u53ea\u5173\u6ce8\u8ddd\u79bb\u4e0d\u8d85\u8fc7\\(k\\)\u7684\u8fd9\u4e2a\u9650\u5236\uff0c\u90a3\u4e48\u6211\u4eec\u8bbe\\(f_i\\)\u8868\u793a\u8003\u8651\u5230\u7b2c\\(i\\)\u4e2a\u6570\u5b57\u65f6\u7684\u7b54\u6848\uff0c\u5047\u8bbe\u5b83\u7684\u7f16\u53f7\u662f\\(i\\)\uff0c\u53ef\u4ee5\u8f6c\u79fb\u5230\u5b83\u7684\u7f16\u53f7\u662f\\([i-k,i-1]\\)\u7684\u6240\u6709\\(f\\)\uff08\u6a21\u610f\u4e49\u4e0b\uff09\uff0c\u4e8e\u662f\u662f\u4e00\u4e2a\u533a\u95f4\u6700\u5927\u503c\u3002\u5f53\u7136\u5b9e\u9645\u4e0a\u76f8\u540c\u6570\u5b57\u9700\u8981\u4e00\u8d77\u5904\u7406\u7279\u6b8a\u8003\u8651\uff0c\u8fd9\u4e2a\u662f\u7ec6\u8282\u95ee\u9898\u4e86\u3002\u590d\u6742\u5ea6\\(O(n\\log n)\\)\u3002</p> <p>\u7136\u540e\u8fd9\u4e2a\u6392\u5e8f\u540e\u6d88\u53bb\u4e00\u7ef4\u9650\u5236\u5176\u5b9e\u6709\u70b9\u50cf\u504f\u5e8f\uff0c\u6211\u4eec\u8bfb\u9898\u8bfb\u6210\u7684\u662f\u6bcf\u6b21\\(1\\sim n\\)\u7684\u904d\u5386\u7684\u65f6\u5019\u9700\u8981\u6709\u81f3\u5c11\\(k\\)\u4e2a\u4eba\u51fa\u724c\uff0c\u8fd9\u4e2a\u4e5f\u662f\u53ef\u4ee5\u505a\u7684\uff0c\u8f6c\u5316\u540e\u5c31\u662fLIS\u95ee\u9898\u3002</p>"},{"location":"vp/cf-gym-102441/#e-very-simple-sum","title":"E. Very Simple Sum","text":"<p>\u5982\u679c\u6211\u4eec\u80fd\u6c42\u51fa\\(c[i][j]\\)\u8868\u793a\u5e95\u6570\u4e3a\\(i\\)\uff0c\u6307\u6570\u4e3a\\(j\\)\u7684\u6570\u91cf\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u3002\u89c2\u5bdf\u5f0f\u5b50\u7684\u5f62\u5f0f\uff0c\u53d1\u73b0\u5e95\u6570\u662f\u4e00\u4e2aFFT\u7684\u5f62\u5f0f\uff0c\u800c\u6307\u6570\u662f\u4e00\u4e2aFWT\u7684\u5f62\u5f0f\uff0c\u800c\u4e14\u6570\u5b57\u8303\u56f4\u5f88\u5c0f\uff0c\u4e8e\u662f\u6211\u4eec\u4ee4\\(f[x][y]\\)\u8868\u793a\\(a_i=x,b_i=y\\)\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u505a\u4e00\u6b21\u5377\u79ef\u76f8\u5f53\u4e8e\u9898\u76ee\u7531\u56db\u4e2a\u6570\u53d8\u6210\u4e24\u4e2a\u6570\uff0c\u6240\u4ee5\u81ea\u5377\u4e24\u6b21\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\uff1a</p> \\[ g_{i+j,x\\oplus y}=\\sum f_{i,x}f_{j,y} \\] <p>\u7531\u4e8eFFT\u548cFWT\u90fd\u662f\u7ebf\u6027\u53d8\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u884c\u505adwt\uff0c\u7136\u540e\u5bf9\u5217\u505adft\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6c42\u56db\u6b21\u5e42\uff0c\u518d\u5217idft\uff0c\u518d\u884cidwt\uff0c\u5c31\u53ef\u4ee5\u6c42\u5f97\\(c\\)\u6570\u7ec4\u3002 \u590d\u6742\u5ea6\\(O(n+c^2\\log c)\\)\u8fd9\u6837\uff0c\\(c\\)\u662f\u6570\u5b57\u8303\u56f4\u3002</p>"},{"location":"vp/cf-gym-102441/#f-random-xor","title":"F. Random XOR","text":"<p>\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u6982\u7387\u5747\u4e3a\\(p\\)\uff0c\u6c42\u51fa\u73b0\u6570\u5b57\u7684\u5f02\u6216\u548c\u7684\u671f\u671b\u7684\u5e73\u65b9\u3002</p>"},{"location":"vp/cf-gym-102441/#g-sum-of-distances-in-cactus","title":"G. Sum of Distances in Cactus","text":""},{"location":"vp/cf-gym-102441/#h-not-a-b","title":"H. Not A + B","text":"<p>\u8f93\u51fa\\(1\\)\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102441/#i-cutting","title":"I. Cutting","text":"<p>\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u6ce8\u610f\u5199\u6cd5\u3002</p>"},{"location":"vp/cf-gym-102441/#j-paternity-testing","title":"J. Paternity Testing","text":"<p>\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u8003\u8651\u5206\u5757\u3002 \u6c42\u51fa\u5757\u5185\u7684\u7b54\u6848\u548c\u6bcf\u4e2a</p>"},{"location":"vp/cf-gym-102441/#k-chess-positions","title":"K. Chess Positions","text":""},{"location":"vp/cf-gym-102500/","title":"2019-2020 ICPC Northwestern European Regional Programming Contest (NWERC 2019)","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 73, solved 8/11</p> </li> </ul> <p>\u6709\u51e0\u4e2a\u9898\u90fd\u5341\u5206\u5999\u554a\u3002</p>"},{"location":"vp/cf-gym-102500/#a-average-rank","title":"A. Average Rank","text":"<p>\u7ecf\u5178\u5957\u8def\uff0c\u5f53\u4fee\u6539\u6d89\u53ca\u5230\u7684\u6539\u53d8\u7ec4\u4e2a\u6570\u5f88\u5c11\uff0c\u4f46\u662f\u5f71\u54cd\u7ec4\u5185\u6240\u6709\u5143\u7d20\uff0c\u4e14\u5f71\u54cd\u76f8\u540c\u65f6\u53ef\u4ee5\u7528\u3002 \u4e00\u4e2a\u4eba\u6bcf\u5468\u7684\u52a0\u503c\u662f\u6bd4\u4ed6\u9ad8\u5206\u7684\u4eba\u7684\u4e2a\u6570\uff0c\u5047\u8bbe\u73b0\u5728\u4ed6\u4e3a\\(x\\)\u5206\uff0c\u5b83\u52a0\u4e00\u5206\uff0c\u90a3\u4e48\u5206\u6570\u4e3a\\(x\\)\u7684\u6240\u6709\u4eba\\(+1\\)\uff0c\u4ed6\u81ea\u5df1\u5219\u51cf\u53bb\u5206\u6570\u9ad8\u4e8e\\(x\\)\u7684\u4eba\u6570\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u540c\u4e00\u5206\u6570\u7684\u4eba\u6765\u8bf4\uff0c\u5176\u4ed6\u4eba\u7684\u52a0\u5206\u5bf9\u4ed6\u4eec\u7684\u5f71\u54cd\u662f\u4e00\u6837\u7684\u3002\u4e8e\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u6570\uff0c\u8bb0\u5f55\u5b83\u7d2f\u8ba1\u7684\u8d21\u732e\u4ee5\u53ca\u5f53\u524d\u8fd9\u4e2a\u5206\u6570\u7684\u6392\u540d\uff0c\u8fd8\u6709\u4e0a\u6b21\u8fd9\u4e2a\u5206\u6570\u6709\u4eba\u8d70/\u6765\u7684\u4fee\u6539\u65f6\u95f4\uff0c\u5bf9\u6bcf\u4e2a\u4eba\uff0c\u8bb0\u5f55\u5b83\u53d8\u4e3a\u8be5\u5206\u6570\u65f6\uff0c\u8be5\u5206\u6570\u7684\u7d2f\u8ba1\u8d21\u732e\u3002\u5f53\u4e00\u4e2a\u4eba\u4ece\\(x\\)\u5206\u53d8\u4e3a\\(x+1\\)\u5206\uff0c\u9700\u8981\u5c06\u8fd9\u4e24\u4e2a\u5206\u6570\u5230\u4e0a\u6b21\u4fee\u6539\u5230\u73b0\u5728\u7684\u6240\u6709\u8d21\u732e\uff08\u5c31\u662f\u65f6\u95f4\u4e58\u6392\u540d\uff09\u7edf\u8ba1\u8bb0\u5f55\u5230\u7d2f\u8ba1\u8d21\u732e\u4e2d\uff0c\u7136\u540e\u8fd9\u4e2a\u4eba\u7684\u7b54\u6848\u4f1a\u52a0\u4e0a\uff08\\(x\\)\u5206\u7684\u7d2f\u8ba1\u8d21\u732e-\u4ed6\u53d8\u4e3a\\(x\\)\u5206\u65f6\u7684\u8d21\u732e\uff09\u8fd9\u4e48\u591a\u3002\u5177\u4f53\u53ef\u4ee5\u89c1\u4ee3\u7801\uff0c\u590d\u6742\u5ea6\\(O(n)\\)\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\n\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int N=3e5+10,M=N&lt;&lt;3,mod=1e9+7;\n\nint n,m;\nint las[N],rk[N],ans[N],sc[N],ctb[N],pre[N];\n\nvoid solve(){\n    n=read();m=read();\n    for(int i=1;i&lt;=m;++i){\n        int k=read();\n        while(k--){\n            int x=read();\n            ctb[sc[x]]+=rk[sc[x]]*(i-las[sc[x]]);\n            las[sc[x]]=i;\n            ++rk[sc[x]];\n            ans[x]+=ctb[sc[x]]-pre[x];\n\n            sc[x]++;\n            ctb[sc[x]]+=rk[sc[x]]*(i-las[sc[x]]);\n\n            las[sc[x]]=i;\n            pre[x]=ctb[sc[x]];\n        }\n    }\n    for(int i=1;i&lt;=n;++i){\n        ctb[sc[i]]+=rk[sc[i]]*(m+1-las[sc[i]]);\n        las[sc[i]]=m+1;\n        ans[i]+=ctb[sc[i]]-pre[i];\n    }\n    for(int i=1;i&lt;=n;++i){\n        printf(\"%.9lf\\n\",1.0+1.0*ans[i]/m);\n    }\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n}\n</code></pre>"},{"location":"vp/cf-gym-102500/#b-balanced-cut","title":"B. Balanced Cut","text":"<p>\u5947\u602a\u7684\u8d2a\u5fc3\uff0c\u6ca1\u61c2\u4e3a\u5565\u5bf9\u3002 \u9ad8\u5ea6\u4e3a\\(i\\)\u7684\u5e73\u8861\u6811\u81f3\u5c11\u8981\u6709\\(f(i)=f(i-1)+f(i-2)+1\\)\u4e2a\u7ed3\u70b9\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\\(i\\)\uff0c\u5982\u679c\\(i\\)\u88ab\u9009\u4e2d\uff0c\u90a3\u4e48\u5176\u6240\u6709\u7956\u5148\\(p\\)\u4e5f\u5fc5\u88ab\u9009\u4e2d\u3002\u8003\u8651\\(i\\)\u80fd\u5426\u52a0\u5165\uff1a\u5982\u679c\\(i\\)\u5728\u7956\u5148\\(p\\)\u7684\u5de6\u5b50\u6811\u91cc\uff0c\\(p\\)\u7684\u5de6\u5b50\u6811\u9ad8\u5ea6\u66f4\u65b0\uff0c\u8fde\u5e26\u66f4\u65b0\u53f3\u5b50\u6811\u5fc5\u987b\u8981\u6709\u7684\u9ad8\u5ea6\uff1b\u5982\u679c\\(i\\)\u5728\u7956\u5148\\(p\\)\u7684\u53f3\u5b50\u6811\u91cc\uff0c\u66f4\u65b0\u53f3\u5b50\u6811\u9ad8\u5ea6\uff0c\u53ea\u8981\u53f3\u5b50\u6811\u9ad8\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u5de6\u5b50\u6811\u9ad8\u5ea6\u52a0\u4e00\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102500/#c-canvas-line","title":"C. Canvas Line","text":"<p>\u8d2a\u5fc3\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102500/#ddisposable-switches","title":"D.Disposable Switches","text":"<p>\u8003\u8651\u4e00\u6761\u957f\u5ea6\u4e3a\\(l\\)\uff0c\u7ecf\u8fc7\u8fb9\u6570\u4e3a\\(k\\)\u7684\u8def\u5f84\uff0c\u5176\u5b9e\u9645\u8ddd\u79bb\u4e3a\\(\\frac {l}{v}+kc\\)\uff0c\u4f46\u662f\u7531\u4e8e\\(v,c\\)\u662f\u4efb\u610f\u53d6\u503c\u7684\uff0c\u6240\u4ee5\u4e8b\u5b9e\u4e0a\u6240\u6709\u8def\u5f84\u957f\u5ea6\u53ef\u4ee5\u653e\u5927\\(v\\)\u500d\uff0c\u8fd9\u6837\u4e00\u6761\u8def\u5f84\u5b9e\u9645\u8ddd\u79bb\u53ef\u4ee5\u8868\u793a\u4e3a\\(l+kx\\)\uff0c\u8fd9\u662f\u5173\u4e8e\\(x\\)\u7684\u4e00\u6b21\u51fd\u6570\u3002\u6211\u4eec\u6c42\u51fa\\(dis[n][k]\\)\u8868\u793a\u4ece\u4e00\u53f7\u70b9\u5230\\(n\\)\u53f7\u70b9\uff0c\u7ecf\u8fc7\\(k\\)\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5f97\u5230\u67d0\u4e2a\\(k\\)\u662f\u5426\u80fd\u6210\u4e3a\u6700\u77ed\u8def\u3002 \u63a5\u4e0b\u6765\u7684\u95ee\u9898\u662f\u5bf9\u6bcf\u4e2a\u53ef\u80fd\\(k\\)\uff0c\u6c42\u51fa\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u5728\u5b83\u6700\u77ed\u8def\u4e0a\u9762\u7684\u70b9\u3002\u8fd9\u91cc\u53ef\u4ee5\u7528\u7c7b\u4f3c\u5224\u65ad\u4e00\u6761\u8fb9\u5728\u4e0d\u5728\u6700\u77ed\u8def\u56fe\u4e0a\u7684\u65b9\u6cd5\uff1a\u5bf9\u4e00\u6761\u8fb9\\((u,v,w)\\)\uff0c\u5982\u679c\\(dis[u][x]==dis[v][x+1]+w\\)\uff0c\u8fd9\u6761\u8fb9\u5c31\u5728\u4e0a\u9762\uff0c\u8fd9\u6837\u6211\u4eec\u4ece\\(n\\)\u53f7\u70b9\u5f00\u59cb\u5c31\u53ef\u4ee5\u76f4\u63a5\u53cd\u5411BFS\u4e86\u3002\u590d\u6742\u5ea6\\(O(n(n+m))\\)\u4e4b\u7c7b\u7684\u3002</p>"},{"location":"vp/cf-gym-102500/#e-expeditious-cubing","title":"E. Expeditious Cubing","text":"<p>\u7b80\u5355\u5206\u7c7b\u8ba8\u8bba</p>"},{"location":"vp/cf-gym-102500/#ffiretrucks-are-red","title":"F.Firetrucks Are Red","text":"<p>\u5bf9\u6bcf\u4e2a\u6570\u65b0\u5efa\u4e00\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u4eba\u5411\u81ea\u5df1\u6709\u7684\u6240\u6709\u6570\u8fde\u8fb9\uff0c\u8fd9\u6837\u4e0d\u6539\u53d8\u8fde\u901a\u6027\u3002\u679a\u4e3e\u7528\u54ea\u4e2a\u6570\u4f5c\u4e3a\u5a92\u4ecb\uff0c\u518d\u679a\u4e3e\u8fd9\u4e2a\u6570\u8fde\u7684\u6240\u6709\u8fb9\uff0c\u5e76\u67e5\u96c6\u7ef4\u62a4\u4eba\u7684\u8fde\u901a\u6027\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102500/#g-gnoll-hypothesis","title":"G. Gnoll Hypothesis","text":"<p>\u9898\u8bfb\u4e86\u5f88\u4e45\uff0c\u5927\u6982\u662f\u6bcf\u4e2a\u602a\u7269\u6709\u4e00\u4e2a\u751f\u6210\u6982\u7387\uff0c\u5148\u4ece\\(n\\)\u4e2a\u91cc\u9762\u9009\\(k\\)\u4e2a\u751f\u6210\uff0c\u7136\u540e\u5982\u679c\u7b2c\\(i\\)\u4e2a\u6ca1\u88ab\u9009\u62e9\uff0c\u5b83\u7684\u6982\u7387\u4f1a\u4f20\u7ed9\\(i\\bmod n+1\\)\u3002\u6c42\u6bcf\u4e2a\u602a\u7269\u7684\u5b9e\u9645\u751f\u6210\u6982\u7387\u3002 \u8bfb\u61c2\u9898\u4ee5\u540e\uff0c\u63a8\u4e00\u4e0b\u5f0f\u5b50\u5c31\u884c\u4e86\uff0c\u4e0d\u8fc7\u6211\u81f3\u4eca\u4e5f\u6ca1\u660e\u767d\u4e00\u4e2a\\(\\binom {500} {250}\\)\u662f\u5982\u4f55\u4e0d\u6389double\u7684\u7cbe\u5ea6\u7684\u3002</p>"},{"location":"vp/cf-gym-102500/#h-height-profile","title":"H. Height Profile","text":"<p>\u9996\u5148\u9700\u8981\u89c2\u5bdf\u5230\uff0c\u6700\u540e\u7684\u7b54\u6848\u4e00\u5b9a\u6709\u4e00\u4e2a\u7aef\u70b9\u6070\u597d\u5728\u9876\u70b9\u5904\u3002\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u8be2\u95ee\u6b21\u6570\u5f88\u5c11\uff0c\u4e8e\u662f\u8003\u8651\u6bcf\u4e2a\u8be2\u95ee\u53ef\u4ee5\u626b\u4e00\u904d\u6765\u505a\u3002 \u6211\u4eec\u679a\u4e3e\u5de6\u7aef\u70b9\\(i\\)\uff0c\u8003\u8651\u53ef\u884c\u7684\u53f3\u7aef\u70b9\\(j\\)\uff0c\u6ee1\u8db3\\(h[i]-h[j]\\geq k(i-j)\\)\uff0c\u53d8\u6362\u4e00\u4e0b\u5c31\u662f\\(h[i]-ki\\geq h[j]-kj\\)\uff0c\u4e8e\u662f\u6bcf\u4e2a\u6570\u53d8\u4e3a\\(h[i]-ki\\)\uff0c\u5c31\u53d8\u6210\u4e86\u6c42\u4e00\u4e2a\u6570\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u6570\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6c42\u5230\u7684\\((i,j)\\)\u7ebf\u6bb5\u5de6\u7aef\u70b9\u6216\u53f3\u7aef\u70b9\u5ef6\u957f\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u5f97\u5230\u3002 \u590d\u6742\u5ea6\\(O(nk\\log n)\\)</p>"},{"location":"vp/cf-gym-102500/#i-inverted-deck","title":"I. Inverted Deck","text":"<p>\u6ca1\u770b\uff0cvandoor\u505a\u7684\u7b80\u5355\u9898\u3002</p>"},{"location":"vp/cf-gym-102500/#j-jackdaws-and-crows","title":"J. Jackdaws And Crows","text":"<p>\u6027\u8d28\u9898\u3002 \u9996\u5148\u731c\u6d4b\u53ef\u4ee5\u4e09\u5206\u4fee\u6539\u6b21\u6570\uff0c\u7136\u540eDP\u5220\u9664\u4e2a\u6570\uff0c\u7136\u800c\u5e76\u4e0d\u6ee1\u8db3\u4e09\u5206\u6027\u3002 \u8003\u8651\u8fd9\u4e2a\u4fee\u6539\u6b21\u6570\u5728\u4ec0\u4e48\u65f6\u5019\u4f1a\u5f71\u54cd\u9700\u8981\u5220\u9664\u4e2a\u6570\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u82e5\u4fee\u6539\u6b21\u6570\\(cnt&gt;abs(a[i])\\)\uff0c\u90a3\u4e48\u8fd9\u4e2a\\(a[i]\\)\u53ef\u4ee5\u4e3a\u6b63\u8d1f\u4efb\u610f\u4e00\u79cd\u3002\u5047\u5982\u4efb\u610f\u7528?\u8868\u793a\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u5f62\u5982-???+???+\u8fd9\u6837\u7684\u5e8f\u5217\u9700\u8981\u600e\u4e48\u5220\u9664\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u4e24\u4e2a\u786e\u5b9a\u6b63\u8d1f\u6027\u7684\u6570\u662f\u5426\u9700\u8981\u5220\u9664\u4e00\u4e2a\uff0c\u53d6\u51b3\u4e8e\u5b83\u4eec\u4e24\u4e2a\u4e4b\u95f4\u7684\u95ee\u53f7\u4e2a\u6570\u548c\u5b83\u4eec\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\u3002\u53e6\u4e00\u4e2a\u89c2\u5bdf\u662f\uff0c\u5047\u5982\u5220\u9664\u4e86\u5176\u4e2d\u7684\u4e00\u4e2a\uff0c\u5bf9\u540e\u9762\u4e00\u4e2a\u6b63\u8d1f\u6027\u786e\u5b9a\u7684\u6570\u662f\u5426\u9700\u8981\u5220\u9664\u8fd9\u4e2a\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\u3002\u4e8e\u662f\u6211\u4eec\u7528\u94fe\u8868\u7ef4\u62a4\u76f8\u90bb\u7684\u4e24\u4e2a\u786e\u5b9a\u7b26\u53f7\u7684\u6570\u4f4d\u7f6e\uff0c\u679a\u4e3e\u4fee\u6539\u6b21\u6570\u8ba1\u7b97\u8d21\u732e\u5373\u53ef\u3002\u590d\u6742\u5ea6\\(O(n)\\)\u3002</p>"},{"location":"vp/cf-gym-102500/#k-kitesurfing","title":"K. Kitesurfing","text":"<p>\u4e00\u5f00\u59cb\u89c9\u5f97\u662f\u4e2a\u7b80\u5355\u8d2a\u5fc3\u9898\uff0c\u7136\u540e\u60f3\u4e86\u4e00\u4e0b\u53d1\u73b0\u4e00\u70b9\u4e5f\u4e0d\u597d\u8d2a\uff0c\u4e8e\u662f\u5c31\u6446\u4e86\u3002</p>"},{"location":"vp/cf-gym-102759/","title":"XXI Open Cup, Grand Prix of Korea","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 80, solved 5/12</p> </li> </ul> <p>Open Cup \u786e\u5b9e\u96be\u3002</p> <p>A. Advertisement Matching</p> <p>\u6709\\(n\\)\u4e2a\u5e7f\u544a\u5546\uff0c\u6bcf\u4e2a\u5e7f\u544a\u5546\u9700\u8981\u653e\u51fa\\(a_i\\)\u4e2a\u5e7f\u544a\uff0c\u6709\\(m\\)\u4e2a\u89c2\u4f17\uff0c\u6bcf\u4e2a\u4eba\u6700\u591a\u770b\\(b_j\\)\u4e2a\u5e7f\u544a\uff0c\u800c\u4e14\u6bcf\u4eba\u770b\u7684\u5e7f\u544a\u5fc5\u987b\u51fa\u81ea\u4e0d\u540c\u5382\u5546\u3002\u6709\\(Q\\)\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u5c06\\(a_i\\)\u6216\\(b_j\\)++\u6216--\uff0c\u95ee\u80fd\u5426\u6ee1\u8db3\u6240\u6709\u5e7f\u544a\u5546\u7684\u9700\u6c42\u3002</p> <p>\\(1\\leq n,m,a_i,b_i\\leq 250000\\)</p> <p>\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u5c06\\(a\\)\u964d\u5e8f\u6392\u5217</p> <p>\u80fd\u63a8\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c\u80fd\u591f\u6ee1\u8db3\u5f53\u4e14\u4ec5\u5f53\uff0c\u4ee5\u4e0b\u5f0f\u5b50\u5bf9\u6240\u6709\\(k\\in [n]\\)\u90fd\u6210\u7acb\uff1a</p> \\[ \\sum_{i=1}^k a_{i}=\\sum_{i=1}^m \\min(b_i,k) \\] <p>\uff08\u4f3c\u4e4e\u970d\u5c14\u5b9a\u7406\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u8bc1\u660e\uff1f\uff09\u8bc1\u660e\u65b9\u6cd5\u5982\u4e0b\uff0c\u5148\u6309\u9898\u610f\u5efa\u4e00\u4e2a\u56fe\uff1a</p> <p>\u5bf9\\(i\\in [n]\\) \\(link (S,i,a_i)\\)</p> <p>\u5bf9\\(j\\in [m]\\) \\(link(j,T+n,b_j)\\)</p> <p>\u7136\u540e\u4efb\u610f\\(i\\in[n]\\)\u5230\\(j\\in[m]+n\\)\u90fd\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a1\u7684\u8fb9\u3002</p> <p>\u73b0\u5728\u76f8\u5f53\u4e8e\u8981\u6c42\u6700\u5927\u6d41\\(\\ge \\sum_{i=1}^n a_i\\)</p> <p>\u8003\u8651\u6700\u5c0f\u5272\uff0c\u8bbe\\(S\\)\u4fa7\u7684\u96c6\u5408\\(A\\subseteq [n]\\), T\u4fa7\u7684\u96c6\u5408\\(B\\subseteq[m]\\)\uff0c\u7684\u90a3\u4e9b\u70b9\u4e0e\u5bf9\u5e94\u6e90\u70b9/\u6c47\u70b9\u7684\u8fb9\u4e0d\u88ab\u5272\u6389\uff0c\u90a3\u4e48\u6700\u5c0f\u5272\u5c31\u662f\u3002</p> \\[ \\sum_{i\\notin A} a_i +\\sum_{i\\in A}\\sum_{j\\in B}1+\\sum_{j\\notin B}b_j\\ge \\sum_{i=1}^n a_i \\] <p>\u8bbe\\(|A|=k\\)\uff0c\u90a3\u4e48\u6709</p> \\[ \\sum_{i=k+1}^n a_i+\\sum_{j\\in B}k+\\sum_{j\\notin B}b_j\\ge \\sum_{i=1}^n a_i \\] <p>\u56e0\u4e3a\u8981\u6c42\u6700\u5c0f\u5272\uff0c\u6240\u4ee5\u8981\u6700\u5c0f\u5316\u540e\u9762\u4e24\u9879\u7684\u548c\uff0c\u4e8e\u662f\u9009\u62e9\u6bd4k\u5c0f\u7684\u90a3\u4e9bb\uff0c\u90a3\u4e48\u6709</p> \\[ \\sum_{i=k+1}^n a_i+\\sum_{j=1}^m \\min (b_j,k)\\ge \\sum_{i=1}^n a_i \\] <p>\u5373</p> \\[ \\sum_{j=1}^m\\min (b_j,k)-\\sum_{i=1}^k a_i\\ge 0 \\] <p>\u7136\u540e\u7b2c\u4e00\u9879\u90a3\u4e2a\u4e1c\u897f\uff0c\u53ef\u4ee5\u8f6c\u6362\uff0c\u6bd4\u5982\u60f3\u8c61\\(b\\)\u7ec4\u6210\u4e86\u4e00\u4e2a\u76f4\u65b9\u56fe\uff0c\u672c\u6765\u9010\u5217\u6c42\u548c\uff0c\u7136\u540e\u8f6c\u6362\u6210\u9010\u884c\u6c42\u548c\uff0c\u76f8\u5f53\u4e8e\u6c42\\(\\sum_{i=1}^k c_i\\) \uff0c\u5176\u4e2d\uff0c\\(c_i\\)\u8868\u793a\\(b\\)\u4e2d\u6709\u591a\u5c11\\(\\ge i\\)\u7684\u3002\u73b0\u5728\u76f8\u5f53\u4e8e\u6c42</p> \\[ \\sum_{i=1}^k c_i-\\sum_{i=1}^k a_i\\ge 0 \\] <p>\u5bf9\u6240\u6709\\(k\\in[n]\\)\u6210\u7acb\u3002</p> <p>\u4e8e\u662f\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\\(c_i-a_i\\)\u7684\u524d\u7f00\u548c\u7684\u6700\u5c0f\u503c\u3002</p> <ol> <li>\u5bf9\u539f\u6570\u7ec4\\(a_i\\)++\u6216--\u65f6\uff0c\u627e\u5230\u539f\u6765\u7684\\(a_i\\)\u5728\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e\\(pos\\)\uff0c\u4f7f\u5f97\u4fee\u6539\u8fc7\u540e\u4e5f\u4e0d\u6539\u53d8\u76f8\u5bf9\u4f4d\u7f6e\u3002\u8fd9\u65f6\u5019\u7531\u4e8e\u6392\u5e8f\u540e\\(a_{pos}\\)\u53d8\u4e86\uff0c\u9700\u8981\u5bf9\\(pos\\dots n\\)\u7684\u5730\u65b9--\u6216++</li> <li>\u5bf9\\(b_i\\)++\u6216--\u65f6\uff0c\u6539\u53d8\u7684\u53ea\u6709\\(c_{b_i}\\)\u6216\\(c_{b_{i+1}}\\)\uff0c\u4e5f\u662f\u4fee\u6539\u76f8\u5e94\u7684\u540e\u7f00\u5c31\u884c\u4e86\u3002</li> </ol> <p>\u7136\u540e\u53ea\u9700\u8981\u5224\u65ad\u6240\u6709\u7684\u6700\u5c0f\u503c\\(\\ge 0\\)\u5c31\u884c\u4e86\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n\\log n+m+ Q\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=5e5+5;\nint n,mx;\nint a[maxn],b[maxn];\nll c[maxn];\nint A[maxn],B[maxn];\nll sca[maxn];\nll mn[maxn&lt;&lt;2],tag[maxn&lt;&lt;2];\n\n#define ls (v&lt;&lt;1)\n#define rs (v&lt;&lt;1|1)\n#define  mid ((l+r)&gt;&gt;1)\n\nvoid pushup(int v){\n    mn[v]=min(mn[ls],mn[rs]);\n}\nvoid lay(int v,int a){\n    mn[v]+=a;\n    tag[v]+=a;\n}\nvoid pushdown(int v){\n    if(tag[v]){\n        lay(ls,tag[v]);lay(rs,tag[v]);\n        tag[v]=0;\n    }\n}\n\nvoid build(int v,int l,int r){\n    tag[v]=0;\n    if(l==r){\n        mn[v]=sca[l];\n    }\n    else{\n        build(ls,l,mid);build(rs,mid+1,r);\n        pushup(v);\n    }\n}\nvoid mdf(int v,int l,int r,int al,int ar,int vl){\n    if(al&gt;ar)return;\n    if(al&lt;=l&amp;&amp;ar&gt;=r){\n        return lay(v,vl);\n    }\n    pushdown(v);\n    if(al&lt;=mid) mdf(ls,l,mid,al,ar,vl);\n    if(ar&gt;mid) mdf(rs,mid+1,r,al,ar,vl);\n    pushup(v);\n}\n#undef mid\nsigned main(){\n    n=yh();int m=yh();\n    rep(i,1,n) a[i]=yh(),A[i]=a[i];\n    sort(A+1,A+1+n,greater&lt;int&gt;());\n    rep(i,1,m) b[i]=yh(),c[b[i]]++,mx=max(mx,b[i]);\n    dwn(i,mx,1) c[i]+=c[i+1]; \n    rep(i,1,n){\n        sca[i]=sca[i-1]+c[i]-A[i];\n    }\n    build(1,1,n);\n    int q=yh(),l,r,mid;\n    rep(_,1,q){\n        int op=yh(),id=yh();\n        if(op==1){\n            l=1,r=n;\n            while(l&lt;r){\n                mid=(l+r)/2;\n                if(A[mid]&gt;a[id]) l=mid+1;\n                else r=mid;\n            }\n            mdf(1,1,n,l,n,-1);\n            a[id]++; A[l]++;\n        }\n        else if(op==2){\n            l=1,r=n;\n            while(l&lt;r){\n                mid=(l+r+1)/2;\n                if(A[mid]&gt;=a[id]) l=mid;\n                else r=mid-1;\n            }\n            mdf(1,1,n,l,n,1);\n            a[id]--; A[l]--;\n        }\n        else if(op==3){\n            mdf(1,1,n,++b[id],n,1);\n        }\n        else{\n            mdf(1,1,n,b[id]--,n,-1);\n        }\n        cout&lt;&lt;(mn[1]&gt;=0)&lt;&lt;hvie;\n    }\n\n    return 0;\n}\n/*\nc[bi]--\n\n*/\n/*\n\\sum min(b[i],k)=\\sum_{i=1}^k ci, c\u662fb&gt;=k\u7684\u4e2a\u6570\n\\sum_{i=1}^k a[i] \u5c31\u662f\u524dk\u5927\u3002\n\n\u8981\u6c42\u5bf9\u6240\u6709k\\in [n]\u90fd\u6210\u7acb\na[1]&lt;=c[1]\na[1]+a[2]&lt;=c[2]\nS{c[i]-a[i]}&gt;=0 \u5bf9\u6240\u6709\u4f4d\u7f6e\u3002\n\u7528\u7ebf\u6bb5\u6811\u8bb0\u5f55S{c[i]-a[i]}\u7684\u503c\uff0c\u4fee\u6539\u4e00\u4e2a\u5355\u70b9\u76f8\u5f53\u4e8e\u5bf9\u540e\u9762\u5168\u90e8\u90fd\u52a0\u4e00\u4e0b\u3002\n\n\n*/\n</code></pre> <p>B.Cactus Competition</p> <p>\u4e00\u4e2a\\(n\\)\u884c\\(m\\)\u5217\u7684\u77e9\u9635\uff0c\u6bcf\u4e00\u884c\u6709\u6743\u503c\\(a_i\\)\uff0c\u5217\u6709\u6743\u503c\\(b_j\\)\uff0c\u82e5\\(a_i+b_j&lt;0\\)\u5219\\((i,j)\\)\u4e0d\u80fd\u8d70\uff0c\u4e00\u4e2a\u70b9\u53ea\u80fd\u5f80\u53f3\u6216\u5f80\u4e0b\u8d70\u3002\u95ee\u5bf9\u4e8e\u6240\u6709\u7684\\((S,1)(T,m),S,T\\in [n]\\)\uff0c\u6709\u591a\u5c11\u5bf9\u76f8\u4e92\u53ef\u8fbe\u3002</p> <p>\\(n,m\\leq 2\\times 10^5,|a_i|,|b_j|\\leq 10^9\\)</p> <p>\u9996\u5148\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u95ee\u9898\uff0c\u5c31\u662f\\((1,1)(n,m)\\)\u662f\u5426\u8fde\u901a\u3002\u53ef\u4ee5\u53d1\u73b0\u6709\u56db\u79cd\u60c5\u51b5\u5b83\u4eec\u4e0d\u8fde\u901a\uff1a</p> <ul> <li>\\(\\exists i,a_i+\\max\\{b_j\\}&lt;0\\)</li> <li>\\(\\exists j,\\max\\{a_i\\}+b_j&lt;0\\)</li> <li>\\(\\exists i,j.a_i+\\max_{y=1}^j\\{b_y\\}&lt;0,b_j+\\max_{x=1}^i\\{a_x\\}&lt;0\\)</li> <li>\\(\\exists i,j.a_i+\\max_{y=j}^m\\{b_y\\}&lt;0,b_j+\\max_{x=i}^n\\{a_x\\}&lt;0\\)</li> </ul> <p>\u5f62\u8c61\u5730\u8bf4\uff0c\u56db\u79cd\u60c5\u51b5\u5206\u522b\u76f8\u5f53\u4e8e\u4e00\u884c\u88ab\u5c01\u9501\u3001\u4e00\u5217\u88ab\u5c01\u9501\u3001\u8d77\u70b9\u88ab\u5c01\u9501\u3001\u7ec8\u70b9\u88ab\u5c01\u9501\u3002</p> <p>\u5f53\u62d3\u5c55\u5230\u4e00\u822c\u60c5\u51b5\uff0c\u9700\u8981\u6ce8\u610f\u5f62\u5f0f\u7a0d\u5fae\u6709\u70b9\u4e0d\u540c\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u628a\\(S\\)\u5f53\u6210\u6a2a\u5750\u6807\uff0c\\(T\\)\u5f53\u6210\u7eb5\u5750\u6807\uff0c\u4e0a\u9762\u56db\u79cd\u60c5\u51b5\u5206\u522b\u5bf9\u5e94\u4e86\u4e00\u4e2a\u77e9\u5f62\u3002\u524d\u4e24\u79cd\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u540e\u4e24\u79cd\u76f8\u5f53\u4e8e\u679a\u4e3e\u4e86\u5c01\u9501\u7684\u5217\uff0c\u7136\u540e\u770b\u54ea\u884c\u80fd\u628a\u8d77\u70b9/\u7ec8\u70b9\u5c01\u8d77\u6765\uff0c\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002</p> <p>\u6700\u540e\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u626b\u63cf\u7ebf\u95ee\u9898\u3002</p> <p>\u4f46\u662f\u4e0d\u60f3\u5199\uff0c\u722c\u4e86\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log n)\\)</p> <p>D.Just Meeting</p> <p>\\(n\\)\u4e2a\u4eba\uff0c\u6bcf\u4e24\u4e2a\u4eba\u4e4b\u95f4\u6709\u4e00\u4e2a\u6743\u503c\\(C(i,j)\\)\uff0c\u5df2\u7ecf\u7ed9\u51fa\u4e86\u5176\u4e2d\u7684\\(m\\)\u4e2a\uff0c\u73b0\u5728\u8981\u6784\u9020\u6240\u6709\u7684\\(C\\)\uff0c\u6ee1\u8db3\\(\\forall k,C(i,j)\\geq C(j,k) ||C(i,j)\\geq C(i,k)\\)\u3002\u6c42\\(C\\)\u7684\u548c\u7684\u6700\u5c0f\u503c\uff0c\u6216\u6ca1\u6709\u5408\u6cd5\u7684\u6784\u9020\u65b9\u6cd5\u65f6\u8f93\u51fa-1\u3002</p> <p>\\(n,m\\leq 3\\times 10^5\\)</p> <p>\u9996\u5148\u8fd9\u4e2a\u9650\u5236\u5b9e\u9645\u4e0a\u7684\u610f\u4e49\u662f\uff0c\u6bcf\u4e2a\u4e09\u5143\u73af\u4e2d\u4e0d\u5b58\u5728\u4e00\u6761\u8fb9\u540c\u65f6\u5c0f\u4e8e\u53e6\u5916\u4e24\u6761\u8fb9\u3002\u6211\u4eec\u8003\u8651\u7c7b\u4f3cfloyd\u7684\u8d21\u732e\u8fc7\u7a0b\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u6709\\(C(i,j)=\\min\\{C(i,k),C(k,j)\\},\\forall k\\)\uff0c\u8f6c\u6362\u4e00\u4e0b\u53ef\u4ee5\u770b\u51fa\\(C(i,j)\\)\u4e00\u5b9a\u662f\\(i\\)\u5230\\(j\\)\u6240\u6709\u8def\u5f84\u8fb9\u6743\u6700\u5c0f\u503c\u7684\u6700\u5927\u503c\u3002</p> <p>\u6b64\u5916\uff0c\u5982\u679c\u4e00\u4e2a\u4e09\u5143\u73af\u4e00\u6761\u8fb9\u90fd\u6ca1\u6709\u6216\u53ea\u6709\u4e00\u6761\u8fb9\uff0c\u4e00\u5b9a\u5168\u6784\u90201\u662f\u6700\u4f18\u7684\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5efa\u51fa\u6700\u5927\u751f\u6210\u68ee\u6797\uff0c\u8003\u8651\u6bcf\u4e00\u6761\u975e\u6811\u8fb9\uff0c\u5b83\u7684\u503c\u5fc5\u987b\u662f\u6811\u4e0a\u8def\u5f84\u8fb9\u6743\u7684\u6700\u5c0f\u503c\uff0c\u5426\u5219\u4e00\u5b9a\u4e0d\u5408\u6cd5\u3002</p> <p>\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u500d\u589e\u9884\u5904\u7406lca\u3001\u6700\u5c0f\u503c\u5565\u7684\uff0c\u53ef\u4ee5\u7b80\u5355\u5224\u65ad\u3002</p> <p>\u7edf\u8ba1\u7b54\u6848\u7684\u8bdd\uff0c\u9996\u5148\u5047\u8bbe\u5168\u90e8\u8fb9\u90fd\u662f1\uff0c\u5728\u5efa\u6700\u5927\u751f\u6210\u68ee\u6797\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u987a\u4fbf\u7edf\u8ba1\u51fa\u6bcf\u68f5\u6811\u7684\u8d21\u732e\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679cdsu\u5408\u5e76\u4e86\\(u\\)\u548c\\(v\\)\uff0c\u8fb9\u6743\u4e3a\\(w\\)\uff0c\u90a3\u4e48\u589e\u52a0\u7684\u8d21\u732e\u5c31\u662f\\(sz[u]\\cdot sz[v]\\cdot (w-1)\\)\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=3e5+10,M=19,mod=998244353,inf=1e15;\n\nint n,m,col;\nint ans,cnt;\n\nstruct edg{\n    int u,v,w;\n    edg(int _u=0,int _v=0,int _w=0):u(_u),v(_v),w(_w){}\n}e[N];\nvector&lt;edg&gt;vec;\nbool cmp(const edg&amp;A,const edg&amp;B){\n    return A.w&gt;B.w;\n}\n\nint dsu[N],sz[N];\nint findf(int x){return dsu[x]==x?dsu[x]:dsu[x]=findf(dsu[x]);}\n\nint bl[N],fa[M][N],dep[N],mi[M][N];\nvector&lt;pii&gt;G[N];\nvoid dfs(int x,int ff,int c){\n    bl[x]=c;fa[0][x]=ff;dep[x]=dep[ff]+1;\n    for(int i=1;i&lt;M;++i){\n        fa[i][x]=fa[i-1][fa[i-1][x]];\n        mi[i][x]=min(mi[i-1][x],mi[i-1][fa[i-1][x]]);\n    }\n    for(auto v:G[x]){\n        if(v.fi==ff) continue;\n        mi[0][v.fi]=v.se;\n        dfs(v.fi,x,v.se);\n    }\n}\n\nint lca(int x,int y){\n    if(dep[x]&lt;dep[y]) swap(x,y);\n    int t=dep[x]-dep[y];\n    for(int i=0;i&lt;M;++i) if(t&amp;(1&lt;&lt;i)) \n        x=fa[i][x];\n    if(x==y) return x;\n    for(int i=M-1;i&gt;=0;--i) \n        if(fa[i][x]!=fa[i][y])\n            x=fa[i][x],y=fa[i][y];\n    return fa[0][x];\n}\n\nint getedge(int x,int dep){\n    int ret=inf;\n    for(int i=M-1;i&gt;=0;--i) \n        if(dep&amp;(1&lt;&lt;i)) ret=min(ret,mi[i][x]),x=fa[i][x];\n    return ret;\n}\n\nint getmin(int x,int y){\n    int t=lca(x,y);\n    int lx=getedge(x,dep[x]-dep[t]),ly=getedge(y,dep[y]-dep[t]);\n    return min(lx,ly);\n}\n\nbool merge(int x,int y,int w){\n    int fx=findf(dsu[x]),fy=findf(dsu[y]);\n    if(fx==fy) return 0;\n    cnt+=sz[fx]*sz[fy];\n    ans+=w*sz[fx]*sz[fy];\n    dsu[fx]=fy;\n    sz[fy]+=sz[fx];sz[fx]=0;\n    G[x].pb(mkp(y,w));G[y].pb(mkp(x,w));\n    return 1;\n}\n\nvoid solve(){\n    n=read();m=read();\n    for(int i=1;i&lt;=n;++i) dsu[i]=i,sz[i]=1;\n    for(int i=1;i&lt;=m;++i){\n        e[i].u=read();e[i].v=read();e[i].w=read();\n    }\n    sort(e+1,e+m+1,cmp);\n    for(int i=1;i&lt;=m;++i){\n        int u=e[i].u,v=e[i].v;\n        if(!merge(u,v,e[i].w)){\n            vec.pb(e[i]);\n        }\n    }\n    for(int i=1;i&lt;=n;++i){\n        if(!bl[i]) ++col,dfs(i,0,col);\n    }\n    for(auto it:vec){\n        int u=it.u,v=it.v,w=it.w;\n        int t=getmin(u,v);\n        if(t!=w){\n            puts(\"-1\");\n            return;\n        }\n    }\n    printf(\"%lld\\n\",ans+(n*(n-1)/2)-cnt);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>E.Chemistry</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\\(n\\)\u4e2a\u70b9\\(m\\)\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u533a\u95f4\\([l,r]\\)\uff0c\u6ee1\u8db3\u5728\u4fdd\u7559\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u70b9\u548c\u94fe\u63a5\u5b83\u4eec\u7684\u8fb9\u540e\uff0c\u6070\u597d\u6784\u6210\u4e00\u6761\u94fe\u3002</p> <p>\\(n,m\\leq 2.5\\times 10^5\\)</p> <p>\u4e00\u6761\u94fe\u6ee1\u8db3\uff1a\u6ca1\u6709\u73af\uff0c\u6240\u6709\u70b9\u5ea6\u6570\\(\\leq 2\\)\uff0c\\(V-E=1\\)\u3002</p> <p>\u5148\u8003\u8651\u6ca1\u6709\u70b9\u548c\u6240\u6709\u70b9\u5ea6\u6570\\(\\leq 2\\)\u7684\u60c5\u51b5\uff0c\u663e\u7136\u8fd9\u4e2a\u4e1c\u897f\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u7528\u53cc\u6307\u9488\u89e3\u51b3\u3002\u5224\u65ad\u73af\u548c\u52a8\u6001\u8fde\u8fb9\u5220\u8fb9\u53ef\u4ee5\u7528LCT\u89e3\u51b3\uff0c\u5ea6\u6570\u987a\u4fbf\u52a0\u8fb9\u5220\u8fb9\u7684\u65f6\u5019\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e0b\u5c31\u884c\u3002</p> <p>\u5047\u5982\u6211\u4eec\u5df2\u7ecf\u6709\u4e00\u4e2a\u533a\u95f4\\([L,R]\\)\u6ee1\u8db3\u524d\u4e24\u4e2a\u6761\u4ef6\uff0c\u8003\u8651\\(V-E=1\\)\u5982\u4f55\u5904\u7406\u3002\u6211\u4eec\u73b0\u5728\u8981\u6c42\u7684\u5c31\u662f\u6709\u591a\u5c11\u4e2a\\(k\\in[L,R]\\)\uff0c\\([k,R]\\)\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u8bb0\u5b83\u4e3a\\(s_k\\)\u3002\u5bf9\u4e8e\u4e00\u6761\u8fb9\\((u,v)(u&lt;v)\\)\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5b83\u5b9e\u9645\u4e0a\u4f1a\u4f7f\\(s_1\\sim s_{u}\\)\u7684\u503c-1\uff0c\u800c\u6bcf\u6b21\u53f3\u79fb\\(R\\)\uff0c\u76f8\u5f53\u4e8e\u524d\u7f00\u5168\u90e8+1\u3002\u800c\u56e0\u4e3a\u73b0\u5728\u5df2\u7ecf\u662f\u82e5\u5e72\u6761\u94fe\uff0c\u56e0\u6b64\u4e00\u5b9a\u6ee1\u8db3\\(s_k&gt;0\\)\uff0c\u4e8e\u662f\u5b9e\u9645\u4e0a\u5c31\u662f\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u7684\u4e2a\u6570\u3002\u7528\u7ebf\u6bb5\u6811\u505a\u533a\u95f4\u52a0\u51cf\u5e76\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u4e2a\u6570\u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log n)\\)</p> <p>LCT\u5199\u5047\u4e86T\u4e86\u4e00\u4e07\u5e74\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=4e5+10,M=19,mod=998244353,inf=2e9;\n\nstruct SEG{\n    #define ls (x&lt;&lt;1)\n    #define rs (x&lt;&lt;1|1)\n    #define mid ((l+r)&gt;&gt;1)\n\n    int mi[N&lt;&lt;2],cnt[N&lt;&lt;2],tag[N&lt;&lt;2];\n    void pushdown(int x){\n        if(!tag[x]) return;\n        int &amp;t=tag[x];\n        tag[ls]+=t;tag[rs]+=t;mi[ls]+=t;mi[rs]+=t;\n        t=0;\n    }\n    void pushup(int x){\n        if(mi[ls]&lt;mi[rs]){\n            mi[x]=mi[ls];cnt[x]=cnt[ls];\n        }\n        else if(mi[ls]&gt;mi[rs]){\n            mi[x]=mi[rs];cnt[x]=cnt[rs];\n        }\n        else{\n            mi[x]=mi[ls];cnt[x]=cnt[ls]+cnt[rs];\n        }\n    }\n    void build(int x,int l,int r){\n        if(l==r){\n            mi[x]=0;cnt[x]=1;\n            return;\n        }\n        build(ls,l,mid);build(rs,mid+1,r);\n        pushup(x);\n    }\n    void update(int x,int l,int r,int L,int R,int v){\n        if(L&lt;=l &amp;&amp; r&lt;=R){\n            mi[x]+=v;tag[x]+=v;\n            return;\n        }\n        pushdown(x);\n        if(L&lt;=mid) update(ls,l,mid,L,R,v);\n        if(R&gt;mid) update(rs,mid+1,r,L,R,v);\n        pushup(x);\n    }\n    pii merge(pii A,pii B){\n        if(A.fi==B.fi) return mkp(A.fi,A.se+B.se);\n        else if(A.fi&lt;B.fi) return A;\n        else return B;\n        assert(0);\n    }\n    pii query(int x,int l,int r,int L,int R){\n        if(L&lt;=l &amp;&amp; r&lt;=R) return mkp(mi[x],cnt[x]);\n        pushdown(x);\n        pii ret=mkp(inf,0);\n        if(L&lt;=mid) ret=merge(ret,query(ls,l,mid,L,R));\n        if(R&gt;mid) ret=merge(ret,query(rs,mid+1,r,L,R));\n        return ret;\n    }\n    #undef ls\n    #undef rs\n    #undef mid\n}seg;\n\nstruct LCT{\n    #define ls ch[x][0]\n    #define rs ch[x][1]\n    int rev[N],fa[N],ch[N][2];\n    bool isroot(int x){return ch[fa[x]][0]!=x &amp;&amp; ch[fa[x]][1]!=x;}\n    int get(int x) {return ch[fa[x]][1]==x;}\n    void cover(int x){swap(ls,rs);rev[x]^=1;}\n    void pushdown(int x){\n        if(rev[x]) cover(ls),cover(rs),rev[x]=0;\n    }\n    void rotate(int x){\n        int y=fa[x],z=fa[y],k=get(x);\n        if(!isroot(y)) ch[z][get(y)]=x;\n        fa[ch[x][!k]]=y;fa[y]=x;fa[x]=z;\n        ch[y][k]=ch[x][!k];ch[x][!k]=y;\n    }\n    void splay(int x){\n        stack&lt;int&gt;st;st.push(x);\n        for(int t=x;!isroot(t);t=fa[t]) st.push(fa[t]);\n        while(!st.empty()) pushdown(st.top()),st.pop();\n        while(!isroot(x)){\n            int y=fa[x];\n            if(!isroot(y)) rotate(get(x)==get(y)?y:x);\n            rotate(x);\n        }\n    }\n    void access(int x){\n        for(int t=0;x;t=x,x=fa[x])\n            splay(x),rs=t;\n    }\n    void makeroot(int x){access(x);splay(x);cover(x);}\n    void link(int x,int y){makeroot(x);fa[x]=y;}\n    void cut(int x,int y){makeroot(x);access(y);splay(y);ch[y][0]=fa[x]=0;}\n    int findroot(int x)\n    {\n        access(x);splay(x);\n        while(ls) pushdown(x),x=ls;\n        splay(x);\n        return x;\n    }\n    bool check(int x,int y){\n        makeroot(x);access(y);splay(y);\n        return ch[y][0]==x;\n    }\n    #undef ls\n    #undef rs\n}T;\n\nint n,m;\nvector&lt;int&gt;G[N];\nint du[N],badcnt;\nvoid solve(){\n    n=read();m=read();\n    for(int i=1;i&lt;=m;++i){\n        int u=read(),v=read();\n        if(u&gt;v) swap(u,v);\n        G[v].pb(u);\n    }\n\n    function&lt;void(int,int)&gt; decdu=[&amp;](int x,int y){\n        --du[x];--du[y];\n        if(du[x]==2) --badcnt;\n        if(du[y]==2) --badcnt;\n    };\n    function&lt;void(int,int)&gt; adddu=[&amp;](int x,int y){\n        ++du[x];++du[y];\n        if(du[x]==3) ++badcnt;\n        if(du[y]==3) ++badcnt;\n    };\n    seg.build(1,1,n);\n    set&lt;pii&gt;st;//(u,v) u&lt;v\n    ll ans=0;\n    for(int r=1,l=1;r&lt;=n;++r){\n        seg.update(1,1,n,1,r,1);\n        for(auto v:G[r]){\n            if(v&lt;l) continue;\n            while(T.findroot(r)==T.findroot(v)){\n                //cout&lt;&lt;\"!!!\"&lt;&lt;hvie;\n                for(auto it=st.begin();it!=st.end();){\n                    if(it-&gt;fi&gt;l) break;\n                    decdu(it-&gt;fi,it-&gt;se);\n                    T.cut(it-&gt;fi,it-&gt;se);\n                    seg.update(1,1,n,1,it-&gt;fi,1);\n                    it=st.erase(it);\n                }\n                ++l;\n            }\n            if(v&lt;l) continue;\n            adddu(r,v);\n            T.link(r,v);\n            seg.update(1,1,n,1,v,-1);\n            st.insert(mkp(v,r));\n        }\n        while(badcnt){\n            for(auto it=st.begin();it!=st.end();){\n                if(it-&gt;fi&gt;l) break;\n                decdu(it-&gt;fi,it-&gt;se);\n                T.cut(it-&gt;fi,it-&gt;se);\n                seg.update(1,1,n,1,it-&gt;fi,1);\n                it=st.erase(it);\n            }\n            ++l;\n        }\n        //cout&lt;&lt;l&lt;&lt;\" \"&lt;&lt;r&lt;&lt;\" \"&lt;&lt;\" \"&lt;&lt;in&lt;&lt;\" \"&lt;&lt;clock()&lt;&lt;hvie;\n        pii t=seg.query(1,1,n,l,r);\n        ans+=t.se;\n    }\n    printf(\"%lld\\n\",ans);\n}\n\nsigned main(){\n    //freopen(\"e.in\",\"r\",stdin);\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>H.Alchemy</p> <p>\u4e00\u4e2a\u53ef\u91cd\u96c6\u5408\uff0c\u5143\u7d20\\(i\\)\u6709\\(c_i\\)\u4e2a(\\(i\\leq n\\))\uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u5b50\u96c6\uff0c\u5220\u53bb\u8fd9\u4e2a\u5b50\u96c6\u5e76\u6dfb\u52a0\u4e00\u4e2a\u5b83\u4eec\u7684\\(\\text{mex}\\)\uff0c\u6c42\u6700\u7ec8\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u65f6\u5143\u7d20\u7684\u6700\u5927\u503c\u3002</p> <p>\\(n\\leq 10^5\\)</p> <p>\u9996\u5148\u4ec5\u6709\u4e00\u4e2a\u5143\u7d20\\(x\\)\u7684\u65f6\u5019\u9700\u8981\u7279\u5224\uff0c\u7ed3\u679c\u662f\\(\\max (1,x)\\)</p> <p>\u7136\u540e\uff0c\u53d1\u73b0\u4efb\u4f55\u5143\u7d20\u53ef\u4ee5\u53d8\u62100/1\uff0c\u53ea\u9700\u8981\u5355\u72ec\u628a\u5b83\u62ff\u51fa\u6765\u3002</p> <p>\u6b64\u5916\uff0c\u8fd9\u4e2a\u4e1c\u897f\u6ee1\u8db3\u53ef\u4e8c\u5206\u6027\uff0c\u8003\u8651\u53ef\u4ee5\u6784\u9020\u51fa\\(k\\)\u7684\u65f6\u5019\uff0c\\(k-1\\)\u4e00\u5b9a\u80fd\u901a\u8fc7\u628a\u4e00\u58060\u4e00\u8d77\u64cd\u4f5c\u6d88\u6389\u591a\u4f59\u7684\u3002</p> <p>\u6211\u4eec\u5012\u7740\u8003\u8651\u4e00\u4e2a\u4e1c\u897f\\(x\\)\u662f\u600e\u4e48\u751f\u6210\u7684\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u9700\u8981\\(0\\sim x-1\\)\u5404\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u524d\u9762\u9700\u8981\u7684\u4e2a\u6570+1\uff0c\u5047\u5982\u9700\u8981\\(k\\)\u4e2a\u5c31\\(+k\\)\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u4e00\u8def\u63a8\u8fc7\u53bb\u77e5\u9053\u9700\u8981\u591a\u5c11\u4e2a0\u3002\u5728\u63a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6709\u591a\u4f59\u7684\u5143\u7d20\uff0c\u6211\u4eec\u4e00\u5b9a\u4f1a\u53d8\u62100\u3002\u7136\u540e\u5c31\u6ca1\u4e86\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log n)\\)\uff0c\u56e0\u4e3a\u6700\u5927\u5143\u7d20\u4e5f\u4e0d\u4f1a\u5f88\u5927\uff0c\u5927\u6982\u4e5f\u5c31\u591a\u51e0\u5341\u7684\u6837\u5b50\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=2e5+10,M=55,mod=998244353,inf=1e15;\n\nint n;\nint hv[N],a[N],f[N];\n\nbool check(int mid){\n    for(int i=0;i&lt;=M;++i) a[i]=0;\n    int zero=0;\n    for(int i=mid;i&lt;n;++i) zero+=hv[i];\n\n    int cnt=1;\n    for(int i=mid-1;i&gt;=1;--i){\n        if(hv[i]&gt;=cnt){\n            zero+=hv[i]-cnt;\n        }\n        else{\n            int t=cnt-hv[i];\n            cnt+=t;\n            if(cnt&gt;inf) return 0;\n        }   \n    }\n    return zero+hv[0]&gt;=cnt;\n}\n\nvoid solve(){\n    n=read();int s=0;\n    for(int i=0;i&lt;n;++i) hv[i]=read(),s+=hv[i];\n    if(s==1){\n        if(hv[0] || hv[1]) cout&lt;&lt;\"1\"&lt;&lt;hvie;\n        else{\n            for(int i=0;i&lt;n;++i) if(hv[i]){\n                cout&lt;&lt;i&lt;&lt;hvie;\n            }\n        }\n        return;\n    }   \n    int l=0,r=N-1,ans=0;\n    while(l&lt;=r){\n        int mid=(l+r)&gt;&gt;1;\n        if(check(mid)) l=mid+1,ans=mid;\n        else r=mid-1;\n    }\n    cout&lt;&lt;ans&lt;&lt;hvie;\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>I.Query On A Tree 17</p> <p>\u7ed9\u5b9a\u4e00\u68f5\\(n\\)\u4e2a\u70b9\u7684\u6709\u6839\u6811\uff0c\u521d\u59cb\u6bcf\u4e2a\u70b9\u70b9\u6743\u4e3a\\(0\\)\uff0c\u6709\\(Q\\)\u6b21\u64cd\u4f5c\uff1a</p> <ul> <li>\u5c06\\(u\\)\u5b50\u6811\u5185\u6240\u6709\u70b9\u6743+1</li> <li>\u5c06\\(u,v\\)\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u6743+1</li> </ul> <p>\u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u6df1\u5ea6\u6700\u5c0f\u7684\u5e26\u6743\u91cd\u5fc3\uff0c\u5373\\(\\sum_{i=1}^ndis(i,x)\\)\u6700\u5c0f\u7684\\(x\\)\u3002</p> <p>\\(n,Q\\leq 10^5\\)</p> <p>\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\uff0c\u5e26\u6743\u91cd\u5fc3\u5b9e\u9645\u4e0a\u662f\u6240\u6709\u5b50\u6811\u6743\u503c\u548c\u7684\u6700\u5927\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9\u3002\u540c\u65f6\u6709\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff1a\u5e26\u6743\u91cd\u5fc3\u7684\u6bcf\u68f5\u5b50\u6811\u7684\u6743\u503c\u548c\u4e00\u5b9a\u5206\u522b\u5c0f\u4e8e\u7b49\u4e8e\u6240\u6709\u70b9\u6743\u548c\u7684\u4e00\u534a\uff0c\u4e14\u8981\u6c42\u5916\u5b50\u6811\u7684\u6743\u503c\u548c\u4e25\u683c\u5c0f\u4e8e\u6240\u6709\u70b9\u6743\u548c\u7684\u4e00\u534a\uff0c\u5426\u5219\u5fc5\u7136\u79fb\u52a8\u66f4\u4f18\u3002</p> <p>\u4f46\u5176\u5b9e\u8981\u6c42\u51fa\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\u7684\u6700\u6d45\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u597d\u627e\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u8282\u70b9\\(x\\)\u5728\\(dfs\\)\u5e8f\u4e0a\u4f1a\u6709\u4ec0\u4e48\u6027\u8d28\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\\(x\\)\u7684\u5916\u5b50\u6811\u90fd\u5df2\u7ecf\u904d\u5386\u8fc7\uff0c\u90a3\u4e48\u52a0\u4e0a\u8fd9\u4e2a\u70b9\u4ee5\u540e\uff0c\u5916\u5b50\u6811\u7684\u6743\u503c\u548c\u6070\u597d\u8d85\u8fc7\u4e86\\(\\lceil \\frac s 2\\rceil\\)\u3002\u800c\u66f4\u4e00\u822c\u7684\\(dfs\\)\u5e8f\u4e0a\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\u7684\u8282\u70b9\u5fc5\u7136\u662f\u5b83\u5b50\u6811\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\\(x\\)\u7684\u5916\u5b50\u6811\u9700\u8981\u5b8c\u5168\u904d\u5386\u624d\u80fd\u5230\\(\\lceil \\frac s 2\\rceil\\)\uff0c\u5982\u679c\u5916\u5b50\u6811\u6709\u6ca1\u6709\u904d\u5386\u7684\u70b9\uff0c\u5fc5\u7136\u4f1a\u66f4\u591a\u5730\u904d\u5386\\(x\\)\u7684\u5b50\u6811\uff0c\u800c\u4e14\u4ec5\u904d\u5386\\(x\\)\u7684\u5b50\u6811\u4e00\u5b9a\u4e5f\u80fd\u8fbe\u5230\\(\\lceil \\frac s 2\\rceil\\)\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u6c42\u51fa\u4efb\u610f\\(dfs\\)\u5e8f\uff0c\u7136\u540e\u76f8\u5f53\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u6c42\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u4f4d\u7f6e\\(x\\)\u3002\u6700\u540e\u6211\u4eec\u9700\u8981\u500d\u589e\u6c42\u51fa\u7b54\u6848\uff0ccheck\u7684\u65f6\u5019\u4ecd\u9700\u8981\u6ee1\u8db3\u4e0a\u9762\u7684\u6761\u4ef6\u3002</p> <p>\u7528\u6811\u94fe\u5256\u5206\u7ef4\u62a4\u6743\u503c\u5373\u53ef\uff0c\u590d\u6742\u5ea6\\(O((n+Q)\\log^2 n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=2e5+10,M=19,mod=998244353;\n\nint n;\nvector&lt;int&gt;G[N];\n\nstruct Seg{\n    #define ls (x&lt;&lt;1)\n    #define rs (x&lt;&lt;1|1)\n    #define mid ((l+r)&gt;&gt;1)\n    int sum[N&lt;&lt;2],len[N&lt;&lt;2],tag[N&lt;&lt;2];\n    void pushdown(int x){\n        if(!tag[x]) return;\n        sum[ls]+=len[ls]*tag[x];sum[rs]+=len[rs]*tag[x];\n        tag[ls]+=tag[x];tag[rs]+=tag[x];\n        tag[x]=0;\n    }\n    void pushup(int x){\n        sum[x]=sum[ls]+sum[rs];\n    }\n    void build(int x,int l,int r){\n        len[x]=r-l+1;sum[x]=tag[x]=0;\n        if(l==r) return;\n        build(ls,l,mid);build(rs,mid+1,r);\n    }\n    void update(int x,int l,int r,int L,int R){\n        if(L&lt;=l &amp;&amp; r&lt;=R){\n            sum[x]+=len[x];tag[x]++;\n            return;\n        }\n        pushdown(x);\n        if(L&lt;=mid) update(ls,l,mid,L,R);\n        if(R&gt;mid) update(rs,mid+1,r,L,R);\n        pushup(x);\n    }\n    int query(int x,int l,int r,int k){\n        if(l==r) return l;\n        pushdown(x);\n        if(sum[rs]&gt;k) return query(rs,mid+1,r,k);\n        return query(ls,l,mid,k-sum[rs]);\n    }\n    int querysum(int x,int l,int r,int L,int R){\n        if(L&lt;=l &amp;&amp; r&lt;=R) return sum[x];\n        pushdown(x);\n        int ret=0;\n        if(L&lt;=mid) ret+=querysum(ls,l,mid,L,R);\n        if(R&gt;mid) ret+=querysum(rs,mid+1,r,L,R);\n        return ret;\n    }\n    #undef ls\n    #undef rs\n    #undef mid\n}T;\n\nint ind;\nint fa[M][N],sz[N],dep[N],son[N];\nint top[N],in[N],out[N],id[N];\nvoid dfs1(int x,int f){\n    fa[0][x]=f;sz[x]=1;dep[x]=dep[f]+1;\n    for(int i=1;i&lt;M;++i) fa[i][x]=fa[i-1][fa[i-1][x]];\n    for(auto v:G[x]){\n        if(v==f) continue;\n        dfs1(v,x);\n        sz[x]+=sz[v];\n        if(sz[v]&gt;sz[son[x]]) son[x]=v;\n    }\n}\nvoid dfs2(int x,int tp){\n    top[x]=tp;in[x]=++ind;id[ind]=x;\n    if(son[x]) dfs2(son[x],tp);\n    for(auto v:G[x]){\n        if(v==fa[0][x] || v==son[x]) continue;\n        dfs2(v,v);\n    }\n    out[x]=ind;\n    //cout&lt;&lt;\"!!\"&lt;&lt;x&lt;&lt;\" \"&lt;&lt;in[x]&lt;&lt;\" \"&lt;&lt;out[x]&lt;&lt;hvie;\n}\n\nvoid solve(){\n    n=read();\n    for(int i=1;i&lt;n;++i){\n        int u=read(),v=read();\n        G[u].pb(v);G[v].pb(u);\n    }\n    dfs1(1,0);dfs2(1,1);\n    T.build(1,1,n);\n\n    int Q=read(),sum=0;\n    while(Q--){\n        int op=read();\n        if(op&amp;1){\n            int x=read();\n            sum+=out[x]-in[x]+1;\n            //cout&lt;&lt;in[x]&lt;&lt;\" \"&lt;&lt;out[x]&lt;&lt;hvie;\n            T.update(1,1,n,in[x],out[x]);\n        }\n        else{\n            int x=read(),y=read();\n            while(top[x]!=top[y]){\n                if(dep[top[x]]&lt;dep[top[y]]) swap(x,y);\n                sum+=in[x]-in[top[x]]+1;\n                T.update(1,1,n,in[top[x]],in[x]);\n                x=fa[0][top[x]];\n            }\n            if(dep[x]&gt;dep[y]) swap(x,y);\n            sum+=in[y]-in[x]+1;\n            T.update(1,1,n,in[x],in[y]);\n        }\n        int x=id[T.query(1,1,n,sum/2)];\n        for(int i=M-1;i&gt;=0;--i){\n            if(!fa[i][x]) continue;\n            int t=fa[i][x];\n            if(T.querysum(1,1,n,in[t],out[t])*2&lt;=sum) x=fa[0][t];\n        }\n        if(fa[0][x] &amp;&amp; T.querysum(1,1,n,in[x],out[x])*2&lt;=sum) x=fa[0][x];\n        printf(\"%lld\\n\",x);\n        //printf(\"get:%lld %lld %lld\\n\",x,sum,T.querysum(1,1,n,in[x],out[x]));\n        //printf(\"sum:%lld pos:%lld id:%lld\\n\",sum,T.query(1,1,n,sum/2),id[T.query(1,1,n,sum/2)]);\n    }\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"vp/cf-gym-102893/","title":"2020-2021 Russia Team Open, High School Programming Contest (VKOSHP 20)","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 20, solved 9/12</p> </li> </ul> <p>\u4e50\uff0c\u673a\u65f6\u4e0d\u591f\u3002</p>"},{"location":"vp/cf-gym-102893/#a-bank-transfer","title":"A. Bank Transfer","text":"<p>\u7b7e\u5230\u9898\uff0c\u6709\u4eba\u8bfb\u4e0d\u61c2\u3002</p>"},{"location":"vp/cf-gym-102893/#b-bacteria","title":"B. Bacteria","text":"<p>\u6bcf\u4e00\u7ec4\u6709\\(2^k\\)\u4f4d\u65f6\uff0c\u8bf4\u660e\u5df2\u7ecf\u5207\u5272\u4e86\\(n-k\\)\u6b21\u4e86\uff0c\u8fd9\u4e00\u5c42\u6709\\(2^{n-k}\\)\u7ec4\u3002\u5982\u679c\u8981\u6ee1\u8db3\u80fd\u53d6\u8fb9\\(2^k\\)\u4f4d\u7684\u6240\u6709\u503c\uff0c\u5c31\u8981\u6ee1\u8db3\uff1a</p> \\[ 2^{2^k}\\le 2^{n-k}\\\\ 2^k\\le n-k\\\\ n\\ge 2^k+k \\] <p>\u6240\u4ee5\\(k=0,1,2,3,4\\)\u65f6\uff0c\\(n\\)\u5206\u522b\u4e3a\\(1,3,6,11,20\\)\u3002\u6211\u4eec\u9700\u8981\u5728\u76f8\u5e94\u7684\u5c42\uff0c\u53d6\u904d\\(0\\dots 2^{2^k}-1\\)\u3002\u8fd9\u6837\u53ef\u4ee5\u6ee1\u8db3\u66f4\u6df1\u7684\u5c42\uff0c n\u6070\u597d\u7b49\u4e8e\\(1,3,6,11,20\\)\u65f6\uff0c\u8fd9\u4e00\u4e2a\u6392\u5217\u53ea\u4f1a\u91cd\u590d\u4e00\u6b21\uff0c\u800c\u5bf9\u4e8e\u5176\u4ed6\u7684n\uff0c\u5bf9\u4e8e\u66f4\u9ad8\u7684\u5c42\uff0c\u8981\u6ee1\u8db3\u76f8\u90bb\u4e24\u9879\u5408\u5e76\u540e\uff0c\u4efb\u4f55\u4e24\u7ec4\u4e0d\u76f8\u7b49\u3002 \u91cd\u590d\u6b21\u6570\u662f\\((2^n)/(2^{2^k}\\cdot 2^k)=2^{n-(k+2^k)}\\) \u53ef\u4ee5\u8fd9\u6837\u6784\u9020\uff1a\u7b2c\u4e00\u4e2a\u6570\u7ec4\u662f\\([0,2^{2^k})\\)\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u662f\\([1,0,1,1,1,3,...]\\)\uff0c\\([2,0,2,1,2,2,2,4,...]\\)\uff08\u4fdd\u8bc1\u540e\u4e00\u9879\u4e0d\u7b49\u4e8e\u524d\u4e00\u9879+1\uff09\uff0c\u8fd9\u6837\u505a\uff0c\u9996\u5148\u53ef\u4ee5\u6ee1\u8db3\u66f4\u6df1\u5c42\u6570\uff0c\u540c\u65f6\u53ef\u4ee5\u6ee1\u8db3\u4efb\u610f\u76f8\u90bb\u4e24\u7ec4\u62fc\u8d77\u6765\u540e\u4e0d\u76f8\u7b49\u3002\u8fd9\u4e48\u6784\u9020\u4e5f\u591f\u6ee1\u8db3\u91cd\u590d\u6b21\u6570\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\n\nvector&lt;vector&lt;int&gt;&gt; construct(int g,int n){\n    vector&lt;vector&lt;int&gt;&gt;ans;\n    vector&lt;int&gt;ord;\n    for(int i=0;i&lt;n;i++){\n        ord.pb(i);\n    }\n    ans.pb(ord);\n\n    for(int i=1;i&lt;g;i++){\n        ord=vector&lt;int&gt;({});\n        int v=0;\n        for(int j=0;j&lt;n;j++)if(j!=i+1){\n            ord.pb(i);\n            ord.pb(j);\n            if(++v==n) break;\n        }\n        ans.pb(ord);\n    }\n    return ans;\n}\n\nsigned main(){\n    int n=yh();\n    int mx=1,d=0;\n    if(n&gt;=1) mx=1,d=1;\n    if(n&gt;=3) mx=2,d=2;\n    if(n&gt;=6) mx=4,d=4;\n    if(n&gt;=11) mx=8,d=8;\n    if(n&gt;=20) mx=16,d=16;\n    string t=\"\";\n    // mx++,d++;\n    int total=1&lt;&lt;mx;\n    vector&lt;string&gt;st(total);\n    int k=(1&lt;&lt;n)/(total)/d;\n    vector&lt;int&gt;id(1&lt;&lt;mx);\n    iota(id.begin(),id.end(),0);\n    vector&lt;vector&lt;int&gt;&gt;ord=construct(k, total);\n\n    for(int i=0;i&lt;total;i++){\n        for(int k=0;k&lt;d;k++){\n            st[i].pb((char)('0'+(i&gt;&gt;k&amp;1)));\n        }\n    }\n    for(int i=0;i&lt;k;i++){\n        for(int j=0;j&lt;total;j++){\n            cout&lt;&lt;st[ord[i][j]];\n        }\n    }\n    return 0;\n}\n/*\n0010 0111\n1000 1010\n0100 0110\n1100 1110\n*/\n</code></pre>"},{"location":"vp/cf-gym-102893/#c-check-markers","title":"C. Check Markers","text":"<p>\u6bcf\u79cd\u989c\u8272\u7684\u7b14\u5206\u522b\u6709\\(a_i\\)\u4e2a\u652f\u597d\u7684\u548c\\(b_i\\)\u652f\u574f\u7684\uff0c\u6bcf\u6b21\u9009\u62e9\u4e0d\u540c\u8272\u7684\u4e24\u652f\uff0c\u5982\u679c\u76f8\u540c\u5c31\u505c\u6b62\uff0c\u5982\u679c\u9009\u4e2d\u81f3\u5c11\u4e00\u4e2a\u574f\u7684\u5c31\u90fd\u4e22\u6389\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u79cd\u53ef\u80fd\u4f7f\u5f97\u4e0d\u4f1a\u9009\u5230\u76f8\u540c\u7684\u3002</p> <p>\u4e00\u773c\u662f\u4e2a\u5339\u914d\uff0c\u628a\u597d\u7684\u5f80\u574f\u7684\u4e0d\u540c\u8272\u7684\u7b14\u8fde\u8fb9\uff0c\u73b0\u5728\u95ee\u9898\u53d8\u4e3a\uff0c\u662f\u5426\u5b58\u5728\u4e00\u79cd\u989c\u8272\uff0c\u53bb\u6389\u8fd9\u79cd\u989c\u8272\u7684\u6240\u6709\u597d\u7684\u7b14\u4ee5\u540e\u5b58\u5728\u4e00\u4e2a\u5b8c\u7f8e\u5339\u914d\u3002\u6839\u636e\u970d\u5c14\u5b9a\u7406\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u5de6\u53f3\u5b8c\u7f8e\u5339\u914d\u7684\u5145\u8981\u6761\u4ef6\u8fdb\u884c\u9650\u5236\u3002\u5047\u5982\u9009\u62e9\u7684\u989c\u8272\u662f\\(c\\)\uff0c\u90a3\u4e48\u8981\u6ee1\u8db3\\(\\sum a_i \\geq \\sum b_i-b_c,\\forall j\\neq c \\sum a_i\\leq a_j+b_j\\)\u3002</p> <p>\u7b80\u5355\u5904\u7406\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102893/#d-multiple-subject-lessons","title":"D. Multiple Subject Lessons","text":"<p>\u7206\u641c\uff0c\u6ca1\u5565\u597d\u8bf4\u7684\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\n\nll gg[33][33];\nll F[33][33];\nll g(int n,int m){\n    if(~gg[n][m]) return gg[n][m];\n    if(n==0) return gg[n][m]=1;\n    ll ans=0;\n    for(int i=min(n,m);i&gt;=1;i--){\n        ans+=g(n-i,i);\n    }\n    return gg[n][m]=ans;\n}\nll dfs(int n,int k){\n    if(~F[n][k]) return F[n][k];\n    if(n==0) return F[n][k]=1;\n    if(k==1){\n        return g(n,n);\n    }\n    ll ans=0;\n    for(int t=0;t&lt;=n;t++){\n        ans+=g(t,t)*dfs(n-t, k-1);\n    }\n    return F[n][k]=ans;\n}\n\n\nsigned main(){\n    memset(gg,-1,sizeof(gg));\n    memset(F,-1,sizeof(F));\n    int n=yh(),m=yh();\n    cout&lt;&lt;dfs(n,m)&lt;&lt;hvie;\n    return z0;\n}\n</code></pre>"},{"location":"vp/cf-gym-102893/#e-prank-at-ikea","title":"E. Prank at IKEA","text":"<p>\u6211\u4eec\u628a\u5c55\u5f00\u51b2\u7a81\u7684\u6c99\u53d1\u8fde\u8fb9\uff0c\u8981\u6c42\u7684\u5c31\u662f\u8fd9\u5e45\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002 \u8f93\u5165\u8f93\u51fa\u5904\u7406\u5341\u5206\u6076\u5fc3\u3002</p>"},{"location":"vp/cf-gym-102893/#f-sms-from-mchs","title":"F. SMS from MCHS","text":"<p>\u9605\u8bfb\u7406\u89e3\u7b7e\u5230\u9898\u3002</p>"},{"location":"vp/cf-gym-102893/#g-cooking","title":"G. Cooking","text":""},{"location":"vp/cf-gym-102893/#h-hard-work","title":"H. Hard Work","text":"<p>\u53ef\u4ee5\u628a\\([l,r]\\)\u7684\u6240\u6709\u6570\u5206\u5272\u6210\\(pref\\)+\\(\"***\"\\)\uff0c\u5230\u7684\u82e5\u5e72\u4e2a\u6bb5'*'\u8868\u793a0\u52309\u7684\u4efb\u4f55\u6570\u3002\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e2a\u6bb5\u53ea\u6709\\(O(\\log*10)\\)\u79cd\u7684\u3002 \u5bf9\u6bcf\u4e00\u6bb5\uff0c\u5982\u679c\u52a0\u4e0a\u661f\u53f7\u624d\u6210\u4e3a\u6700\u957f\uff0c\u90a3\u4e48\u6700\u540e\u7684\u661f\u53f7\u53ea\u80fd\u7b49\u4e8e\u6700\u540e\u4e00\u4f4d\u7684\u6570\u5b57\u3002\u5426\u5219\u661f\u53f7\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\uff0c\u7136\u540e\u6bcf\u4e00\u6bb5\u7684\u8d21\u732e\u5408\u5e76\u8d77\u6765\u5c31\u505a\u5b8c\u4e86\u3002 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\n\nint pw[maxn]={1};\nint ub(int x,int star){\n    return x*pw[star]+(pw[star]-1);\n}\nsigned main(){\n    for(int i=1;i&lt;=19;i++) pw[i]=pw[i-1]*10;\n    dwn(_,yh(),1){\n        int l=yh(),r=yh();\n        int global_max=0, total=0;\n        auto solve=[&amp;](int val, int star){\n            vector&lt;int&gt;dig;\n            while(val){\n                dig.pb(val%10);\n                val/=10;\n            }\n            reverse(dig.begin(),dig.end());\n            int mx=0,cnt=0;\n            int way=0;\n            for(int i=0,m=dig.size();i&lt;m;i++){\n                if(i==0||dig[i]!=dig[i-1]){\n                    cnt=1;\n                }\n                else cnt++;\n                if(cnt&gt;mx){\n                    mx=cnt;\n                }\n            }\n            if(star==0){\n                way=1;\n            }\n            else if(cnt+star&gt;mx){\n                way=1;\n                mx=cnt+star;\n            }\n            else{\n                way=pw[star];\n            }\n            if(mx&gt;global_max){\n                total=way;\n                global_max=mx;\n            }\n            else if(mx==global_max){\n                total+=way;\n            }\n        };\n        solve(l,0);\n        int val=l, star=0;\n        while(1){\n            val++;\n            while(val%10==0){\n                val/=10, star++;\n            }\n            while(star&amp;&amp;ub(val, star)&gt;r){\n                val*=10, star--;\n            }\n            if(ub(val,star)&gt;r) break;\n            solve(val,star);\n        }\n        cout&lt;&lt;(long long)global_max&lt;&lt;' '&lt;&lt;(long long)total&lt;&lt;hvie;\n    }\n    return 0;\n}\n</code></pre></p>"},{"location":"vp/cf-gym-102893/#i-points-and-segments","title":"I. Points and Segments","text":"<p>\u5b9e\u9645\u4e0a\u6700\u540e\u4f1a\u5206\u6210\u82e5\u5e72\u4e2a\u4e09\u89d2\u5f62\uff0c\u6211\u4eec\u8981\u5173\u5fc3\u7684\u662f\u6709\u591a\u5c11\u6761\u8fb9\uff0c\u4e0d\u7ba1\u600e\u4e48\u53d6\u8fb9\uff0c\u8fd9\u4e2a\u4e09\u89d2\u5256\u5206\u7684\u4e09\u89d2\u5f62\u6570\u548c\u8fb9\u6570\u90fd\u662f\u4e00\u6837\u7684\u3002\u53d1\u73b0\u8fb9\u6570\u548c\u51f8\u5305\u4e0a\u7684\u8fb9\u6570\u6709\u5173\u3002 \u8bbe\u5171\u6709F\u4e2a\u9762\uff0cE\u6761\u8fb9\uff0c\u51f8\u5305\u4e0a\u6709C\u4e2a\u8fb9\uff0c\u90a3\u4e48\u4e09\u89d2\u5f62\u6709\\(F-1\\)\u4e2a\uff0c\u6839\u636e\u6b27\u62c9\u516c\u5f0f\\(N-E+F=2\\), \\(3(F-1)=C+2(E-C)\\)\uff0c\u5c31\u89e3\u51fa\u6765\u4e86E\u7684\u503c\uff0c\u7136\u540e\u6bcf\u6b21\u753b\u4e00\u6761\u8fb9\uff0c\u5c31\u628a\u6240\u6709\u4e0e\u8fd9\u4e2a\u8fb9\u4e25\u683c\u76f8\u4ea4\u8fb9\u7684\u5224\u4e3a\u4e0d\u5408\u6cd5\u3002 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\nint sgn(int x){\n    if(x&gt;0) return 1;\n    if(x&lt;0) return -1;\n    return 0;\n}\nstruct vec{\n    int x,y;\n    vec(){}\n    vec(int x,int y):x(x),y(y){}\n};\nostream&amp;operator&lt;&lt;(ostream&amp;out,const vec&amp;A){out&lt;&lt;'('&lt;&lt;A.x&lt;&lt;','&lt;&lt;A.y&lt;&lt;')';return out;}\nvec operator+(const vec&amp;A,const vec&amp;B){return vec(A.x+B.x,A.y+B.y);}\nvec operator-(const vec&amp;A,const vec&amp;B){return vec(A.x-B.x,A.y-B.y);}\nvec operator*(const int&amp;B,const vec&amp;A){return vec(A.x*B,A.y*B);}\nvec operator*(const vec&amp;A,const int&amp;B){return vec(A.x*B,A.y*B);}\nvec operator/(const vec&amp;A,const int&amp;B){return vec(A.x/B,A.y/B);}\nint cross(const vec&amp;a,const vec&amp;b){\n    return a.x*b.y-a.y*b.x;\n}\nint dot(const vec&amp;a,const vec&amp;b){\n    return a.x*b.x+a.y*b.y;\n}\nvec trunc(const vec &amp;v){return vec(-v.y,v.x);}\nint len(const vec &amp;v){return hypot(v.x,v.y);}\nvec normalize(const vec&amp;v){\n    return v/(len(v));\n}\ntypedef vec point;\nint xmult(point a,point b,point o){\n    return cross(a-o,b-o);\n}\nstruct line{\n    vec s,e,v,n;\n    int angle;\n    line(){}\n    line(vec a,vec b):s(a),e(b){\n        v=b-a;\n        angle=atan2(v.y,v.x);\n        n=normalize(trunc(v));\n    }\n    bool operator&lt;(const line &amp;a )const{\n        if(sgn(angle-a.angle)==0){\n            return cross(v,a.e-s)&gt;=0;\n        }\n        return angle&lt;a.angle;\n    }\n};\nbool onLeft(line L,point P){\n    return cross(L.v,P-L.s)&gt;0;\n}\nint onSegment(point P,point A,point B){\n    if(sgn(xmult(A,B,P))) return 0;\n    int d=sgn(dot(A-P,B-P));\n    if(d==0) return 1;\n    if(d&lt;0) return 2;\n    return 0;  \n}\n\ntypedef vector&lt;point&gt;Polygon;\nvoid MakeConvex(Polygon &amp;C){\n    static int st[maxn];\n    int tot=0;\n    sort(C.begin(),C.end(),[&amp;](const point &amp;a,const point&amp;b){return a.y&lt;b.y||(a.y==b.y&amp;&amp;a.x&lt;b.x);});\n    point base=C[0];\n    st[++tot]=0;\n    for(auto &amp;p:C) p=p-base;\n    sort(C.begin()+1,C.end(),[&amp;](const point&amp;a,const point&amp;b){return cross(a,b)&gt;0||(cross(a,b)==0&amp;&amp;dot(a,a)&lt;dot(b,b));});\n    for(int i=1;i&lt;(int)C.size();st[++tot]=i++){\n        while(tot&gt;1&amp;&amp;xmult(C[st[tot]],C[i],C[st[tot-1]])&lt;=0){\n            tot--;\n        }\n    }\n    for(int i=0;i&lt;tot;i++){\n        C[i]=C[st[i+1]]+base;\n    }\n    C.resize(tot);\n}\n\nbool vis[305][305];\n// int xmult(point a,point b,point o){\n//  return cross(a-o,b-o);\n// }\nbool opposite(point a,point b,point u,point v){\n    return sgn(xmult(u,v,a))*sgn(xmult(u,v,b))&lt;0;\n}\nbool cross(point a,point b,point u,point v){\n    return opposite(a,b,u,v)&amp;&amp;opposite(u,v,a,b);\n}\nint n;\nPolygon p,c;\nvoid addedge(int a,int b){\n    if(a&gt;b) swap(a,b);\n    vis[a][b]=1;\n    for(int i=0;i&lt;n;i++)for(int j=i+1;j&lt;n;j++)if((i!=a||j!=b)&amp;&amp;!vis[i][j]){\n        if(cross(p[i],p[j],p[a],p[b])){\n            vis[i][j]=1;\n        }\n    }\n}\nsigned main(){\n    n=yh();\n    p.resize(n);\n    c.resize(n);\n    for(int i=0;i&lt;n;i++){\n        int x=yh(),y=yh();\n        p[i].x=x,p[i].y=y;\n        c[i].x=x,c[i].y=y;\n    }\n    MakeConvex(c);\n    int C=c.size();\n    int e=3*n-3-C;\n    if(e&amp;1){\n        cout&lt;&lt;1&lt;&lt;hvie; cout&lt;&lt;flush;\n        cout&lt;&lt;\"1 2\"&lt;&lt;hvie; cout&lt;&lt;flush;\n        addedge(0,1);\n        while(1){\n            int x=yh(),y=yh();\n            if(x==0&amp;&amp;y==0)break;\n            addedge(x-1,y-1);\n            for(int i=0;i&lt;n;i++)for(int j=i+1;j&lt;n;j++)if(!vis[i][j]){\n                cout&lt;&lt;i+1&lt;&lt;' '&lt;&lt;j+1&lt;&lt;hvie;cout&lt;&lt;flush;\n                addedge(i,j);\n                goto lab;\n            }\n            lab:;\n        }\n    }\n    else{\n        cout&lt;&lt;2&lt;&lt;hvie;cout&lt;&lt;flush;\n        while(1){\n            int x=yh(),y=yh();\n            if(x==0&amp;&amp;y==0)break;\n            addedge(x-1,y-1);\n            for(int i=0;i&lt;n;i++)for(int j=i+1;j&lt;n;j++)if(!vis[i][j]){\n                cout&lt;&lt;i+1&lt;&lt;' '&lt;&lt;j+1&lt;&lt;hvie;cout&lt;&lt;flush;\n                addedge(i,j);\n                goto lab2;\n            }\n            lab2:;\n        }\n    }\n    return 0;\n}\n</code></pre></p>"},{"location":"vp/cf-gym-102893/#j-straight","title":"J. Straight","text":"<p>\u76f4\u63a5\u8003\u8651\u6bcf\u4e2a\u5de6\u7aef\u70b9\u662f\u5426\u80fd\u6210\u4e3a\u7b54\u6848\u5e76\u4e0d\u597d\u505a\u3002\u89c2\u5bdf\u5230\u724c\u9762\u4e3a\\(i\\)\u7684\u724c\u5b9e\u9645\u4e0a\u5bf9\u5de6\u7aef\u70b9\\([i-m+1,i]\\)\u7684\u6709\u8d21\u732e\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u533a\u95f4+1\uff0c\u5982\u679c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\u5927\u4e8e\u7b49\u4e8e\\(m-s\\)\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u5de6\u7aef\u70b9\u3002\u5dee\u5206\u7edf\u8ba1\u53ef\u884c\u533a\u95f4\u957f\u5ea6\u5373\u53ef\u3002\u590d\u6742\u5ea6\\(O(m)\\)\uff0c\u6ce8\u610f\u8fb9\u754c\u3002</p>"},{"location":"vp/cf-gym-102893/#k-new-level","title":"K. New Level","text":"<p>\u7ed9\u5b9a\u4e00\u526f\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\\(1\\sim K\\)\u7684\u70b9\u6743\uff0c\u6ee1\u8db3\u76f8\u90bb\u4e24\u70b9\u7684\u70b9\u6743\u4e0d\u4e00\u6837\u3002\u73b0\u5728\u4f60\u8981\u7ed9\u6bcf\u4e2a\u70b9\u91cd\u65b0\u5b9a\u4e00\u4e2a\\(1\\sim K\\)\u7684\u6743\uff0c\u4f7f\u5f97\u76f8\u90bb\u4e24\u70b9\u70b9\u6743\u4e0d\u4e00\u6837\uff0c\u4e14\u6a21\\(K\\)\u610f\u4e49\u4e0b\u6070\u597d\u5dee1\u3002\\(n,m,K\\leq 5\\times 10^5\\)</p> <p>\u8fd9\u4e2a\u9898\u6709\u70b9\u5999\u554a\u3002 \u6211\u4eec\u9700\u8981\u89c2\u5bdf\u5230\uff0c\u5982\u679c\u4e00\u4e2a\u8fde\u901a\u5757\u6ee1\u8db3\u4e86\u9898\u76ee\u7684\u8981\u6c42\uff0c\u90a3\u4e48\u6211\u4eec\u540c\u65f6\u589e\u52a0\u51cf\u5c11\u76f8\u540c\u7684\u70b9\u6743\uff0c\u4e00\u5b9a\u4e5f\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4ece1\u5f00\u59cb\u6269\u5c55\uff0c\u6bcf\u6b21\u628a\u5305\u542b1\u6ee1\u8db3\u8981\u6c42\u7684\u8fde\u901a\u5757\u540c\u65f6+1\uff0c\u76f4\u5230\u4e00\u4e2a\u672a\u52a0\u5165\u8fde\u901a\u5757\u7684\u70b9\u521a\u597d\u80fd\u52a0\u5165\u8fde\u901a\u5757\u3002\u7531\u4e8e\u521d\u59cb\u70b9\u6743\u5df2\u7ecf\u6ee1\u8db3\u76f8\u90bb\u70b9\u4e0d\u540c\uff0c\u8fd9\u4e48\u505a\u662f\u4e00\u5b9a\u53ef\u884c\u7684\u3002\u6269\u5c55\u4e00\u4e2a\u70b9\u6700\u591a\u628a\u5f53\u524d\u65f6\u95f4\\(+(K-1)\\)\uff0c\u4e0d\u4f1a\u7206long long\u3002</p> <p>\u53ef\u4ee5\u7528set\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u80fd\u52a0\u5165\u7684\u6700\u5c0f\u65f6\u95f4\u3001\u6bcf\u4e2a\u70b9\u7684\u52a0\u5165\u65f6\u95f4\u3001\u5f53\u524d\u65f6\u95f4\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8ba1\u7b97\u6700\u7ec8\u7b54\u6848\uff0c\u7c7b\u4f3c\u6700\u77ed\u8def\u8fd9\u6837\u6269\u5c55\u5373\u53ef\u3002\u590d\u6742\u5ea6\\(O(n+m\\log m)\\)\u4e4b\u7c7b\u7684\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\n\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int N=5e5+10,M=N&lt;&lt;3,mod=1e9+7;\nint n,m,K,nowtim;\nint in[N],a[N];\nset&lt;pii&gt;st;\nvector&lt;int&gt;G[N];\n\nint checktim(int x){\n    if(!in[x]) return a[x];\n    return ((a[x]+(nowtim-in[x]))%K+K)%K;\n}\n\nint needtim(int x,int y){//each time add x 1\n    x=checktim(x);y=checktim(y);\n    if(abs(x-y)==1 || (x==0 &amp;&amp; y==K-1) || (x==K-1 &amp;&amp; y==0)) return 0;\n    if(x&lt;y) return y-1-x;\n    return (K-x)+y-1;\n}\n\nvoid solve(){\n    n=read();m=read();K=read();\n    for(int i=1;i&lt;=n;++i) a[i]=read()%K;\n    for(int i=1;i&lt;=m;++i){\n        int u=read(),v=read();\n        G[u].pb(v);G[v].pb(u);\n    }\n    nowtim=1;in[1]=1;\n    for(auto v:G[1]) st.insert(mkp(nowtim+needtim(1,v),v));\n    while(!st.empty()){\n        auto it=st.begin();\n        int t=it-&gt;fi,x=it-&gt;se;\n        st.erase(it);\n        if(in[x]) continue;\n        in[x]=t;nowtim=t;\n        for(auto v:G[x]){\n            if(in[v]) continue;\n            st.insert(mkp(nowtim+needtim(x,v),v));\n        }\n\n    }\n    for(int i=1;i&lt;=n;++i) cout&lt;&lt;checktim(i)+1&lt;&lt;\" \";\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n}\n/*\n4 4 4\n1 2 3 1\n1 2\n1 3\n2 3\n3 4\n*/\n</code></pre>"},{"location":"vp/cf-gym-102893/#l-the-firm-knapsack-problem","title":"L. The Firm Knapsack Problem","text":"<p>\u56de\u60f3\u4e00\u4e0b\u8d2a\u5fc3\u7684\u505a\u6cd5\uff1a\u6309\u6027\u4ef7\u6bd4\uff08\u4ef7\u503c\u9664\u4ee5\u4f53\u79ef\uff09\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u80fd\u9009\u5c31\u9009\u3002\u8fd9\u6837\u6211\u4eec\u9009\u51fa\u7684\u4e00\u5b9a\u662f\u5f53\u524d\u4f53\u79ef\u4e0b\u4ef7\u503c\u6700\u9ad8\u7684\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\u603b\u4ef7\u503c\u6700\u9ad8\u7684\u3002\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u989d\u5916\\(\\frac W 2\\)\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u5148\u9009\u62e9\u4e00\u4e2a\u4f53\u79ef\u5927\u4e8e\\(\\frac {W}{2}\\)\u7684\u7269\u54c1\uff0c\u5269\u4e0b\u7684\u8d2a\u5fc3\u5373\u53ef\u3002</p>"},{"location":"vp/cf-gym-102916/","title":"Samara Farewell Contest 2020 (XXI Open Cup, Grand Prix of Samara)","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 81, solved 7/14</p> </li> </ul> <p>\u597d\u9898\u8fd8\u633a\u591a\u7684\uff0c\u6bd4\u8d5b\u7684\u65f6\u5019\u7b7e\u5230\u9898\u548cM\u9898\u5361\u4e86\u592a\u4e45\uff0c\u5bfc\u81f4\u6ca1\u6709\u65f6\u95f4\u5199\u51e0\u4e2a\u5176\u5b9e\u5f88\u597d\u505a\u7684\u9898\u3002</p> <p>\u6709\u4e9b\u9898\u76ee\u7684\u89e3\u6cd5\u4e0e\u5b9e\u73b0\u65b9\u6cd5\u503c\u5f97\u601d\u8003\u3002</p> <p>A.Absenteeism</p> <p>\u4e00\u5929\u6709\\(m\\)\u4e2a\u5c0f\u65f6\\([0,m]\\)\uff0c\u6709\\(n\\)\u4e2a\u5de5\u4eba\uff0c\u5de5\u4f5c\u65f6\u95f4\u4e3a\\([a_i,b_i]\\)\uff0c\u73b0\u5728\u65b0\u52a0\u5165\u4e00\u4e2a\u5de5\u4eba\uff0c\u516c\u53f8\u5e0c\u671b\u4ed6\u7684\u5de5\u4f5c\u65f6\u95f4\u4e0d\u5c11\u4e8e\\(K\\)\u3002\u82e5\u4e00\u4e2a\u5de5\u4eba\u5de5\u4f5c\u65f6\u95f4\u4e3a\\([x,y]\\)\uff0c\u5f53\u53d1\u751f\u5982\u4e0b\u60c5\u51b5\u65f6\u4e0d\u80fd\u88ab\u8ba1\u7b97\uff1a</p> <ul> <li>\\(y-x&lt;K,\\exists i,\\text{s.t.}\\ a_i\\leq x&lt;y\\leq b_i\\)\uff0c\u5373\u6709\u4eba\u76ee\u7779\u4ed6\u7684\u5de5\u4f5c\u65f6\u957f\\(&lt;K\\)</li> <li>\\(y&lt;K,\\exists i,\\text{s.t.}\\ x&lt; a_i\\leq  y\\leq b_i\\)</li> <li>\\(x&gt;m-K,\\exists i,\\text{s.t.}\\ a_i\\leq x\\leq b_i&lt;y\\)</li> <li>\\(\\exists i,\\text{s.t.}\\ a_i\\leq K,b_i\\geq m-K,(y&lt;a_i || b_i&lt;x)\\)</li> </ul> <p>\u95ee\u4ed6\u6700\u5c11\u5de5\u4f5c\u7684\u65f6\u95f4\u533a\u95f4\u3002</p> <p>\u4e0d\u59a8\u5c06\u6240\u6709\\((a_i,b_i)\\)\u770b\u6210\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u90a3\u4e48\u73b0\u5728\u5c31\u662f\u6c42\u5408\u6cd5\u7684\\((x,y)\\)\uff0c\u4f7f\u5f97\\((y-x)\\)\u6700\u5c0f\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\u540e\u4e09\u79cd\u7684\u90e8\u5206\u662f\u77e9\u5f62\uff0c\u4f46\u7b2c\u4e00\u79cd\u7684\u8303\u56f4\u662f\u4e2a\u68af\u5f62\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u662f\u9650\u5236\u4e0d\u80fd\u5c0f\u4e8e\\(K\\)\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9650\u5236\u4e00\u70b9\u7528\u90fd\u6ca1\u6709\uff0c\u76f4\u63a5\u628a\\([a_i,b_i]\\times [a_i,b_i]\\)\u89c6\u4e3a\u4e0d\u5408\u6cd5\u5373\u53ef\u3002</p> <p>\u6700\u540e\u5c31\u626b\u63cf\u7ebf\u505a\u4e00\u4e0b\u77e9\u5f62\u5e76\u3002</p> <p>\u590d\u6742\u5ea6\u5e94\u8be5\u662f\\(O(n\\log n)\\)</p> <p>\u4ee3\u7801\u8fd8\u6ca1\u8865\uff0c\u5148\u7559\u5751\uff0c\u4e0d\u8fc7\u5e94\u8be5\u77e5\u9053\u610f\u601d\u5c31\u5f88\u597d\u505a\u4e86\uff0c\u4f30\u8ba1\u4e5f\u61d2\u5f97\u653e\u4e0a\u6765\u3002</p> <p>\u4ee3\u7801\u8fd8\u662f\u6709\u70b9\u4e11\u964b\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5,inf=1e9;\nint n,m,k;\nint a[maxn],b[maxn];\nmap&lt;int,vector&lt;tuple&lt;int,int,int&gt;&gt;&gt;seg;\nint tag[maxn*64],sum[maxn*64],len[maxn*64],mn[maxn*64];\n#define ls (v&lt;&lt;1)\n#define rs (v&lt;&lt;1|1)\n#define mid ((l+r)&gt;&gt;1)\nvoid addtag(int v,int a){\n    sum[v]+=a*len[v];\n    mn[v]+=a;\n    tag[v]+=a;\n}\nvoid pushdown(int v){\n    if(tag[v]){\n        addtag(ls,tag[v]);addtag(rs,tag[v]);\n        tag[v]=0;\n    }\n}\nvoid pushup(int v){\n    mn[v]=min(mn[ls],mn[rs]);\n}\nvoid build(int v,int l,int r){\n    len[v]=r-l+1; tag[v]=sum[v]=mn[v]=0;\n    if(l==r)return;\n    build(ls,l,mid);build(rs,mid+1,r);\n}\nvoid mdf(int v,int l,int r,int al,int ar,int val){\n    if(al&gt;ar) return;\n    if(al&lt;=l&amp;&amp;ar&gt;=r){\n        return addtag(v,val);\n    }\n    pushdown(v);\n    if(al&lt;=mid) mdf(ls,l,mid,al,ar,val);\n    if(ar&gt;mid) mdf(rs,mid+1,r,al,ar,val);\n    pushup(v);\n}\nint find(int v,int l,int r,int al,int ar){//\u67e5\u8be2\u533a\u95f4\u6700\u5927\u7684\u672a\u8986\u76d6\u70b9\n    // cout&lt;&lt;\"Find \"&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;' '&lt;&lt;al&lt;&lt;' '&lt;&lt;ar&lt;&lt;endl;\n    if(mn[v]&gt;0) return -1;\n    if(l==r) return l;\n    pushdown(v);\n    if(al&lt;=mid){\n        int res=find(ls,l,mid,al,ar);\n        if(res!=-1) return res;\n    }\n    if(ar&gt;mid){\n        int res=find(rs,mid+1,r,al,ar);\n        if(res!=-1) return res;\n    }\n    return -1;\n}\n//////////////////////////////////////////////\nvoid add_req(int x1,int y1,int x2,int y2){\n    // cout&lt;&lt;\"add \"&lt;&lt;x1&lt;&lt;' '&lt;&lt;y1&lt;&lt;' '&lt;&lt;x2&lt;&lt;' '&lt;&lt;y2&lt;&lt;hvie;\n    seg[x1].pb({y1,y2,1});\n    if(x2+1&lt;=m) seg[x2+1].pb({y1,y2,-1});\n}\nvector&lt;int&gt;Dy,Dx;\nint M;\n\nvoid discrete(){\n    for(auto [x,v]:seg){\n        Dy.pb(x);\n        if(x&gt;=1) Dx.pb(x-1);\n        if(x&lt;m) Dx.pb(x+1);\n        Dx.pb(x);\n        for(auto [y1,y2,k]:v){\n            Dy.pb(y1);\n            Dy.pb(y2);\n            if(y1-1&gt;=0) Dy.pb(y1-1);\n            if(y2-1&gt;=0) Dy.pb(y2-1);\n            if(y1+1&lt;=m) Dy.pb(y1+1);\n            if(y2+1&lt;=m) Dy.pb(y2+1);\n        }\n    }\n    Dy.pb(0);Dy.pb(m);\n    for(auto i:Dx) Dy.pb(i);\n    sort(Dx.begin(),Dx.end());\n    sort(Dy.begin(),Dy.end());\n    Dx.resize(unique(Dx.begin(),Dx.end())-Dx.begin());\n    Dy.resize(unique(Dy.begin(),Dy.end())-Dy.begin());\n    for(auto &amp;[x,v]:seg){\n        for(auto &amp;[y1,y2,k]:v){\n            y1=lower_bound(Dy.begin(),Dy.end(),y1)-Dy.begin();\n            y2=lower_bound(Dy.begin(),Dy.end(),y2)-Dy.begin();\n        }\n    }\n    M=Dy.size()-1;\n}\n\nint main(){\n    n=yh(),m=yh(),k=yh();\n    bool big=0;\n    rep(i,1,n){\n        a[i]=yh(),b[i]=yh();\n        Dx.pb(a[i]);\n        if(a[i]-1&gt;=0) Dx.pb(a[i]-1);\n        if(a[i]+1&lt;=m) Dx.pb(a[i]+1);\n        Dx.pb(b[i]);\n        if(b[i]-1&gt;=0) Dx.pb(b[i]-1);\n        if(b[i]+1&lt;=m) Dx.pb(b[i]+1);\n        if(a[i]&lt;=k-1){\n            add_req(0,a[i],m,min(k-1,b[i]));\n        }\n        if(m-k+1&lt;=b[i]){\n            add_req(max(m-k+1,a[i]),0,b[i],m);\n        }\n        if(a[i]&lt;=k&amp;&amp;b[i]&gt;=m-k){\n            big=1;\n            if(a[i]-1&gt;=0) add_req(0,0,m,a[i]-1);\n            if(b[i]+1&lt;=m) add_req(b[i]+1,0,m,m);\n        }\n        add_req(a[i],0,m,b[i]);\n    }\n    if(!big){\n        cout&lt;&lt;\"-1 -1\\n\";return 0;\n    }\n    Dx.pb(0);Dx.pb(m);\n\n    // for(auto [x,v]:seg){\n    //  cout&lt;&lt;x&lt;&lt;\":\";\n    //  for(auto [y1,y2,t]:v){\n    //      cout&lt;&lt;y1&lt;&lt;' '&lt;&lt;y2&lt;&lt;' '&lt;&lt;t&lt;&lt;\"  ,  \";\n    //  }\n    //  cout&lt;&lt;endl;\n    // }\n    discrete();\n    // for(auto i:Dy){\n    //  cout&lt;&lt;i&lt;&lt;',';\n    // }cout&lt;&lt;hvie;\n    build(1,0,M);\n    // cout&lt;&lt;Dy[M]&lt;&lt;\"!!!!!!\\n\";\n    int res;\n    pii ans={0,k};\n    for(auto x:Dx){\n        // cout&lt;&lt;x&lt;&lt;\"!\\n\";\n        int X=lower_bound(Dy.begin(),Dy.end(),x)-Dy.begin();\n        // cout&lt;&lt;X&lt;&lt;' '&lt;&lt;Dy[X]&lt;&lt;hvie;   \n        if(seg.count(x)){\n            vector&lt;tuple&lt;int,int,int&gt;&gt;&amp;v=seg[x];\n            // cout&lt;&lt;X&lt;&lt;','&lt;&lt;Dy[X]&lt;&lt;hvie;\n            for(auto [y1,y2,t]:v){\n                // cout&lt;&lt;\"cover \"&lt;&lt;y1&lt;&lt;' '&lt;&lt;y2&lt;&lt;' '&lt;&lt;Dy[y1]&lt;&lt;' '&lt;&lt;Dy[y2]&lt;&lt;' '&lt;&lt;t&lt;&lt;hvie;\n                mdf(1,0,M,y1,y2,t);\n            }\n        }\n        res=find(1,0,M,X,M);\n        // cout&lt;&lt;\"found:\"&lt;&lt;res&lt;&lt;\", \"&lt;&lt;Dy[res]&lt;&lt;hvie;\n        if(res!=-1&amp;&amp;Dy[res]-Dy[X]&lt;ans.se-ans.fi){\n            ans=mkp(Dy[X],Dy[res]);\n        }\n    }cout&lt;&lt;ans.fi&lt;&lt;' '&lt;&lt;ans.se&lt;&lt;hvie;\n    return 0;\n}\n</code></pre></p> <p>C.Cyclically Shifted Maze</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\\(n\\times m\\)\u7684\u5305\u542b'.'\u548c\u2018#\u2019\u7684\u77e9\u5f62\uff0c\u73b0\u5728\u53ef\u4ee5\u5bf9\u77e9\u5f62\u8fdb\u884c\u5e73\u79fb\u64cd\u4f5c\uff0c\u5373\u5c06\u6700\u53f3\u4e00\u5217\u653e\u5230\u6700\u5de6\u8fb9\uff0c\u6216\u8005\u5c06\u6700\u4e0b\u4e00\u5217\u653e\u5230\u6700\u4e0a\u9762\uff0c\u7528\\((r,c)\\)\u8868\u793a\u6570\u503c\u5e73\u79fb\\(r\\)\u6b21\uff0c\u6c34\u5e73\u5e73\u79fb\\(c\\)\u6b21\uff0c\u95ee\u54ea\u4e9b\u65b9\u5f0f\u53ef\u4ee5\u4f7f\u5f97\u6240\u6709'.'\u8fde\u901a\u3002</p> <p>\\(n,m\\leq 300\\)</p> <p>\u8003\u8651\u6211\u4eec\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u77e9\u5f62\u662f\u5426\u6240\u6709\u70b9\u8054\u901a\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u7528DSU\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5\uff0c\u53ea\u8981\u6bcf\u6b21\u5408\u5e76\u5c06\u8fde\u901a\u5757\u6570-1\u5373\u53ef\u3002</p> <p>\u6211\u4eec\u5148\u679a\u4e3e\\(r\\)\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u77e9\u5f62\uff0c\u518d\u8003\u8651\u6c34\u5e73\u65b9\u5411\u4e0a\u7684\u53d8\u6362\u3002\u4e0d\u96be\u53d1\u73b0\u5e73\u79fb\\(c\\)\u6b21\uff0c\u5b9e\u9645\u4e0a\u662f\u628a\u6700\u53f3\u8fb9\\(c\\)\u5217\u6700\u53f3\u5217\u7684\u5e76\u67e5\u96c6\u548c\u5de6\u8fb9\\(m-c\\)\u5217\u6700\u5de6\u5217\u7684\u5e76\u67e5\u96c6\u5408\u5e76\u3002\u6211\u4eec\u5206\u522b\u5904\u7406\u51fa\u524d\u7f00\u548c\u540e\u7f00\u7684DSU\uff0c\u7136\u540e\u5408\u5e76\u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u7684\u5904\u7406\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u6bd4\u5982\u6211\u4eec\u7ef4\u62a4\u524d\u7f00DSU\uff0c\u628a\u5f53\u524d\u5217\u52a0\u8fdb\u6765\u65f6\uff0c\u6211\u4eec\u8bb0\u5f55\u7684\u4e0d\u662f\u5f53\u524d\u5217\u7684DSU\u60c5\u51b5\uff0c\u800c\u662f\u4ece\u7b2c\u4e00\u5217findf\u540e\u7684DSU\u60c5\u51b5\uff0c\u8fd9\u6837\u5408\u5e76\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u51fa\u73b0fa\u4e3a0\u4e4b\u7c7b\u7684\u5947\u602a\u60c5\u51b5\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n^3)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=205,M=N*N;\nint n,m,tot;\nint pre[N][N],suf[N][N],fa[M],id[N][N],sufs[N],pres[N];\nchar s[N][N];\nvector&lt;pii&gt;ans;\n\nint findf(int x){return fa[x]==x?x:fa[x]=findf(fa[x]);}\nvoid merge(int x,int y,int &amp;cs){\n    int fx=findf(x),fy=findf(y);\n    if(fx==fy) return;\n    fa[fx]=fy;--cs;\n}\nvoid copy(){\n    tot=0;\n    for(int i=1;i&lt;=id[n][m];++i) fa[i]=i;\n}\n\nvoid solve(){\n    n=read();m=read();tot=0;\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%s\",s[i]+1);\n        for(int j=1;j&lt;=m;++j) id[i][j]=++tot;\n    }\n    for(int i=1;i&lt;=m;++i){//left\n        copy();\n        for(int j=1;j&lt;=n;++j){\n            for(int k=1;k&lt;=m;++k) tot+=s[j][k]=='.';\n            for(int k=1;k&lt;=m;++k){\n                if(k&lt;m &amp;&amp; s[j][k]=='.' &amp;&amp; s[j][k+1]=='.') merge(id[j][k],id[j][k+1],tot);\n                if(j&gt;1 &amp;&amp; s[j][k]=='.' &amp;&amp; s[j-1][k]=='.') merge(id[j][k],id[j-1][k],tot);\n            }\n            for(int k=1;k&lt;=m;++k) suf[j][k]=findf(id[1][k]);\n            sufs[j]=tot;\n            if(j==n &amp;&amp; tot==1) ans.pb(mkp(0,i-1));\n        }\n        copy();\n        for(int j=n;j&gt;1;--j){\n            for(int k=1;k&lt;=m;++k) tot+=s[j][k]=='.';\n            for(int k=1;k&lt;=m;++k){\n                if(k&lt;m &amp;&amp; s[j][k]=='.' &amp;&amp; s[j][k+1]=='.') merge(id[j][k],id[j][k+1],tot);\n                if(j&lt;n &amp;&amp; s[j][k]=='.' &amp;&amp; s[j+1][k]=='.') merg(id[j][k],id[j+1][k],tot); \n            }e\n            for(int k=1;k&lt;=m;++k) pre[j][k]=findf(id[n][k]);\n            pres[j]=tot;\n        }\n\n        for(int j=1;j&lt;n;++j){\n            tot=sufs[j]+pres[j+1];\n            for(int k=1;k&lt;=m;++k){\n                fa[suf[j][k]]=fa[id[1][k]]=suf[j][k];\n                fa[pre[j+1][k]]=fa[id[n][k]]=pre[j+1][k];\n            }\n            for(int k=1;k&lt;=m;++k){\n                if(s[1][k]=='.' &amp;&amp; s[n][k]=='.') merge(id[1][k],id[n][k],tot);\n            }\n            if(tot==1) ans.pb(mkp(j,i-1));\n        }\n        for(int j=1;j&lt;=n;++j){\n            char tmp=s[j][1];\n            for(int k=1;k&lt;m;++k) s[j][k]=s[j][k+1];\n            s[j][m]=tmp;\n        }\n    }\n    sort(ans.begin(),ans.end());\n    printf(\"%d\\n\",(int)ans.size());\n    for(auto v:ans) printf(\"%d %d\\n\",v.fi,v.se);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>D.Two Pirates - 2</p> <p>\u6709\\(n\\)\u4e2a\u7269\u54c1\uff0c\u4ef7\u503c\u5206\u522b\u4e3a\\(a_i\\)\uff0c\u4e24\u4e2a\u4eba\u8f6e\u6d41\u53d6\uff0cA\u5148\u53d6B\u540e\u53d6\u3002A\u6bcf\u6b21\u4f1a\u62ff\u4e00\u4e2a\u5f53\u524d\u6700\u5927\u4ef7\u503c\u7684\uff0cB\u6bcf\u6b21\u4f1a\u5728\u5f53\u524d\u7684\u968f\u673a\u62ff\u4e00\u4e2a\uff0c\u6c42\u4e24\u4e2a\u4eba\u62ff\u7684\u671f\u671b\u4ef7\u503c\u5206\u522b\u662f\u591a\u5c11\u3002</p> <p>\\(n\\leq 5000\\)</p> <p>\u9996\u5148\u7ed9\u7269\u54c1\u6309\u4ef7\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u5982\u679c\u6211\u4eec\u76f4\u63a5\u6b63\u7740\u8003\u8651\u6bcf\u4e2a\u7269\u54c1\u662f\u600e\u4e48\u5206\u914d\u7684\uff0c\u7531\u4e8e\u65b9\u6848\u6570\u592a\u591a\uff0c\u663e\u7136\u4e0d\u592a\u53ef\u884c\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u628a\u6bcf\u4e2a\u7269\u54c1\u6700\u540e\u7684\u5206\u914d\u6807\u4e0aA,B\uff0c\u518d\u8003\u8651\u8fd9\u4e2a\u5f62\u6001\u662f\u600e\u4e48\u6765\u7684\u5c31\u4f1a\u597d\u505a\u5f88\u591a\u3002</p> <p>\u4e0d\u59a8\u5047\u8bbe\u5df2\u77e5\u6700\u540e\\(n-1\\)\u4e2a\u7269\u54c1\u7684\u6807\u8bb0\uff0c\u6211\u4eec\u8003\u8651\u7b2c\\(n\\)\u4e2a\u7269\u54c1\uff08\u5b9e\u9645\u4e0a\u662f\u7b2c\u4e00\u4e2a\u62ff\u7684\u7269\u54c1\uff09\uff0c\u5bf9A\u6765\u8bf4\uff0c\u5b83\u4e00\u5b9a\u4f1a\u62ff\u6700\u53f3\u7684\u7684\u7269\u54c1\uff0c\u4e8e\u662f\u6211\u4eec\u5728\u6700\u53f3\u8fb9\u52a0\u4e00\u4e2aA\u3002</p> <p>\u90a3\u4e48\u5047\u5982\u73b0\u5728\u8f6e\u5230B\u5462\uff1f\u5b9e\u9645\u4e0a\u5b83\u4f1a\u628aB\u8fd9\u4e2a\u6807\u8bb0\u63d2\u5165\u5230\u4efb\u4f55\u4e00\u4e2a\u53ef\u80fd\u7684\u7a7a\uff0c\u8fd9\u65f6\u76f8\u5f53\u4e8e\u4f1a\u6539\u53d8\u67d0\u4e9b\u7269\u54c1\u7684\u6807\u8bb0\uff08\u8fd9\u91cc\u9700\u8981\u7406\u89e3\u4e00\u4e0b\uff09\u3002</p> <p>\u8bbe\\(f[i][j]\\)\u8868\u793a\u8003\u8651\u540e\\(i\\)\u4e2a\u6807\u8bb0\uff0c\u7b2c\\(j\\)\u4e2a\u662fA\u7684\u6982\u7387\uff0c\u5982\u679c\u5f53\u524d\u662fA\u64cd\u4f5c\uff0c\u90a3\u4e48\\(f[i+1][j]=f[i][j],f[i+1][i+1]=1\\)</p> <p>\u5982\u679c\u5f53\u524d\u662fB\u64cd\u4f5c\uff0c\u6211\u4eec\u8003\u8651\u73b0\u5728\u8981\u6c42\u7b2c\\(j\\)\u4e2a\u662fA\u7684\u6982\u7387\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651B\u7684\u63d2\u5165\u662f\u5426\u5f71\u54cd\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u663e\u7136\u6709\\(f[i+1][j]=f[i][j]\\cdot \\frac {j-1}{i+1}+f[i][i+1-j]\\cdot \\frac {j}{i+1}\\)</p> <p>\u53cd\u6b63\u5927\u6982\u662f\u8fd9\u6837\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n^2)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=5005;\nint n;\ndb f[N][N];\nint a[N];\nvoid solve(){\n    n=yh();\n    rep(i,1,n){\n        a[i]=yh();\n    }\n    sort(a+1,a+1+n);\n    dwn(i,n,1){\n        if(i&amp;1){\n            for(int j=1;j&lt;n-i+1;j++){\n                f[i][j]=f[i+1][j];\n            }\n            f[i][n-i+1]=1;\n        }\n        else{\n            int ct=n-i;//already\n            for(int j=1;j&lt;=ct+1;j++){\n                f[i][j]=f[i+1][j-1]*(db)(j-1)/(ct+1)+f[i+1][j]*(db)(ct+1-j)/(ct+1);\n            }\n        }\n        /*\n        for(int j=1;j&lt;=n;j++){\n            cout&lt;&lt;fixed&lt;&lt;setprecision(2)&lt;&lt;f[i][j]&lt;&lt;' ';\n        }\n        cout&lt;&lt;endl;\n        */\n    }\n    cout&lt;&lt;fixed&lt;&lt;setprecision(10);\n    db ans=0;\n    rep(j,1,n){\n        ans+=f[1][j]*a[j];\n    }\n    cout&lt;&lt;ans&lt;&lt;\" \"&lt;&lt;accumulate(a+1,a+1+n,(db)0.0)-ans&lt;&lt;hvie;\n}\n\nsigned main(){\n    solve();\n    return 0;\n}\n</code></pre> <p>F.Exactly One Point</p> <p>\u7ed9\u5b9a\\(n\\)\u6761\u7ebf\u6bb5\uff0c\u73b0\u5728\u9700\u8981\u786e\u5b9a\u4efb\u610f\u4e2a\u70b9\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u81f3\u5c11\u5728\u4e00\u6761\u7ebf\u6bb5\u4e0a\uff0c\u6bcf\u6761\u7ebf\u6bb5\u81f3\u591a\u5305\u542b\u4e00\u4e2a\u70b9\u3002</p> <p>\\(n\\leq 2\\times 10^5\\)</p> <p>\u505a\u6cd5\u633a\u663e\u7136\u7684\u3002</p> <p>\u6211\u4eec\u8bbe\\(f[i]\\)\u8868\u793a\u5728\\(i\\)\u5904\u653e\u70b9\u6700\u591a\u80fd\u6ee1\u8db3\u591a\u5c11\u6761\u7ebf\u6bb5\uff0c\u8003\u8651\u4e0a\u4e00\u4e2a\u53ef\u884c\u7684\u653e\u70b9\u4f4d\u7f6e\u3002\u8bbe\\(L_i\\)\u4e3a\u6240\u6709\u8986\u76d6\u8fd9\u4e2a\u70b9\u7684\u7ebf\u6bb5\u7684\u5de6\u7aef\u70b9\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u53ef\u884c\u7684\u4f4d\u7f6e\u5c31\u662f\\([0,L_i-1]\\)\u3002\u663e\u7136\u6211\u4eec\u9700\u8981\u4ece\u5176\u4e2d\u7684\u6700\u5927\u503c\u8f6c\u79fb\u8fc7\u6765\u3002</p> <p>\u4e8e\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\\(f\\)\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\u6c42\\(L_i\\)\u548c\u8fd9\u4e2a\u70b9\u8d21\u732e\u7684\u7ebf\u6bb5\u4e2a\u6570\u540c\u6837\u4e5f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log n)\\)</p> <p>\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\uff0c\u6bd4\u8f83\u7b80\u5355\u3002</p> <p>H.Video Reviews - 2</p> <p>\\(n\\)\u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u6709\u4e2a\u503c\\(a_i\\)\uff0c\u518d\u7ed9\u5b9a\\(K\\)\uff0c\u73b0\u5728\u8981\u786e\u5b9a\u4e00\u4e2a\u6700\u5c0f\u7684\\(c\\)\uff0c\u6ee1\u8db3\uff1a\u4f60\u94a6\u5b9a\u5176\u4e2d\\(c\\)\u4e2a\u4eba\uff0c\u521d\u59cb\\(m=0\\)\uff0c\u4ece\\(1\\sim n\\)\u904d\u5386\uff0c\u82e5\\(i\\)\u88ab\u94a6\u5b9a\uff0c\u6216\u8005\\(a_i\\leq m\\)\uff0c\u5219\\(++m\\)\uff0c\u8981\u6700\u540e\\(c\\geq K\\)\u3002</p> <p>\\(n\\leq 5\\times 10^7,t\\leq 10^5\\)\uff0c\u7a7a\u95f464MB</p> <p>\u6570\u636e\u7531\\(t\\)\u6bb5\u6570\u636e\u751f\u6210\u5668\u7ed9\u51fa\uff0c\u5f62\u5982\\(a_{i+1}=(a_i\\cdot x+y)\\% z\\)\uff0c\\(z\\)\u662f\u4e00\u4e2a\u7d20\u6570\u3002</p> <p>\u8fd9\u4e2a\u9898\u6709\u70b9\u4e1c\u897f\u7684\u3002</p> <p>\u9996\u5148\u4e8c\u5206\u7684\u505a\u6cd5\u5f88\u663e\u7136\uff0c\u4e0d\u8003\u8651\u7a7a\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8003\u8651\\(O(n)\\)\u7684\u505a\u6cd5\u600e\u4e48\u505a\u3002</p> <p>\u4e0d\u59a8\u4ece\u540e\u5f80\u524d\u8003\u8651\u4e00\u4e2a\u4f4d\u7f6e\u9700\u4e0d\u9700\u8981\u5b83\u8ba9\\(c+1\\)\uff1a</p> <ul> <li> <p>\u82e5\\(a_n&lt;K\\)\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u4f1a\u4f7f\\(c+1\\)\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\\((n-1,K-1)\\)</p> </li> <li> <p>\u82e5\\(a_n\\geq K\\)\u4e14\\(n=K\\)\uff0c\u8fd9\u4e2a\u4eba\u5fc5\u987b\u4f7f\\(c+1\\)\uff0c\u4e0d\u7136\u4e00\u5b9a\u4e0d\u5408\u6cd5\uff0c\u56e0\u6b64\u4e5f\u4f1a\u8f6c\u5316\u4e3a\\((n-1\uff0cK-1)\\)</p> </li> <li>\u82e5\\(a_n\\geq K\\)\u4e14\\(n&gt;K\\)\uff0c\u90a3\u4e48\u6b64\u65f6\u8981\u4e48\u524d\\(n-1\\)\u4e2a\u4eba\u5df2\u7ecf\u4f7f\u5f97\\(c\\geq K\\)\uff0c\u6b64\u65f6\u53ef\u4ee5\u5ffd\u7565\u7b2c\\(n\\)\u4e2a\u4eba\uff1b\u8981\u4e48\u524d\\(n-1\\)\u4e2a\u4eba\u4f7f\\(c=K-1\\)\uff0c\u60f3\u8981\u94a6\u5b9a\u7b2c\\(n\\)\u4e2a\u4eba\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u94a6\u5b9a\u524d\u9762\u7684\u4eba\u4e00\u5b9a\u4f1a\u4f7f\u5f97\u7b54\u6848\u66f4\u4f18\u3002\u56e0\u6b64\u8fd9\u65f6\u8f6c\u5316\u4e3a\\((n-1,m)\\)</li> </ul> <p>\u90a3\u4e48\u6211\u4eec\u5df2\u7ecf\u4f1a\u4ece\u540e\u5f80\u524d\u505a\u4e86\u3002</p> <p>\u4f46\u662f\u73b0\u5728\u7a7a\u95f4\u4e0d\u5141\u8bb8\u5b58\u4e0b\u6240\u6709\u6570\uff0c\u6211\u4eec\u600e\u4e48\u529e\uff1f</p> <p>\u4e8b\u5b9e\u4e0a\u7531\u4e8e\\(z\\)\u662f\u7d20\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u6570\u636e\u751f\u6210\u5668\u6bcf\u6bb5\u5206\u522b\u662f\u53ef\u9006\u7684\u3002\u6211\u4eec\u5bf9\u6bcf\u6bb5\u751f\u6210\u5668\u6c42\u51fa\u6700\u540e\u7684\u4e00\u4e2a\u6570\u662f\u591a\u5c11\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5012\u63a8\u56de\u53bb\u4e86\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=1e5+10,M=8e5+10,lim=8e5+2,inf=1e9;\nint n,m,now,K,ans;\nint c[N],x[N],y[N],z[N],las[N];\n\nint qpow(int x,int y,int mod){\n    int ret=1;\n    for(;y;y&gt;&gt;=1,x=1ll*x*x%mod)\n        if(y&amp;1) ret=1ll*ret*x%mod;\n    return ret;\n}\n\nvoid solve(){\n    n=read();m=read();now=read();K=read();\n\n    las[0]=now;\n    for(int i=1;i&lt;=K;++i){\n        c[i]=read();x[i]=read();y[i]=read();z[i]=read();\n        for(int j=0;j&lt;c[i];++j) now=(1ll*now*x[i]+y[i])%z[i];\n        las[i]=now;\n        x[i]=qpow(x[i],z[i]-2,z[i]);\n    }\n    for(int i=K;i;--i){\n        now=las[i];\n        for(int j=0;j&lt;c[i];++j,--n){\n            if(now&lt;m) --m;\n            else if(n&lt;=m) ++ans,--m;\n            now=1ll*x[i]*(now-y[i]+z[i])%z[i];\n        }\n    }\n    if(m &amp;&amp; now&gt;=m) ++ans;\n    printf(\"%d\\n\",ans);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>L.Not the Longest Increasing Subsequence</p> <p>\\(n\\)\u4e2a\u6570\u5b57\\(a_i\\)\uff0c\u6bcf\u4e2a\u6570\u5b57\u5728\\([1,K]\\)\uff0c\u95ee\u6700\u5c11\u5220\u53bb\u591a\u5c11\u4e2a\u4f7f\u5f97\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a\\(K\\)\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217</p> <p>\\(n\\leq 10^6\\)</p> <p>\u4e4d\u4e00\u770b\u662f\u5220\u53bb\u67d0\u4e00\u79cd\u5c31\u884c\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\uff0c\u6bd4\u5982(1,1,1,2,3,3,3,2,2,2,3)\u8fd9\u79cd\u3002</p> <p>\u6211\u4eec\u8003\u8651\\(f[i][j]\\)\u8868\u793a\u5230\u7b2c\\(i\\)\u4f4d\uff0c\\(1\\sim j\\)\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4e0d\u5b58\u5728\u7684\u6700\u5c0f\u5220\u9664\u6b21\u6570\uff0c\u90a3\u4e48\\(f[i][a[i]]=\\min(f[i-1][a[i]-1],f[i-1][a[i]]+1)\\)</p> <p>\u7136\u540e\u6bcf\u6b21\u53ea\u7528\u4e00\u4f4d\u4f1a\u6539\u53d8\uff0c\u800c\u4e14\u7b2c\u4e00\u7ef4\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u6539\u53d8\u7684\u6765\u6e90\uff0c\u65b9\u6848\u5c31\u53ef\u4ee5\u5012\u7740\u8f93\u51fa\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=1e6+10;\nint n,K;\nint a[N],f[N],las[N];\n\nvoid solve(){\n    n=read();K=read();\n    for(int i=1;i&lt;=n;++i) a[i]=read();\n    for(int i=1;i&lt;=n;++i){\n        las[i]=f[a[i]];\n        if(a[i]==1) f[a[i]]++;\n        else f[a[i]]=min(f[a[i]-1],f[a[i]]+1);\n    }\n    printf(\"%d\\n\",f[K]);\n    for(int i=n,nowmx=K;i&gt;=1;--i){\n        if(a[i]!=nowmx){\n            f[a[i]]=las[i];\n            continue;\n        }\n        if(las[i]+1==f[a[i]]) printf(\"%d \",i);\n        else --nowmx;\n        f[a[i]]=las[i];\n    }\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>M. Binary Search Tree</p> <p>\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6c42\u4ee5\u54ea\u4e9b\u70b9\u4e3a\u6839\u65f6\uff0c\u5b83\u662f\u4e00\u9897\u4e8c\u53c9\u6392\u5e8f\u6811\u3002</p> <p>\\(n\\leq 5\\times 10^5\\)</p> <p>\u7531\u4e8e\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u51fa\u73b0\u5ea6\u6570\u8d85\u8fc7 \\(3\\) \u7684\u70b9\u5fc5\u7136\u65e0\u89e3\u3002</p> <p>\u7edd\u5927\u90e8\u5206\u7684\u70b9\u53ef\u4ee5\u6839\u636e\u5b83\u76f8\u8fde\u7684\u70b9\u5224\u65ad\u5b83\u7684\u7ed3\u6784\u3002</p> <ul> <li>\u5bf9\u4e8e\u5ea6\u6570\u4e3a \\(3\\) \u7684\u70b9 \\(x\\)\uff0c\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u4e3a \\(a,b,c (a&lt;b&lt;c)\\)\uff0c\u73b0\u5728\u6839\u636e \\(x,a,b,c\\) \u7684\u5927\u5c0f\u5173\u7cfb\u5206\u60c5\u51b5\u8ba8\u8bba\u3002<ul> <li>\u82e5 \\(x&lt;a&lt;b&lt;c\\) \u6216 \\(a&lt;b&lt;c&lt;x\\)\uff0c\u6b64\u65f6\u65e0\u89e3</li> <li>\u82e5 \\(a&lt;x&lt;b&lt;c\\)\uff0c\u6b64\u65f6 \\(c\\) \u662f \\(x\\) \u7684\u7236\u8282\u70b9</li> <li>\u82e5 \\(a&lt;b&lt;x&lt;c\\)\uff0c\u6b64\u65f6 \\(a\\) \u662f \\(x\\) \u7684\u7236\u8282\u70b9</li> </ul> </li> <li>\u5bf9\u4e8e\u5ea6\u6570\u4e3a \\(2\\) \u7684\u70b9 \\(x\\)\uff0c\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u4e3a \\(a,b(a&lt;b)\\)\uff0c\u6b64\u65f6<ul> <li>\u82e5 \\(x&lt;a&lt;b\\)\uff0c\\(b\\) \u662f \\(x\\) \u7684\u7236\u8282\u70b9</li> <li>\u82e5 \\(a&lt;b&lt;x\\)\uff0c\\(a\\) \u662f \\(x\\) \u7684\u7236\u8282\u70b9</li> <li>\u82e5 \\(a&lt;x&lt;b\\)\uff0c\u60c5\u51b5\u4e0d\u660e</li> </ul> </li> <li>\u5bf9\u4e8e\u5ea6\u6570\u4e3a \\(1\\) \u7684\u70b9 \\(x\\)\uff0c\u60c5\u51b5\u4e0d\u660e</li> </ul> <p>\u800c\u5df2\u77e5\u72b6\u6001\u7684\u70b9\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u4f20\u9012\u4fe1\u606f\uff0c\u56e0\u6b64\u6700\u540e\u60c5\u51b5\u4e0d\u660e\u7684\u70b9\u5e94\u8be5\u5f88\u5c11\uff0c\u6811\u7684\u7ed3\u6784\u7edd\u5927\u90e8\u5206\u5df2\u7ecf\u786e\u5b9a\u3002</p> <p>\u4e0e\u9898\u89e3\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u91c7\u53d6\u76f8\u5bf9\u66b4\u529b\u7684\u89e3\u6cd5\uff0c\u679a\u4e3e\u6240\u6709\u70b9\u4f5c\u4e3a\u6839\uff0c\u4f9d\u6b21\u5224\u65ad\u53ef\u884c\u6027\uff0c\u6709map\u5c06\u6839\u4e3a \\(x\\) \u7684\u5b50\u6811\u7684\u76f8\u5173\u4fe1\u606f\u5b58\u50a8\uff0c\u53ef\u4ee5\u60f3\u5230\u60c5\u51b5\u6570\u4e0d\u4f1a\u5f88\u591a\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint main() {\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;vector&lt;int&gt;&gt; g(n + 1);\n\n    for (int i = 1, u, v; i &lt; n; ++i) {\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n\n    auto quit = [&amp;]() {\n        cout &lt;&lt; -1 &lt;&lt; endl;\n        exit(0);\n    };\n\n    auto father = vector(n + 1, 0);\n\n    for (int i = 1; i &lt;= n; ++i) {\n        if (g[i].size() &gt; 3)\n            quit();\n\n        sort(g[i].begin(), g[i].end());\n\n        if (g[i].size() == 3 &amp;&amp; (i &lt; g[i][0] || i &gt; g[i][2]))\n            quit();\n\n        if (g[i].size() == 3) {\n            if (i &lt; g[i][1])\n                father[i] = g[i][2];\n            else if (i &lt; g[i][2])\n                father[i] = g[i][0];\n        }\n\n        if (g[i].size() == 2) {\n            if (i &lt; g[i][0])\n                father[i] = g[i][1];\n\n            if (i &gt; g[i][1])\n                father[i] = g[i][0];\n        }\n    }\n\n    vector&lt;unordered_map&lt;int, array&lt;int, 3&gt;&gt;&gt; f(n + 1);\n\n    function&lt;array&lt;int, 3&gt;(int, int)&gt; dfs = [&amp;](int x, int fa) {\n        if (father[x] &amp;&amp; father[x] != fa)\n            return array&lt;int, 3&gt; {0, 0, 0};\n\n        if (f[x].count(fa))\n            return f[x][fa];\n\n        int ok = 1, small = x, big = x;\n        int bignum = 0, smallnum = 0;\n\n        for (auto v : g[x]) {\n            if (v == fa)\n                continue;\n\n            auto [a, b, c] = dfs(v, x);\n\n            if (!c)\n                ok = 0;\n\n            if ((v &lt; x &amp;&amp; b &gt; x) || (v &gt; x &amp;&amp; a &lt; x))\n                ok = 0;\n\n            small = min(small, a);\n            big = max(big, b);\n\n            if (v &lt; x &amp;&amp; smallnum++)\n                ok = 0;\n\n            if (v &gt; x &amp;&amp; bignum++)\n                ok = 0;\n        }\n\n        return f[x][fa] = {small, big, ok};\n    };\n\n    vector&lt;int&gt; ans;\n\n    for (int i = 1; i &lt;= n; ++i) {\n        if (dfs(i, 0)[2])\n            ans.push_back(i);\n    }\n\n    if (ans.empty())\n        quit();\n\n    for (auto x : ans)\n        cout &lt;&lt; x &lt;&lt; \" \";\n\n    return 0;\n}\n</code></pre>"},{"location":"vp/cf-gym-103371/","title":"XXII Open Cup, Grand Prix of Korea","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 135, solved 3/13</p> </li> </ul> <p>\u60e8\u906d\u6ed1\u94c1\u5362\u3002</p> <p>A. Automatic Sprayer 2</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\\(n\\times n\\)\u7684\u65b9\u9635\\(A\\)\uff0c\u4ee5\u4ee5\u4e0b\u65b9\u6cd5\u6c42\u51fa\u65b9\u9635\\(E\\)\uff1a\\(E_{i,j}=\\sum_{x=1}^n\\sum_{y=1}^n dist(i,j,x,y)A_{x,y}\\)\uff0c\u5176\u4e2d\\(dist(i,j,x,y)\\)\u662f\\((i,j)\\)\u5230\\((x,y)\\)\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\u73b0\u5df2\u77e5\\(E\\)\uff0c\u6c42\u6784\u9020\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\\(A\\)\u3002</p> <p>\\(1\\leq n\\leq 10^3\\)</p> <p>\u9996\u5148\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u5f0f\u5b50\u6211\u8d5b\u65f6\u90fd\u6ca1\u53d1\u73b0\u3002\u3002\u3002 \uff08\u5148\u9ed8\u8ba4\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09</p> \\[ E_{i,j}=\\sum_x\\sum_y A_{x,y}(|i-x|+|j-y|)\\\\=\\sum_x  |i-x|\\sum_y A_{x,y}+\\sum_y|j-y|\\sum_xA_{x,y} \\\\=\\sum_x |i-x|R_x+\\sum_{y}|j-y|C_y\\\\ \\] <p>\u7136\u540e\u8bbe\\(f_{k}(x)=|x-k|\\) \u90a3\u4e48\u6709\uff1a</p> \\[ \\Delta f_k(t)=|t+1-k|-|t-k|= \\left\\{ \\begin{matrix} 1 &amp;(t\\ge k)\\\\ -1&amp;(t&lt; k) \\end{matrix} \\right. \\] \\[ \\Delta^2f_k(t)=\\left\\{ \\begin{matrix} 2&amp;(t=k-1)\\\\ 0&amp;else \\end{matrix} \\right.\\] <p>\u6240\u4ee5</p> \\[ E_{i,j}=\\sum_{x}f_x(i)R_x+\\sum_y f_y(j)C(y)\\\\ E_{i+1,0}-E_{i,0}=\\sum_{x}\\Delta f_x(i)R_x\\\\ (E_{i+2,0}-E_{i+1,0})-(E_{i+1,0}-E_{i,0})=\\sum_{x}\\Delta^2f_x(i)R_x=2\\sum_{x}[i=x-1]R_x=2R_{i+1}\\\\ \u53732R_i=E_{i+1,0}-2E_{i,0}+E_{i-1,0} (1\\le i\\le n-2) \\] <p>\u540c\u7406\\(2C_i=E_{0,i+1}-2E_{0,i}+E_{0,i-1}\\)</p> <p>\u540c\u65f6\uff1a</p> \\[ E_{0,0}+E_{n-1,n-1}=\\sum_xR_x(|0-x|+|n-1-x|)+\\sum_{y}C_y(|0-x|+|n-1-y|)\\\\=(n-1)(\\sum_{x}R_x+\\sum_y C_y)=2(n-1)\\sum R_x=2(n-1)\\sum C_y \\] \\[ E_{n-1,n-1}=|n-1|(R_0+C_0)+\\sum_{x=1}^{n-2}|n-1-x|R_x +\\sum_{y=1}^{n-2}|n-1-y|C_y\\\\ E_{0,0}=|n-1|(R_{n-1}+C_{n-1})+\\sum_{x=1}^{n-2}|x|R_x+\\sum_{y=1}^{n-2}yC_y\\\\ E_{n-1,0}=|n-1|(R_0+C_{n-1})+\\sum_{x=1}^{n-2}|n-1-x|R_x+\\sum_{y=1}^{n-2}yC_y\\\\ E_{0,n-1}=|n-1|(R_{n-1}+C_0)+\\sum_{x=1}^{n-2}|x|R_x+\\sum_{y=1}^{n-2}|n-1-y|C_y\\\\ \\] <p>\u90a3\u4e48\uff0c\u8bbe</p> \\[ R_0+C_0=A\\\\ R_0+R_{n-1}=B\\\\ C_0+C_{n-1}=C\\\\ R_0+C_{n-1}=D\\\\ R_{n-1}+C_{0}=E\\\\ R_0=(A+B-E)/2\\\\ \\] <p>\u7136\u540e\u5176\u4ed6\u7684\u90fd\u80fd\u6c42\u4e86\uff0c\u77e5\u9053\\(R,C\\)\u4ee5\u540e\uff0c\u5c31\u80fd\u77e5\u9053\\(A_{x,y}\\)\u76f4\u63a5\u6bcf\u4e2a\u4f4d\u7f6e\\(A_{x,y}=\\min(R_{x},C_{y})\\)\uff0c\u7136\u540e\\(R_{x}\u548cC_{y}\\)\u540c\u65f6\u51cf\u5c31\u884c\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=1e3+5;\nint e[1005][1005];\nint r[1005],c[1005];\nint n;\nsigned main(){\n    n=yh();rep(i,0,n-1)rep(j,0,n-1)e[i][j]=yh();\n    rep(i,1,n-2){\n        r[i]=(e[i+1][0]-2*e[i][0]+e[i-1][0])&gt;&gt;1;\n        c[i]=(e[0][i+1]-2*e[0][i]+e[0][i-1])&gt;&gt;1;\n    }\n    int A=e[n-1][n-1],\n        B=(e[0][0]+e[n-1][n-1])/(2*(n-1)),\n        C=B,\n        D=e[n-1][0],\n        E=e[0][n-1];\n    rep(i,1,n-2) B-=r[i],C-=c[i];\n    rep(i,1,n-2){\n        A-=(n-1-i)*r[i]+(n-1-i)*c[i];\n        D-=(n-1-i)*r[i]+i*c[i];\n        E-=i*r[i]+(n-1-i)*c[i];\n    }\n    A/=(n-1),D/=(n-1),E/=(n-1);\n    // cout&lt;&lt;A&lt;&lt;' '&lt;&lt;B&lt;&lt;' '&lt;&lt;C&lt;&lt;' '&lt;&lt;D&lt;&lt;' '&lt;&lt;E&lt;&lt;hvie;\n    r[0]=(A+B-E)/2;\n    c[0]=A-r[0];\n    r[n-1]=B-r[0];\n    c[n-1]=C-c[0];\n    rep(i,0,n-1){\n        rep(j,0,n-1){\n            int a=min(r[i],c[j]);\n            cout&lt;&lt;a&lt;&lt;' ';\n            r[i]-=a;c[j]-=a;\n        }\n        cout&lt;&lt;hvie;\n    }\n    // rep(i,0,n-1){\n    //  cout&lt;&lt;r[i]&lt;&lt;' '&lt;&lt;c[i]&lt;&lt;hvie;\n    // }\n    return 0;\n}\n</code></pre> <p>C.Equivalent Pipelines</p> <p>\u7ed9\u5b9a\\(D\\)\u68f5\u6709\\(n\\)\u4e2a\u70b9\u7684\u6811\uff0c\u4e24\u68f5\u6811\u662f\u76f8\u4f3c\u7684\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e2a\u70b9\u5bf9\\((i,j)\\)\uff0c\\(i,j\\)\u8def\u5f84\u4e0a\u8fb9\u6743\u6700\u5c0f\u503c\u90fd\u76f8\u7b49\u3002\u95ee\u548c\u6bcf\u68f5\u6811\u76f8\u4f3c\u7684\u7f16\u53f7\u6700\u5c0f\u7684\u6811\u662f\u54ea\u68f5\uff08\u5305\u62ec\u81ea\u5df1\uff09\u3002</p> <p>\\(n\\cdot D\\leq 5\\times 10^5,1\\leq w_i\\leq 10^9\\)</p> <p>\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u5982\u4f55\u5224\u65ad\u4e24\u9897\u6811\u662f\u4e0d\u662f\u76f8\u4f3c\u3002</p> <p>\u8fb9\u6743\u6700\u5c0f\u503c\u76f8\u5f53\uff0c\u90a3\u5c31\u662f\u4ece\u5927\u5230\u5c0f\u52a0\u8fb9\uff0c\u5f53\u524d\u6743\u503c\u7684\u8fb9\u4f1a\u8fde\u901a\u4e24\u4e2a\u6216\u591a\u4e2a\u70b9\u96c6\u3002\u4e24\u68f5\u6811\u76f8\u4f3c\u5f53\u4e14\u4ec5\u5f53\u6bcf\u6b21\u52a0\u5165\u67d0\u4e2a\u6743\u503c\u7684\u8fb9\u65f6\uff0c\u65b0\u8054\u901a\u7684\u70b9\u5bf9\u90fd\u76f8\u540c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5feb\u901f\u5224\u65ad\u8fde\u901a\u7684\u70b9\u96c6\u662f\u5426\u76f8\u540c\uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u54c8\u5e0c\u3002\u800c\u4e14\u8fd9\u4e2a\u54c8\u5e0c\u65b9\u5f0f\u9700\u8981\u6ee1\u8db3\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u6743\u503c\u4e0d\u4f1a\u53d7\u5230\u52a0\u5165\u67d0\u76f8\u540c\u6743\u503c\u8fb9\u7684\u987a\u5e8f\u7684\u5f71\u54cd\u3002</p> <p>vp\u7684\u65f6\u5019\u6211\u80e1\u7684\u54c8\u5e0c\u65b9\u5f0f\u662f\uff1a\u52a0\u5165\u6743\u503c\\(w\\)\u7684\u8fb9\u5c06\u82e5\u5e72\u4e2a\u70b9\u96c6\u8fde\u901a\uff0c\u65b0\u7684\u6743\u503c\u5c31\u662f\u8fd9\u4e9b\u70b9\u96c6\u7684\u6743\u503c\u548c\u4e58\u4e0a\\(w\\)\uff0c\u800c\u54c8\u5e0c\u503c\u662f\u6240\u6709\u65b0\u5f62\u6210\u7684\u8fde\u901a\u5757\u7684\u6743\u503c\u4e58\u79ef\u3002\u8fd9\u79cd\u505a\u6cd5\u9700\u8981\u5c06\u6bcf\u6b21\u5408\u5e76\u7684\u54c8\u5e0c\u503c\u5b58\u4e0b\u6765\u6bd4\u8f83\uff0c\u8981\u6c42\u6bcf\u4e00\u6b65\u54c8\u5e0c\u503c\u90fd\u4e00\u6837\uff0c\u5199\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002</p> <p>\u8d5b\u540e\u770b\u522b\u4eba\u7684\u5199\u6cd5\uff0c\u53d1\u73b0\u53ea\u8981\u5b9a\u4e49\u4e3a\u65b0\u8fde\u901a\u7684\u70b9\u96c6\u6743\u503c\u4e58\u79ef\u4e4b\u548c\u518d\u4e58\u8fb9\u6743\u5373\u53ef\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u6309\u987a\u5e8f\u52a0\u8fb9\\((u,v)\\)\uff0c\u6bcf\u6b21\u5e76\u67e5\u96c6\u67e5\u4e00\u4e0b\u6839\uff0c\\(sum+=f[x]\\cdot f[y]\\cdot w,f[y]+=x\\)\u5c31\u662f\u5bf9\u7684\u4e86\uff0c\u751a\u81f3\u53ef\u4ee5\u53ea\u8fd4\u56de\u6700\u540e\u7684\u7ed3\u679c\uff0c\u4e0d\u9700\u8981\u6bd4\u5bf9\u4e2d\u95f4\u7ed3\u679c\u3002</p> <p>\u4f46\u662f\u4e8b\u5b9e\u4e0avp\u7684\u65f6\u5019\u6ca1\u8fc7\uff0c\u751a\u81f3\u53cc\u54c8\u5e0c\u4e5f\u6ca1\u8fc7\uff0c\u8d5b\u540e\u770b\u522b\u4eba\u4ee3\u7801\u624d\u77e5\u9053\u6bcf\u4e2a\u70b9\u7684\u521d\u59cb\u6743\u503c\u4e0d\u80fd\u4e3a\\(i\\)\u8fd9\u6837\u5f88\u5bb9\u6613\u53d1\u751f\u51b2\u7a81\uff0c\u4e00\u822c\u7684\u505a\u6cd5\u662f\u968f\u673a\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u521d\u59cb\u6743\u503c\u3002</p> <p>\u53e6\u5916\u5176\u5b9e\u5143\u7d20\u6743\u503c\u6bd4\u8f83\u5927\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u7d20\u6570\u6a21\u6570\uff0c\u6bd4\u5982\\(1e17+7\\)\u8fd9\u79cd\u3002</p> <p>\u590d\u6742\u5ea6\\(O(nD\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=6e5+10,mod=1e9+7,mod2=998244353;\n\nint n,D,cnt;\nint fa[N],f[N],g[N],ans[N];\nvector&lt;int&gt;vec[N];\nvector&lt;int&gt;ff[N],gg[N];\n\nstruct edg{\n    int u,v,w;\n    edg(int _u=0,int _v=0,int _w=0):u(_u),v(_v),w(_w){}\n}e[N];\n\nint findf(int x){return fa[x]==x?fa[x]:fa[x]=findf(fa[x]);}\nvoid merge(int x,int y){\n    x=findf(x);y=findf(y);\n    fa[x]=y;\n    f[y]+=f[x];f[y]%=mod;\n    g[y]+=g[x];g[y]%=mod2;\n}\nint ww[N];\nvoid gethash(int id){\n    for(int i=1;i&lt;=n;++i) fa[i]=i,f[i]=ww[i],g[i]=ww[i];\n    for(int i=1;i&lt;n;++i){\n        int u=read(),v=read(),w=read();\n        e[i]=edg(u,v,w);\n    }\n    sort(e+1,e+n,[&amp;](const edg&amp;A,const edg&amp;B){return A.w&gt;B.w;});\n    for(int i=1;i&lt;n;){\n        int j=i;\n        while(j+1&lt;n &amp;&amp; e[j+1].w==e[i].w) ++j;\n        for(int k=i;k&lt;=j;++k){\n            merge(e[k].u,e[k].v);\n        }\n        set&lt;int&gt;st;\n        for(int k=i;k&lt;=j;++k){\n            st.insert(findf(e[k].u));\n        }\n        int tot=1,tot2=1;\n        for(auto v:st){\n            f[v]*=e[i].w;f[v]%=mod;\n            g[v]*=e[i].w;g[v]%=mod2;\n            tot*=f[v];tot%=mod;\n            tot2*=g[v];tot2%=mod2;\n        }\n        i=j+1;\n        ff[id].pb(tot);\n        gg[id].pb(tot2);\n    }\n}\n\nvoid solve(vector&lt;int&gt;&amp;now,int dep){\n    vector&lt;int&gt;ok;\n    vector&lt;pair&lt;pii,int&gt;&gt;p;\n    for(auto v:now){\n        if(ff[v].size()&lt;dep) ok.pb(v);\n        else p.pb(mkp(mkp(ff[v][dep-1],gg[v][dep-1]),v));\n    }\n    if(ok.size()){\n        sort(ok.begin(),ok.end());\n        for(auto v:ok) ans[v]=ok[0];\n    }\n    if(p.size()){\n        sort(p.begin(),p.end());\n        int len=p.size();\n        for(int i=0;i&lt;len;){\n            vector&lt;int&gt;nxt;\n            int j=i;nxt.pb(p[i].se);\n            while(j+1&lt;len &amp;&amp; p[j+1].fi.fi==p[i].fi.fi &amp;&amp; p[j+1].fi.se==p[i].fi.se) ++j,nxt.pb(p[j].se);\n            //printf(\"nowsame:%lld %lld %lld\\n\",dep,i,j);\n            solve(nxt,dep+1);\n            i=j+1;\n        }\n    }\n}\n\n\nvoid solve(){\n    srand(19260817);\n    D=read();n=read();\n    for(int i=1;i&lt;=n;++i) ww[i]=rand();\n    for(int i=1;i&lt;=D;++i){\n        gethash(i);\n    }\n    vector&lt;int&gt;now;\n    for(int i=1;i&lt;=D;++i) now.pb(i);\n    solve(now,1);\n    for(int i=1;i&lt;=D;++i) printf(\"%lld \",ans[i]); \n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>D. Flowerbed Redecoration</p> <p>\u7ed9\u4f60\u4e00\u4e2a\\(n\\times m\\)\u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u4e2a\u5927\u5199\u5b57\u6bcd\u3002\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u6bcf\u6b21\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6\\(d\\times d\\)\u7684\u65b9\u683c\u5185\u7684\u5b57\u6bcd\uff0c\u7136\u540e\u628a\u5f85\u65cb\u8f6c\u533a\u57df\u6574\u4f53\u5411\u53f3\u79fb\u52a8\\(x\\)\u683c\uff0c\u5982\u679c\u65e0\u6cd5\u518d\u79fb\u52a8\u5c31\u628a\u8be5\u533a\u57df\u5411\u4e0b\u79fb\u52a8\\(y\\)\u683c\uff0c\u5e76\u653e\u5230\u6700\u5de6\u8fb9\u3002 \u95ee\u8fdb\u884c\u5b8c\\(((n-d)/y+1)((m-d)/x+1)\\)\u6b21\u65cb\u8f6c\u64cd\u4f5c\u4e4b\u540e\uff0c\u53d8\u6210\u4ec0\u4e48\u6837\u3002 \\(1\\le n\\times m\\le 10^6\\), \\(1\\le y\\le n, 1\\le x\\le m\\), \\(1\\le d \\le \\min(n,m)\\)</p> <p>\u8bbe\\(R\\)\u8868\u793a\u65cb\u8f6c\u5de6\u4e0a\\(d\\times d\\)\u65b9\u683c\u540e\u7684\u6392\u5217\uff0c\\(S_{i,j}\\)\u8868\u793a\u53f3\u79fb\\(i\\)\u683c\uff0c\u4e0b\u79fb\\(j\\)\u683c\u540e\uff08\u51fa\u754c\u7684\u4ece\u5de6/\u4e0a\u8fb9\u754c\u987a\u5ef6\uff09\u8868\u793a\u7684\u6392\u5217\u3002\u90a3\u4e48\uff0c\u65cb\u8f6c\\([i\\dots i+d-1,j\\dots j+d-1]\\)\u8fd9\u4e00\u5757\u5bf9\u5e94\u7684\u6392\u5217\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\(R_{i,j}=S_{-i,-j}RS_{i,j}\\)</p> <p>\u663e\u7136\u6211\u4eec\u77e5\u9053\\(S_{i,j}\\times S_{x,y}= S_{(i+x)\\%n,(j+y)\\%m}\\)\u4ee5\u53ca\\(S\\)\u4e4b\u95f4\u6709\u4f18\u79c0\u7684\u4ea4\u6362\u5f8b\uff0c\u7ed3\u5408\u5f8b\uff0c\u8fd8\u53ef\u4ee5\u968f\u4fbf\u62c6\u5206\u3002</p> <p>\u9898\u76ee\u76f8\u5f53\u4e8e\u662f\u8981\u6c42</p> \\[\\prod _{i=0}^{(n-d)/y}\\prod_{j=0}^{(m-d)/x} R_{iy,jx}=\\prod _{i=0}^{(n-d)/y}\\prod_{j=0}^{(m-d)/x} S_{-iy,-jx}RS_{iy,jx}\\\\=\\prod_{i=0}^{(n-d)/y} S_{-iy,0}RS_{iy,0}S_{-iy,-x}RS_{iy,x}\\cdots S_{-iy,(-n+1)x}RS_{iy,(m-d)}\\\\=\\prod_{i=0}^{(n-d)/y}S_{-iy,0}(RS_{0,-x})^{(n-d)/y+1}S_{0,m-d+x}S_{iy,0}\\] <p>\u4ee4\\((RS_{0,-x})^{(m-d)/x+1}S_{0,m-d+x}=T\\)\uff0c\u5219\u539f\u5f0f=</p> \\[ S_{0,0}TS_{0,0}S_{-y,0}TS_{y,0}\\cdots S_{-(n-d),0}TS_{n-d,0}\\\\=(TS_{-y,0})^{(n-d)/y}TS_{-y,0}S_{n-d+y,0} \\\\=(TS_{-y,0})^{(n-d)/y+1}S_{n-d+y,0} \\] <p>\u6c42\u6392\u5217\u7684\u4e58\u6cd5\u597d\u5199\uff0c\u7531\u4e8e\u6392\u5217\u7684\u4e58\u6cd5\u4e5f\u6709\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u80af\u5b9a\u80fd\u5feb\u901f\u5e42\u3002</p> <p>\u516c\u5f0f\u770b\u4f3c\u6709\u70b9\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u662f\u6211\u624b\u64b8\u8fc7\u540e\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u7684\u5408\u7406\u6027\u53ef\u4ee5\u7528\u516c\u5f0f\u6765\u8bc1\u660e\u3002\u3002</p> <p>\u5b9e\u9645\u4e0a\u662f\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff1a \u6bcf\u6b21\u201c\u5149\u6807\u201d\u53f3\u79fb\u518d\u65cb\u8f6c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u770b\u505a\u5149\u6807\u4e0d\u52a8\uff0c\u6574\u4f53\u5de6\u79fb\u4e00\u4e0b\u7136\u540e\u65cb\u8f6c\u4e00\u4e0b\uff0c\u8fd9\u6837\u91cd\u590d\\((m-d)/x+1\\)\u6b21\uff0c\u5c31\u80fd\u628a\u4e00\u884c\u8be5\u65cb\u8f6c\u7684\u90fd\u65cb\u8f6c\u4e86\uff0c\u4f46\u662f\u5dee\u4e86\u4e00\u70b9\u5e73\u79fb\u7684\u91cf\uff0c\u5c31\u628a\u5de6\u79fb\u7684\u91cf\u7ed9\u53f3\u79fb\u56de\u53bb\uff0c\u8fd9\u5c31\u662f\\(T=(RS_{0,-x})^{(m-d)/x+1}\\times S_{0,m-d+x}\\)\u7684\u610f\u4e49\uff0c\u4e00\u884c\u65cb\u8f6c\u5b8c\u8fc7\u540e\uff0c\u518d\u5bf9\u6bcf\u4e00\u884c\u65bd\u52a0\u8be5\u79cd\u53d8\u5316\u4e5f\u53ef\u4ee5\u7528\u76f8\u540c\u7684\u60f3\u6cd5\u3002\u6240\u4ee5\u53c8\u6709\u4e86\\(G=(TS_{-x,0})^{(n-d)/y+1}\\)\u6700\u540e\u628a\u504f\u79fb\u91cf\\(S_{n-d+y,0}\\)\u52a0\u4e0a\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\nint n,m,d,x,y;\nint id(int x,int y){return x*m+y;}\nvector&lt;int&gt; merge(const vector&lt; int&gt;&amp;a,const vector&lt;int&gt;&amp;b){\n    vector&lt;int&gt;ret(a.size());\n    rng(i,0,(int)a.size()) ret[i]=a[b[i]];\n    return ret;\n}\nvector&lt;int&gt; rot(){\n    vector&lt;int&gt;ret(n*m);\n    rng(i,0,n)rng(j,0,m){\n        if(i&lt;d&amp;&amp;j&lt;d){\n            int i1=j,j1=d-1-i;\n            ret[id(i1,j1)]=id(i,j);\n        }\n        else{\n            ret[id(i,j)]=id(i,j);\n        }\n    }return ret;\n}\nvector&lt;int&gt;shift(int sx,int sy){//\u53f3\u79fb\uff0c\u4e0b\u79fb\n    sx=(sx%n+n)%n,sy=(sy%m+m)%m;\n    vector&lt;int&gt;ret(n*m);\n    rng(i,0,n)rng(j,0,m){\n        int x1=(i+sx)%n,y1=(j+sy)%m;\n        ret[id(x1,y1)]=id(i,j);\n    }return ret;\n}\nvector&lt;int&gt;ksm(vector&lt;int&gt; p,int k){\n    vector&lt;int&gt;a(p.size());\n    iota(a.begin(),a.end(),0);\n    for(;k;k&gt;&gt;=1,p=merge(p,p))if(k&amp;1)a=merge(a,p);\n    return a;\n}\nsigned main(){\n    n=yh(),m=yh(),x=yh(),y=yh(),d=yh();\n    vector&lt;string&gt;s(n);\n    rng(i,0,n)cin&gt;&gt;s[i];\n    vector&lt;int&gt;p=merge(rot(),shift(0,-y));\n    p=ksm(p,(m-d)/y+1); \n    p=merge(p,shift(-x,m-d+y));\n    p=ksm(p,(n-d)/x+1);\n    p=merge(p,shift(n-d+x,0));\n    rep(i,0,n-1){\n        rep(j,0,m-1){\n            int x=p[id(i,j)]/m,y=p[id(i,j)]%m;\n            cout&lt;&lt;s[x][y];\n        }\n        cout&lt;&lt;hvie;\n    }\n    return 0;\n}\n/*\n2 4 1 1 2\nABEF\nCDGH\n\n\n*/\n</code></pre> <p>E. Goose Coins</p> <p>\\(n\\)\u679a\u786c\u5e01\uff0c\u4ef7\u503c\u4e3a\\(c_i\\)\uff0c\u91cd\u91cf\u4e3a\\(w_i\\)\uff0c\u7ed9\u4f60\\(k,p\\)\u8981\u4f60\u5206\u522b\u6c42\u51fa\u7528\\(k\\)\u679a\u786c\u5e01\uff0c\u7ec4\u5408\u51fa\u4ef7\u503c\u548c\u4e3a\\(p\\)\u7684\u6700\u5c0f\u91cd\u91cf\u548c\u6700\u5927\u91cd\u91cf\u3002</p> <p>\\(1\\le n\\le 60\\), \\(c_{i}|c_{i+1}\u4e14c_{i+1}/c_{i}&gt;1\\), \\(1\\le k\\le 10^3\\) , \\(1\\le p,c_i\\le 10^{18}\\), \\(1\\le w_i\\le 10^{15}\\)</p> <p>\u9996\u5148\uff0c\u5982\u679c\\(c_1\\)\u4e0d\u6574\u9664\\(p\\)\u90a3\u663e\u7136\u5bc4\u4e86\u3002</p> <p>\u7528\u8d2a\u5fc3\u6c42\u51fa\u6700\u5c0f\u7684\u7ec4\u5408\u51fa\\(p\\)\u4ef7\u503c\u7684\u5404\u4e2a\u786c\u5e01\u6570\u91cf\uff0c\u4f5c\u4e3a\u57fa\u7840\u89e3\uff0c\u8bbe\u6bcf\u4e2a\u786c\u5e01\u7684\u6570\u91cf\u4e3a\\(a_i\\)\uff0c\u5982\u679c\u57fa\u7840\u89e3\u7684\u603b\u6570\u91cf\u90fd\\(&gt;k\\)\u90a3\u80af\u5b9a\u5bc4\u4e86\u3002</p> <p>\u7136\u540e\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u628a\u57fa\u7840\u89e3\u7684\u786c\u5e01\u6570\u91cf\u6269\u5145\uff0c\u5177\u4f53\u65b9\u6cd5\u4e3a\u7528\u540c\u7b49\u4ef7\u503c\u7684\u66f4\u4f4e\u7ea7\u7684\u786c\u5e01\u6765\u66ff\u4ee3\u8be5\u786c\u5e01\u3002</p> <p>\u8bbe\\(W_i\\)\u4e3a\u4e00\u4e2a\u80cc\u5305\uff0c\\(W_{i}[k]\\)\u8868\u793a\u4e00\u4e2a\\(c_i\\)\u4ef7\u503c\u7684\u786c\u5e01\uff0c\u4e0d\u53d8\u6216\u8005\u901a\u8fc7\u53d8\u6210\u66f4\u4f4e\u7ea7\u7684\u786c\u5e01\uff0c\u7ec4\u6210\\(k\\)\u679a\u786c\u5e01\u7684\u6700\u5c0f\u91cd\u91cf\u3002</p> <p>\u5b9a\u4e49\u8fd0\u7b97\\((W_a\\times W_b)[k]=\\min_{i+j=k}W_a[i]+W_b[j]\\)\uff0c\u90a3\u4e48merge\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u4e3a\\(k^2\\)</p> <p>\u663e\u7136\u53ef\u4ee5\u8fdb\u884c\u5feb\u901f\u5e42\uff0c\u590d\u6742\u5ea6\\(O(k^2\\log p)\\)\u3002</p> <p>\u90a3\u4e48\u7b54\u6848\u5c31\u662f\\(\\prod_{i=1}^n W_i^{a_i}\\)</p> <p>\u540c\u65f6\u6709\uff1a\\(W_{1}[{1}]=w_1,W_{1}[others]=\\infty\\)</p> <p>\u5176\u4e2d\\(W_{i}[1]=w_i\\)\uff0c\u5bf9\u4e8e\\(j&gt;1, W_{i}[j]=W_{i-1}^{c_i/c_{i-1}}\\)</p> <p>\u603b\u590d\u6742\u5ea6\\(O(n k^2 \\log {\\max ({c_i/c_{i-1}},a_i)})\\)</p> <p>G.Lamb's Respite</p> <p>\u5343\u73cf\u5c06\u4f1a\u53d7\u5230\\(n\\)\u6b21\u64cd\u4f5c\\(a_i\\)\uff0c\u6bcf\u6b21\u8840\u91cf\u4f1a\\(+=a_i\\)\uff0c\u8840\u52300\u6216\u4ee5\u4e0b\u5c31\u5bc4\u4e86\u3002\u5343\u73cf\u653e\u5927\u7684\u65f6\u5019\u53ef\u4ee5\u9501\u8840\uff0c\u5047\u5982\u8840\u4e0a\u9650\u662f\\(H\\)\uff0c\u90a3\u4e48\u653e\u5927\u671f\u95f4\u5982\u679c\u8840\u91cf\u5c0f\u4e8e\u7b49\u4e8e\\(\\lceil \\frac H {10} \\rceil\\)\uff0c\u5b83\u5c31\u4f1a\u4e00\u76f4\u662f\\(\\lceil \\frac H {10} \\rceil\\)\uff08\u5305\u62ec\uff09\u3002</p> <p>\u73b0\u5728\u6709\\(Q\\)\u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li>\u5047\u5982\u5343\u73cf\u8840\u4e0a\u9650\u662f\\(x\\)\uff0c\u95ee\u5728\\([l,r]\\)\u653e\u5927\u6700\u7ec8\u7684\u8840\u91cf\uff08\u62160\u8868\u793a\u6b7b\u4e86\uff09</li> <li>\u4fee\u6539\\(a_i\\)\u4e3a\\(x\\)\uff0c\u4fee\u6539\u4f1a\u7ee7\u627f\u3002</li> </ul> <p>\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u628a\u6574\u4e2a\u62c6\u6210\u4e09\u6bb5\u64cd\u4f5c\u3002</p> <p>\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u6700\u5bb9\u6613\u5bc4\uff0c\u663e\u7136\u662f\u6700\u5c0f\u5b50\u6bb5\u548c\u7684\u65f6\u5019\u3002\u5047\u5982\u6700\u5c0f\u5b50\u6bb5\u548c\u662f\\([l,r]\\)\uff0c\u610f\u5473\u7740\u8fd9\u671f\u95f4\u90fd\u4f1a\u662f\u6263\u8840\uff0c\u800c\u4e14\u8fd9\u4e4b\u524d\u5982\u679c\u6ca1\u6b7b\u4e00\u5b9a\u662f\u6ee1\u8840\uff0c\u8fd9\u4e4b\u540e\u5982\u679c\u6ca1\u6b7b\u8840\u91cf\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u4f4e\u3002</p> <p>\u5bf9\u4e8e\u6700\u540e\u7684\u8840\u91cf\u8ba1\u7b97\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u6700\u5c0f\u540e\u7f00\u548c\u7684\u4f4d\u7f6e\u53ef\u4ee5\u7b80\u5355\u5f97\u5230\uff0c\u56e0\u4e3a\u6700\u5c0f\u540e\u7f00\u548c\u5b9e\u9645\u4e0a\u662f\u6700\u540e\u4e00\u4e2a\u53ef\u80fd\u9876\u5230\u8840\u4e0a\u9650\u7684\u4f4d\u7f6e\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u5b50\u6bb5\u548c\u4ee5\u53ca\u6700\u5c0f\u540e\u7f00\uff08\u8fd9\u4e2a\u6700\u5c0f\u5b50\u6bb5\u548c\u4e5f\u987a\u4fbf\u7ef4\u62a4\u4e86\uff09\uff0c\u8fd8\u6709\u533a\u95f4\u548c\u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=3e5+10,mod=1e9+7,mod2=998244353;\nint n,Q;\nint a[N];\n\nstruct node{\n    int sum,mn,rmn,lmn;\n    node(){}\n    node(int x){sum=x;mn=lmn=rmn=min(0ll,x);}\n}t[N&lt;&lt;2];\nnode operator +(const node&amp;A,const node&amp;B){\n    node ret;\n    ret.sum=A.sum+B.sum;\n    ret.lmn=min(A.lmn,A.sum+B.lmn);\n    ret.rmn=min(B.rmn,B.sum+A.rmn);\n    ret.mn=min({A.mn,B.mn,A.rmn+B.lmn});\n    return ret;\n}\n\nstruct Seg{\n    #define ls (x&lt;&lt;1)\n    #define rs (x&lt;&lt;1|1)\n    #define mid ((l+r)&gt;&gt;1)\n\n    void pushup(int x){\n        t[x]=t[ls]+t[rs];\n    }\n    void build(int x,int l,int r){\n        if(l==r){\n            t[x]=node(a[l]);\n            return;\n        }\n        build(ls,l,mid);build(rs,mid+1,r);\n        pushup(x);\n    }\n    void update(int x,int l,int r,int p,int v){\n        if(l==r){\n            t[x]=node(v);\n            return;\n        }\n        if(p&lt;=mid) update(ls,l,mid,p,v);\n        else update(rs,mid+1,r,p,v);\n        pushup(x);\n    }\n    node query(int x,int l,int r,int L,int R){\n        if(L&lt;=l &amp;&amp; r&lt;=R) return t[x];\n        if(R&lt;=mid) return query(ls,l,mid,L,R);\n        if(L&gt;mid) return query(rs,mid+1,r,L,R);\n        return query(ls,l,mid,L,mid)+query(rs,mid+1,r,mid+1,R);\n    }\n    #undef ls\n    #undef rs\n    #undef mid\n}T;\n\nint solve(int l,int r,int H){\n    node tmp;\n    int h=H;\n    if(l&gt;1){\n        tmp=T.query(1,1,n,1,l-1);\n        if(h+tmp.mn&lt;=0) return 0;\n        h+=tmp.rmn;\n    }\n\n    int lim=(H+9)/10;\n    tmp=node(h-H)+T.query(1,1,n,l,r);\n    if(H+tmp.mn&lt;=lim) h=lim;\n    else h=H+tmp.rmn;\n\n    if(r&lt;n){\n        tmp=node(h-H)+T.query(1,1,n,r+1,n);\n        if(H+tmp.mn&lt;=0) return 0;\n        h=H+tmp.rmn;\n    }\n    return h;\n}\n\nvoid solve(){\n    n=read();Q=read();\n    for(int i=1;i&lt;=n;++i) a[i]=read();\n    T.build(1,1,n);\n    while(Q--){\n        int op=read();\n        if(op&amp;1){\n            int l=read(),r=read(),x=read();\n            printf(\"%lld\\n\",solve(l,r,x));\n        }\n        else{\n            int p=read(),x=read();\n            T.update(1,1,n,p,x);\n        }\n    }\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>K.Three Competitions</p> <p>\u6709\\(n\\)\u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u6709\u4e00\u4e2a\u6709\u4e09\u4e2a\u6743\u503c\\(a_i,b_i,c_i\\)\uff0c\u4e00\u4e2a\u4eba\\(x\\)\u80fd\u8d62\u53e6\u4e00\u4e2a\u4eba\\(y\\)\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e09\u4e2a\u6743\u503c\u4e2d\u6709\u81f3\u5c11\u4e24\u4e2a\u6ee1\u8db3\\(x\\)\u7684\u5c0f\u4e8e\\(y\\)\u7684\u3002</p> <p>\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5e8f\u5217\\(p_1\\sim p_k\\)\uff0c\u6ee1\u8db3\\(p_i\\)\u80fd\u8d62\\(p_{i+1}\\)\uff0c\u4e14\\(p_1=x,p_k=y\\)\uff0c\u5219\u79f0\\(x\\)\u80fd\u95f4\u63a5\u8d62\\(y\\)\u3002</p> <p>\\(q\\)\u4e2a\u8be2\u95ee\\(x\\)\u662f\u5426\u80fd\u95f4\u63a5\u8d62\\(y\\)\u3002</p> <p>\\(n,q\\leq 2\\times 10^5\\)\uff0c\u6bcf\u4e2a\u6743\u503c\u5206\u522b\u6ca1\u6709\u76f8\u540c\u7684\u6570\u3002</p> <p>\u9996\u5148\u8fd9\u4e2a\u9650\u5236\u6761\u4ef6\u53ef\u4ee5\u770b\u51fa\u4e24\u4e24\u4e4b\u95f4\u5fc5\u7136\u6709\u80dc\u8d1f\uff0c\u90a3\u4e48\u5047\u5982\\(x\\)\u80fd\u8d62\\(y\\)\uff0c\u6211\u4eec\u5c31\u8fde\u4e00\u6761\\(x\\rightarrow y\\)\u7684\u6709\u5411\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ade\u8d5b\u56fe\u3002</p> <p>\\(x\\)\u80fd\u95f4\u63a5\u8d62\\(y\\)\uff0c\u5f53\\(x,y\\)\u5728\u4e00\u4e2a\u73af\u5185\uff0c\u6216\u5728\u7f29\u73af\u540e\u7684DAG\u4e2d\uff0c\\(y\\)\u5728\\(x\\)\u7684\u540e\u9762\u3002</p> <p>\u7ade\u8d5b\u56fe\u6709\u5f88\u591a\u6027\u8d28\uff1a</p> <ul> <li>\u7f29\u70b9\u540e\u662f\u4e00\u6761\u94fe</li> <li>\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5757\u5b58\u5728\u4e00\u6761\u54c8\u5bc6\u987f\u56de\u8def</li> <li>\u7ade\u8d5b\u56fe\u5b58\u5728\u4e00\u6761\u54c8\u5bc6\u987f\u8def\u5f84</li> <li>\u4ee4\\(s_i\\)\u4e3a\u7b2c\\(i\\)\u4e2a\u70b9\u7684\u51fa\u5ea6 (\u7ade\u8d5b\u4e2d\u83b7\u80dc\u7684\u79ef\u5206)\uff0c\u5bf9\\(s\\)\u4ece\u5927\u5230\u5c0f\u6392\u597d\u5e8f\u540e, \u82e5\u6ee1\u8db3\\(\\sum_{i=1}^ks_i\\geq\\binom{k}{2}\\)\u4e14\\(\\sum s=\\binom{n}{2}\\), \u5b9a\u80fd\u6784\u9020\u51fa\u4e00\u79cd\u7ade\u8d5b\u56fe, \u53cd\u4e4b\u4e0d\u80fd\u3002</li> </ul> <p>\u5177\u4f53\u8bc1\u660e\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\uff0c\u8fd9\u9898\u7684\u4e00\u4e2a\u89e3\u6cd5\u7528\u5230\u4e86\u7b2c\u56db\u4e2a\u6027\u8d28\u3002</p> <p>\u8fd9\u4e2a\u6027\u8d28\u5728\u544a\u8bc9\u6211\u4eec\u8981\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u3002\u6c42\u51fa\u6765\u4ee5\u540e\u6784\u9020\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5047\u5982\u73b0\u5728\u6392\u597d\u5e8f\u4e86\\([1,n]\\)\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u6700\u5c0f\u7684\\(l\\)\uff0c\u6ee1\u8db3\\(\\sum_{i=l+1}^n s_i=\\binom{n-l}{2}\\)\uff0c\u4e5f\u5373\u53bb\u6389\\([1,l]\\)\u540e\u662f\u4e00\u526f\u7ade\u8d5b\u56fe\u5373\u53ef\u3002</p> <p>\u600e\u4e48\u6c42\u5ea6\u6570\uff1f\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u6211\u4eec\u505a\u56db\u6b21\u4e09\u7ef4\u504f\u5e8f\u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log^2n)\\)\uff0c\u5f53\u7136\u4e09\u7ef4\u504f\u5e8f\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5c11\u4e2a\\(\\log\\)\uff0c\u5c31\u662f\u6ca1\u5fc5\u8981\u3002</p> <p>vp\u7684\u65f6\u5019SkqLiao\u5199\u7684\u53e6\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7f29\u73af\u7684\u505a\u6cd5\uff0c\u4e0d\u61c2\uff0c\u5f85\u4ed6\u8865\u3002</p> <p>\u770b\u770b\u5565\u65f6\u5019\u4f1a\u8865\u634f\u3002</p> <p>\u8865\u4e86\u8865\u4e86\u634f\u3002</p> <p>Skqliao\u7684\u505a\u6cd5</p> <p>\u8fd8\u662f\u5efa\u56fe\uff0c\u8003\u8651 \\(x\\) \u548c \\(y\\) \u4ec0\u4e48\u65f6\u5019\u662f<code>YES</code>\u3002\u8981\u4e48 \\(x\\rightarrow y\\) \uff08directly\uff09\uff0c\u8981\u4e48 \\(y\\rightarrow x\\) \u4e14 \\(x\\rightarrow a_1\\rightarrow\\cdots\\rightarrow a_p\\rightarrow y\\)\uff08undirectly\uff09\uff0c\u4e5f\u5c31\u662f\u662f\u8bf4 \\(x,y\\) \u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u73af\u3002</p> <p>\u524d\u8005\u5f88\u597d\u5224\u65ad\uff0c\u800c\u540e\u8005\u6839\u636e\u6709\u5411\u56fe\u7684\u6027\u8d28\uff0c\u4e24\u4e2a\u70b9\u95f4\u5b58\u5728\u73af\u4e0e\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5c06\u7ade\u8d5b\u56fe\u6c42\u51fa\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4f46\u7531\u4e8e\u8fb9\u6570\u8fc7\u591a\uff0c\u662f\u4e0d\u53ef\u80fd\u76f4\u63a5\u5efa\u56fe\u8dd1tarjan\u7684\u3002</p> <p>\u8003\u8651 <code>Kosaraju</code> \u7b97\u6cd5\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\uff08\u8f6c\u81eaOI-Wiki\uff09\uff1a</p> <ul> <li> <p>\u8be5\u7b97\u6cd5\u4f9d\u9760\u4e24\u6b21\u7b80\u5355\u7684 DFS \u5b9e\u73b0\uff1a</p> </li> <li> <p>\u7b2c\u4e00\u6b21 DFS\uff0c\u9009\u53d6\u4efb\u610f\u9876\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff0c\u904d\u5386\u6240\u6709\u672a\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\uff0c\u5e76\u5728\u56de\u6eaf\u4e4b\u524d\u7ed9\u9876\u70b9\u7f16\u53f7\uff0c\u4e5f\u5c31\u662f\u540e\u5e8f\u904d\u5386\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u6b21 DFS\uff0c\u5bf9\u4e8e\u53cd\u5411\u540e\u7684\u56fe\uff0c\u4ee5\u6807\u53f7\u6700\u5927\u7684\u9876\u70b9\u4f5c\u4e3a\u8d77\u70b9\u5f00\u59cb DFS\u3002\u8fd9\u6837\u904d\u5386\u5230\u7684\u9876\u70b9\u96c6\u5408\u5c31\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u5bf9\u4e8e\u6240\u6709\u672a\u8bbf\u95ee\u8fc7\u7684\u7ed3\u70b9\uff0c\u9009\u53d6\u6807\u53f7\u6700\u5927\u7684\uff0c\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\u3002</p> </li> <li> <p>\u4e24\u6b21 DFS \u7ed3\u675f\u540e\uff0c\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u627e\u51fa\u6765\u4e86\uff0cKosaraju \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n+m)\\)\u3002</p> </li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u5f53\u524d\u70b9 \\(u\\)\uff0c\u6211\u4eec\u53ea\u8981\u6bcf\u6b21\u90fd\u80fd\u627e\u5230 \\(v\\)\uff0c\u6ee1\u8db3 \\(u\\rightarrow v\\) \u4e14 \\(v\\) \u672a\u8bbf\u95ee\uff0c\u5c31\u80fd\u5b9e\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u3002</p> <p>\u800c\u82e5 \\(u\\rightarrow v\\)\uff0c\u5219\u4e00\u5b9a\u6ee1\u8db3\u5728\u4e09\u4e2a\u6392\u540d \\((x,y,z)\\) \u4e2d\uff0c\u81f3\u5c11\u6709\u4e24\u9879 \\(u\\) \u66f4\u5c0f\u3002\u4e0d\u59a8\u679a\u4e3e\u4e09\u79cd\u60c5\u51b5\uff0c\u5373  \\((x,y),(y,z),(z,x)\\)\u3002</p> <p>\u4ee5 \\((x,y)\\) \u4e3a\u4f8b\u3002\u4ee5 \\(x\\) \u4e3a\u4e0b\u6807\u5efa\u7ebf\u6bb5\u6811\uff0c\u53f6\u5b50\u7ed3\u70b9\u4e3a\u5bf9\u5e94\u7684\u70b9\u7f16\u53f7\u4ee5\u53ca\u5b83\u7684 \\(y\\) \u503c\uff0c\u7ef4\u62a4\u5b50\u6811\u4e2d \\(y\\) \u7684\u6700\u5927\u503c\u53ca\u5bf9\u5e94\u70b9\u7684\u7f16\u53f7\u3002\u5176\u4ed6\u4e24\u79cd\u60c5\u51b5\u540c\u7406\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u70b9 \\(u\\) \u800c\u8a00\uff0c\u5728\u533a\u95f4 \\((x_u+1,n)\\) \uff08\u6b64\u65f6 \\(x_u&lt;x_v\\)\uff09\u4e2d\u627e\u5230 \\(y\\) \u7684\u6700\u5927\u503c \\((y_v,v)\\)\uff0c\u5e76\u5224\u65ad \\(y_u&lt;y_v\\) \u5373\u53ef\u627e\u5230 \\(v\\)\u3002</p> <p>\u82e5 \\(v\\) \u5408\u6cd5\uff0c\u5219\u5728\u4e09\u68f5\u6811\u4e2d\u5206\u522b\u5220\u9664 \\(v\\) \u5bf9\u5e94\u7684\u53f6\u5b50\u7ed3\u70b9\uff0c\u7136\u540eDFS\u5230 \\(v\\)\u3002</p> <p>\u5982\u679c\u4e09\u68f5\u6811\u5747\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684 \\(v\\)\uff0c\u8bf4\u660e \\(x\\) \u6240\u6709\u51fa\u8fb9\u7684\u70b9\u5747\u5df2\u88ab\u8bbf\u95ee\uff0c\u56de\u6eaf\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8e\u7b2c\u4e8c\u6b21DFS\uff0c\u7c7b\u4f3c\u7684\u65b9\u5f0f\u5efa\u4e09\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5728 \\((1,x_u-1)\\) \u4e2d\u67e5\u8be2 \\(v\\)\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n\\log{n})\\)\u3002</p> <pre><code>/*\n\u4e09\u7ef4\u504f\u5e8f\n*/\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=2e5+10,mod=1e9+7,mod2=998244353;\nint n,Q,cnt;\nint out[N],bl[N],siz[N];\n\nstruct node{\n    int x,y,z,id;\n    node(int _x=0,int _y=0,int _z=0,int _id=0):x(_x),y(_y),z(_z),id(_id){}\n};\nnode a[N];\n\nstruct BIT{\n    int c[N];\n    int lowbit(int x){\n        return x&amp;(-x);\n    }\n    void update(int x,int v){\n        for(;x&lt;N;x+=lowbit(x)) c[x]+=v;\n    }\n    int query(int x){\n        int ret=0;\n        for(;x;x-=lowbit(x)) ret+=c[x];\n        return ret;\n    }\n}T;\n\nvoid solve(int l,int r){\n    if(l==r) return;\n    int mid=(l+r)&gt;&gt;1;\n    solve(l,mid);solve(mid+1,r);\n\n    sort(a+l,a+mid+1,[&amp;](const node&amp;A,const node&amp;B){return A.y&gt;B.y;});\n    sort(a+mid+1,a+r+1,[&amp;](const node&amp;A,const node&amp;B){return A.y&gt;B.y;});\n    int tl=l-1;\n    for(int tr=mid+1;tr&lt;=r;++tr){\n        while(tl+1&lt;=mid &amp;&amp; a[tl+1].y&gt;a[tr].y) ++tl,T.update(a[tl].z,1);\n        int t=T.query(n)-T.query(a[tr].z);\n        out[a[tr].id]+=t;\n    }\n    for(int i=l;i&lt;=tl;++i) T.update(a[i].z,-1);\n}\n\nvoid solve(){\n    n=read();\n    for(int i=1;i&lt;=n;++i){\n        a[i].x=read();a[i].y=read();a[i].z=read();\n        a[i].id=i;\n    }\n    //all smaller\n    sort(a+1,a+n+1,[&amp;](const node&amp;A,const node&amp;B){return A.x&gt;B.x;});\n    solve(1,n);\n    //x bigger\n    sort(a+1,a+n+1,[&amp;](const node&amp;A,const node&amp;B){return A.x&lt;B.x;});\n    solve(1,n);\n    //y bigger\n    for(int i=1;i&lt;=n;++i) swap(a[i].x,a[i].y);\n    sort(a+1,a+n+1,[&amp;](const node&amp;A,const node&amp;B){return A.x&lt;B.x;});\n    solve(1,n);\n    //z bigger\n    for(int i=1;i&lt;=n;++i) swap(a[i].x,a[i].z);\n    sort(a+1,a+n+1,[&amp;](const node&amp;A,const node&amp;B){return A.x&lt;B.x;});\n    solve(1,n);\n    //getdag\n    //for(int i=1;i&lt;=n;++i) cout&lt;&lt;i&lt;&lt;\":\"&lt;&lt;out[i]&lt;&lt;hvie;\n    sort(a+1,a+n+1,[&amp;](const node&amp;A,const node&amp;B){return out[A.id]&gt;out[B.id];});\n    auto calc=[&amp;](int x){\n        return x*(x-1)/2;\n    };\n    for(int l=1;l&lt;=n;){\n        int r=l,sum=calc(n-l+1),now=out[a[l].id];\n        //cout&lt;&lt;l&lt;&lt;\" \"&lt;&lt;sum&lt;&lt;\" \"&lt;&lt;now&lt;&lt;hvie;\n        while(calc(n-r)!=sum-now){\n            ++r;\n            now+=out[a[r].id];\n        }\n        ++cnt;\n        siz[cnt]=r-l+1;\n        for(int i=l;i&lt;=r;++i) bl[a[i].id]=cnt;\n        //cout&lt;&lt;l&lt;&lt;\" \"&lt;&lt;r&lt;&lt;hvie;\n        l=r+1;\n    }\n    sort(a+1,a+n+1,[&amp;](const node&amp;A,const node&amp;B){return A.id&lt;B.id;});\n    /*auto direct=[&amp;](int x,int y){\n        int t=(a[x].x&gt;a[y].x)+(a[x].y&gt;a[y].y)+(a[x].z&gt;a[y].z);\n        return t&gt;=2;\n    };*/\n    int Q=read();\n    while(Q--){\n        int x=read(),y=read();\n        if(bl[x]&lt;=bl[y]) puts(\"YES\");\n        else puts(\"NO\"); \n    }\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nusing int2 = array&lt;int, 2&gt;;\nint n, m;\nvector&lt;array&lt;int, 3&gt;&gt; v;\nvector&lt;int&gt; pos[3];\n\nstruct SegmentTree {\n    int x, y, o;\n    vector&lt;int2&gt; seg;\n    int2 pushUp(int2 ls, int2 rs) { \n        if (o) {\n            return {max(ls[0], rs[0]), ls[0] &gt; rs[0] ? ls[1] : rs[1]};\n        } else {\n            return {min(ls[0], rs[0]), ls[0] &lt; rs[0] ? ls[1] : rs[1]};\n        }\n    }\n    void build(int rt, int l, int r) {\n        if (l == r) {\n            seg[rt][0] = v[pos[x][l]][y];\n            seg[rt][1] = pos[x][l];\n            return ;\n        }\n        int m = (l + r) / 2;\n        build(rt &lt;&lt; 1, l, m);\n        build(rt &lt;&lt; 1 | 1, m + 1, r);\n        seg[rt] = pushUp(seg[rt &lt;&lt; 1], seg[rt &lt;&lt; 1 | 1]);\n    }\n    int2 query(int rt, int l, int r, int a, int b) {\n        if (a &lt;= l &amp;&amp; r &lt;= b) return seg[rt];\n        int m = (l + r) / 2;\n        if (a &gt; m) return query(rt &lt;&lt; 1 | 1, m + 1, r, a, b);\n        if (m &gt;= b) return query(rt &lt;&lt; 1, l, m, a, b);\n        auto ls = query(rt &lt;&lt; 1, l, m, a, b);\n        auto rs = query(rt &lt;&lt; 1 | 1, m + 1, r, a, b);\n        return pushUp(ls, rs);\n    };\n    void remove(int rt, int l, int r, int p) {\n        if (l == r) {\n            seg[rt][0] = o ? INT_MIN : INT_MAX;\n            return ;\n        }\n        int m = (l + r) / 2;\n        if (p &lt;= m) remove(rt &lt;&lt; 1, l, m, p);\n        else remove(rt &lt;&lt; 1 | 1, m + 1, r, p);\n        seg[rt] = pushUp(seg[rt &lt;&lt; 1], seg[rt &lt;&lt; 1 | 1]);\n    }\n    void init(int xx, int yy, int oo) {\n        x = xx;\n        y = yy;\n        o = oo;\n        seg.resize(n * 4 + 100);\n        build(1, 1, n);\n    }\n} tree[3][2];\n\nint main() {\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    cin &gt;&gt; n;\n    v.resize(n + 1);\n    for (int i = 0; i &lt; 3; ++i) pos[i].resize(n + 1);\n    for (int i = 1; i &lt;= n; ++i) {\n        for (int j = 0; j &lt; 3; ++j) {\n            cin &gt;&gt; v[i][j];\n            pos[j][v[i][j]] = i;\n        }\n    }\n    for (int i = 0; i &lt; 3; ++i)\n        for (int j = 0; j &lt; 2; ++j) \n            tree[i][j].init(i, (i + 1) % 3, j);\n\n    vector&lt;bool&gt; vis(n + 1);\n    vector&lt;int&gt; color(n + 1);\n\n    int scc_cnt = 0;\n    vector&lt;int&gt; s;\n\n    function&lt;void(int)&gt; dfs1 = [&amp;] (int x) {\n        //cout &lt;&lt; \"now \" &lt;&lt; x &lt;&lt; endl;\n        vis[x] = 1;\n        while (true) {\n            int y = -1;\n            for (int i = 0; i &lt; 3; ++i) {\n                if (v[x][i] == n) continue;\n                auto [a, b] = tree[i][1].query(1, 1, n, v[x][i] + 1, n);\n                if (a &gt; v[x][(i + 1) % 3]) {\n                    for (int j = 0; j &lt; 3; ++j) {\n                        tree[j][1].remove(1, 1, n, v[b][j]);\n                    }\n                    y = b;\n                    break;\n                }\n            }\n            if (y == -1) break;\n            //cout &lt;&lt; x &lt;&lt; \"-&gt;\" &lt;&lt; y &lt;&lt; endl;\n            //exit(0);\n            dfs1(y);\n        }\n        s.push_back(x);\n    };\n\n    function&lt;void(int)&gt; dfs2 = [&amp;] (int x) {\n        color[x] = scc_cnt;\n        while (true) {\n            int y = -1;\n            for (int i = 0; i &lt; 3; ++i) {\n                if (v[x][i] == 1) continue;\n                auto [a, b] = tree[i][0].query(1, 1, n, 1, v[x][i] - 1);\n                if (a &lt; v[x][(i + 1) % 3]) {\n                    for (int j = 0; j &lt; 3; ++j) {\n                        tree[j][0].remove(1, 1, n, v[b][j]);\n                    }\n                    y = b;\n                    break;\n                }\n            }\n            if (y == -1) break;\n            //cout &lt;&lt; x &lt;&lt; \"-&gt;\" &lt;&lt; y &lt;&lt; endl;\n            dfs2(y);\n        }\n    };\n\n    for (int i = 1; i &lt;= n; ++i) {\n        if (!vis[i]) {\n            for (int j = 0; j &lt; 3; ++j) {\n                tree[j][1].remove(1, 1, n, v[i][j]);\n            }\n            dfs1(i);\n        }\n    }\n    //cout &lt;&lt;\"-----------------\\n\";\n    for (int i = n - 1; i &gt;= 0; --i) {\n        if (!color[s[i]]) {\n            //cout &lt;&lt; \"wow \" &lt;&lt; i &lt;&lt; endl;\n            ++scc_cnt;\n            for (int j = 0; j &lt; 3; ++j) {\n                tree[j][0].remove(1, 1, n, v[s[i]][j]);\n            }\n            dfs2(s[i]);\n        }\n    }\n    //for (int i = 1; i &lt;= n; ++i) cout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; color[i] &lt;&lt; endl;\n    cin &gt;&gt; m;\n    for (int i = 1, x, y; i &lt;= m; ++i) {\n        cin &gt;&gt; x &gt;&gt; y;\n        int cnt = 0;\n        for (int j = 0; j &lt; 3; ++j) {\n            if (v[x][j] &lt; v[y][j]) ++cnt;\n        }\n        if (color[x] != color[y] &amp;&amp; cnt &lt; 2) cout &lt;&lt; \"NO\\n\";\n        else cout &lt;&lt; \"YES\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"vp/cf-gym-103439/","title":"XXII Open Cup, Grand Prix of Southeastern Europe","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 48, solved 8/15</p> </li> </ul> <p>\u8fd8\u662f\u7b80\u5355\u9898\u5207\u5f97\u4e0d\u591f\u5feb\uff0c\u7136\u540e\u4e2d\u6863\u9898\u6ca1\u6709\u8ba4\u771f\u60f3\u3002</p> <p>A. ABC Legacy</p> <p>\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(2n\\)\u7684\u5b57\u7b26\u4e32\uff0c\u53ea\u5305\u542b\\(A,B,C\\)\u3002\u8981\u4f60\u5339\u914d\u51fa\\(n\\)\u5bf9\uff0c\u6bcf\u5bf9\u4e92\u4e0d\u76f8\u4ea4\uff0c\u4e14\u53ea\u80fd\u662f\"AB\",\"AC\",\"BC\"\u4e2d\u7684\u4e00\u79cd\uff0c\u6c42\u8f93\u51fa\u65b9\u6848\uff0c\u65e0\u6cd5\u6784\u9020\u65f6\u8f93\u51fa-1\u3002</p> <p>\\(n\\leq 10^5\\)</p> <p>\u6211\u4eec\u53d1\u73b0\uff0cA\u53ef\u4ee5\u63a5\u4efb\u4f55\u6570\uff0cC\u53ef\u4ee5\u63a5\u5728\u4efb\u4f55\u6570\u540e\u3002\u540c\u65f6\uff0c\u6211\u4eec\u80fd\u591f\u7b97\u51faAB\uff0cBC\uff0cAC\u7684\u5177\u4f53\u6570\u91cf\uff1a</p> \\[AB+BC+AC=n\\] \\[AB+BC=cnt[B]\\] \\[AB+AC=cnt[A]\\] \\[BC+AC=cnt[C]\\] <p>\u4e8e\u662f\u6709\uff1a\\(AB=n-cnt[C]\\), \\(BC=n-cnt[A]\\), \\(AC=n-cnt[B]\\)</p> <p>\u53ef\u4ee5\u626b\u4e00\u904d\uff0c\u7136\u540eC\u6bcf\u6b21\u4e0e\u5c3d\u53ef\u80fd\u9760\u524d\u7684B\u5339\u914d\uff0c\u4e0e\u5c3d\u53ef\u80fd\u9760\u540e\u7684A\u5339\u914d\uff0c\u540c\u65f6\u4fdd\u8bc1\u6ee1\u8db3\u6570\u91cf\u8981\u6c42\u3002\u6700\u540e\u5269\u4e0b\u7684A\u548cB\u518d\u5339\u914d\uff0c\u4e2d\u95f4\u5224\u65ad\u5408\u6cd5\u6027\u6bd4\u8f83\u597d\u5199\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=1e5+10,mod=998244353;\n\nint n,m;\n\nvoid solve(){\n    string s;\n    vector&lt;int&gt;A,C;\n    queue&lt;int&gt;B;\n    vector&lt;pii&gt;ans;\n    cin&gt;&gt;n;n*=2;\n    cin&gt;&gt;s;\n    int cnt[3]={};\n    rep(i,0,n-1){\n        cnt[s[i]-'A']++;\n    }\n    int BC=(cnt[1]+cnt[2]-cnt[0])/2;\n    int AC=(cnt[0]+cnt[2]-cnt[1])/2;\n    int AB=(cnt[0]+cnt[1]-cnt[2])/2;\n//  int AB=n-cnt[2],BC=n-cnt[0],AC=n-cnt[1];\n//  cout&lt;&lt;AB&lt;&lt;' '&lt;&lt;BC&lt;&lt;' '&lt;&lt;AC&lt;&lt;endl;\n    if(AB&lt;0||BC&lt;0||AC&lt;0) cout&lt;&lt;\"NO\\n\",exit(0);\n    rep(i,0,n-1){\n        if(s[i]=='A'){\n            A.pb(i);\n        }\n        else if(s[i]=='B'){\n            B.push(i);\n        }\n        else if(s[i]=='C'){\n            if(B.size()&amp;&amp;BC){\n                ans.pb({B.front(),i});\n                BC--;\n                B.pop();\n            }\n            else if(A.size()&amp;&amp;AC){\n                ans.pb({A.back(),i});\n                AC--;\n                A.pop_back();\n            }\n            else{\n                cout&lt;&lt;\"NO\\n\";\n                exit(0);\n            }\n        }\n    }\n    //for(auto i:A){\n    //  cout&lt;&lt;i&lt;&lt;\",\";\n    //}\n    //cout&lt;&lt;endl;\n    //cout&lt;&lt;B.size()&lt;&lt;\"!\\n\";\n    for(int i:A){\n        if(!B.size()||B.front()&lt;i){\n            cout&lt;&lt;\"NO\\n\";exit(0);\n        }\n        AB--;\n        ans.pb({i,B.front()});\n        B.pop();\n    }\n    //cout&lt;&lt;AB&lt;&lt;' '&lt;&lt;BC&lt;&lt;' '&lt;&lt;AC&lt;&lt;endl;\n    //cout&lt;&lt;B.size()&lt;&lt;' '&lt;&lt;A.size()&lt;&lt;endl;\n    if(B.size()) cout&lt;&lt;\"NO\\n\",exit(0);\n    cout&lt;&lt;\"YES\\n\";\n    for(auto i:ans){\n        cout&lt;&lt;i.fi+1&lt;&lt;' '&lt;&lt;i.se+1&lt;&lt;hvie;\n    }\n\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>B. New Queries On Segment Deluxe</p> <p>\u7ed9\u4f60\u4e00\u4e2a\\(k\\)\u884c,\\(n\\)\u5217\u7684\u77e9\u9635\\(A\\)\uff0c\u8bbe\\(B_j\\)\u8868\u793a\u7b2c\\(j\\)\u5217\u6c42\u548c\uff0c\u7ed9\u4f60\u4ee5\u4e0b\u8be2\u95ee\uff1a</p> <ul> <li>\\(1\\ t\\ p\\ l\\ r\\ x\\) \u5728\u7b2c\\(t\\)\u6b21\u8be2\u95ee\u7684\u7248\u672c\u7684\\(A\\)\u7684\u7b2c\\(p\\)\u884c\u7684\\([l,r]\\)\u5217\u5168\u90e8\u52a0\u4e0a\\(x\\)\uff0c\u5e76\u7531\u6b64\u4ea7\u751f\u65b0\u7248\u672c\u7684\\(A\\)\u3002</li> <li>\\(2\\ t\\ p\\ l\\ r\\ y\\) \u628a\u7b2c\\(t\\)\u6b21\u8be2\u95ee\u7684\u7248\u672c\u7684\\(A\\)\u7684\u7b2c\\(p\\)\u884c\u7684\\([l,r]\\)\u5217\u5168\u90e8\u53d8\u6210\\(y\\)\uff0c\u5e76\u7531\u6b64\u4ea7\u751f\u65b0\u7248\u672c\u7684\\(A\\)\u3002</li> <li>\\(3\\ t\\ l\\ r\\) \u8be2\u95ee\u7b2c\\(t\\)\u6b21\u8be2\u95ee\u7684\u7248\u672c\u7684\\(A\\)\u7684\u7b2c\\([l,r]\\)\u5217\u7684\\(B_j\\)\u7684\u6700\u5c0f\u503c\u3002</li> </ul> <p>\\(n\\leq 2.5\\times 10^5, q\\leq 2\\times 10^4\\)</p> <p>\u660e\u663e\u662f\u8981\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\uff0c\u7136\u540e\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u591a\u884c\u7684\u548c\uff0c\u53d1\u73b0\\(k\\)\u5f88\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u6240\u6709\u5b50\u96c6\u7684\u548c\u3002</p> <p>\u7ef4\u62a4\u6bcf\u4e00\u884c\u7684lazy\u6807\u8bb0\uff0cadd\u548ccover\u65f6\u5bf9\u6240\u6709\u5305\u542b\u4ed6\u7684\u5b50\u96c6\u4fee\u6539\uff0c\u8be2\u95ee\u5c31\u662f\u8be2\u95ee\u5168\u96c6\u3002</p> <p>pushdown\u7684\u65f6\u5019\u4e5f\u8981\u76f4\u63a5\u65b0\u5efa\u526f\u672c\uff08\u597d\u50cf\u5e26lazy\u6807\u8bb0\u7684\u4e3b\u5e2d\u6811\u90fd\u8981\u8fd9\u4e48\u641e\uff09\u3002</p> <p>\u65f6\u7a7a\u590d\u6742\u5ea6\\(O(q\\log n\\cdot 2^k)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=250055;\nconst int EMPTY=1e9;\nint n,m,k,mask;\nint tot=0,rt[maxn];\nvector&lt;int&gt;in[5],ex[5];\nstruct node{\n    int add[4],cov[4],mn[1&lt;&lt;4],ls,rs;\n    node(){for(int i=0;i&lt;4;i++) cov[i]=EMPTY;}\n}s[maxn*40];\n#define mid ((l+r)&gt;&gt;1)\nvoid ADD(int v,int row,int val){\n    if(s[v].cov[row]==EMPTY){\n        s[v].add[row]+=val;\n    }\n    else s[v].cov[row]+=val;\n    for(auto i:in[row]) s[v].mn[i]+=val;\n}\nvoid COV(int v,int row,int val){\n    s[v].cov[row]=val; s[v].add[row]=0;\n    for(auto i:in[row]) s[v].mn[i]=s[v].mn[i^(1&lt;&lt;row)]+val;\n}\nvoid pushdown(int v){\n    int L=s[v].ls,R=s[v].rs;\n    s[s[v].ls=++tot]=s[L];\n    s[s[v].rs=++tot]=s[R];\n    for(int i=0;i&lt;k;i++){\n        if(s[v].cov[i]==EMPTY){\n            if(s[v].add[i]) ADD(s[v].ls,i,s[v].add[i]),ADD(s[v].rs,i,s[v].add[i]);\n        }\n        else COV(s[v].ls,i,s[v].cov[i]),COV(s[v].rs,i,s[v].cov[i]);\n        s[v].add[i]=0;\n        s[v].cov[i]=EMPTY;\n    }\n}\nvoid pushup(int v){\n    for(int i=0;i&lt;mask;i++) s[v].mn[i]=min(s[s[v].ls].mn[i],s[s[v].rs].mn[i]);\n}\nvoid add(int v,int l,int r,int al,int ar,int row,int val){\n    if(al&lt;=l&amp;&amp;ar&gt;=r){\n        ADD(v,row,val);\n        return;\n    }\n    pushdown(v);\n    if(al&lt;=mid) add(s[v].ls,l,mid,al,ar,row,val);\n    if(ar&gt;mid) add(s[v].rs,mid+1,r,al,ar,row,val);\n    pushup(v);\n}\nvoid cov(int v,int l,int r,int al,int ar,int row,int val){\n    if(al&lt;=l&amp;&amp;ar&gt;=r){\n        COV(v,row,val);\n        return;\n    }\n    pushdown(v);\n    if(al&lt;=mid) cov(s[v].ls,l,mid,al,ar,row,val);\n    if(ar&gt;mid) cov(s[v].rs,mid+1,r,al,ar,row,val);\n    pushup(v);\n}\nint qry(int v,int l,int r,int al,int ar){\n    if(al&lt;=l&amp;&amp;ar&gt;=r) return s[v].mn[mask-1];\n    pushdown(v);\n    int val=0x7fffffff;\n    if(al&lt;=mid) val=min(val,qry(s[v].ls,l,mid,al,ar));\n    if(ar&gt;mid) val=min(val,qry(s[v].rs,mid+1,r,al,ar));\n    return val;\n}\nint a[5][maxn];\nint build(int l,int r){\n    // cout&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;hvie;\n    if(l==r){\n        ++tot;\n        for(int i=0;i&lt;k;i++) for(int j:in[i]) s[tot].mn[j]+=a[i][l];\n        return tot;\n    }\n    else{\n        int v=++tot;\n        s[v].ls=build(l,mid);\n        s[v].rs=build(mid+1,r);\n        pushup(v);\n        return v;\n    }\n}\n#undef mid\nsigned main(){\n    k=yh(),mask=(1&lt;&lt;k),n=yh();int q=yh();\n    for(int i=0;i&lt;k;i++){\n        for(int j=0;j&lt;mask;j++)if(j&gt;&gt;i&amp;1) in[i].pb(j);\n    }\n    for(int i=0;i&lt;k;i++){\n        rep(j,1,n) a[i][j]=yh();\n    }\n    rt[0]=build(1,n);\n    int l,r,val;\n    rep(i,1,q){\n        int op=yh(),t=yh(),p=yh();\n        rt[i]=++tot;\n        s[rt[i]]=s[rt[t]];\n        if(op==1){\n            l=yh(),r=yh(),val=yh();\n            add(rt[i],1,n,l,r,p-1,val);\n        }else if(op==2){\n            l=yh(),r=yh(),val=yh();\n            cov(rt[i],1,n,l,r,p-1,val);\n        }\n        else{\n            r=yh();\n            cout&lt;&lt;qry(rt[i],1,n,p,r)&lt;&lt;hvie;\n        }\n    }\n    return 0;\n}\n/*\n2 5 8\n1 2 3 4 5\n10 8 6 4 2\n3 0 2 5\n2 0 2 1 5 0\n3 2 2 5\n1 0 1 3 5 5\n3 4 2 5\n1 2 2 1 3 2\n3 0 2 5\n3 6 2 5\n*/\n</code></pre> <p>E. Flood Fill</p> <p>\u7ed9\u4f60\u4e00\u4e2a\\(n\\times m\\)\u7684\u77e9\u9635\u548c\u76ee\u6807\u77e9\u9635\uff0c\u53ea\u5305\u542b0\u548c1\u3002</p> <p>\u6bcf\u6b21\u53ef\u4ee5\u5c06\u539f\u77e9\u9635\u7684\u540c\u8272\u8fde\u901a\u5757\u53d8\u8272\uff0c\u95ee\u6700\u591a\u80fd\u548c\u76ee\u6807\u77e9\u9635\u5339\u914d\u591a\u5c11\u4e2a\u3002</p> <p>\\(1\\leq n,m\\leq 100\\)</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u4efb\u4f55\u4e00\u4e2a\u7ffb\u8f6c\u65b9\u5f0f\u90fd\u53ef\u4ee5\u53d8\u6210\u6bcf\u4e2a\u8fde\u901a\u5757\u6700\u591a\u9009\u4e00\u6b21\u7684\u65b9\u5f0f\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5\u5c06\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u770b\u505a\u70b9\uff0c\u540c\u65f6\u76f8\u90bb\u8fde\u901a\u5757\u95f4\u76f8\u4e92\u8fde\u8fb9\uff0c\u53ef\u4ee5\u5f62\u6210\u4e8c\u5206\u56fe\u3002</p> <p>\u5047\u8bbe\u989c\u8272\u4e3a0\u7684\u8fde\u5411\u6e90\u70b9\uff0c1\u8fde\u5411\u6c47\u70b9\uff0c\u8fde\u901a\u5757\u4e4b\u95f4\u7684\u8fb9\u6743\u4e3ainf\uff0c\u8fb9\u6743\u4e3a\u7ffb\u8f6c\u8fd9\u4e2a\u8fde\u901a\u5757\u4f1a\u4f7f\u5f97\u5339\u914d\u6570\u91cf\u589e\u52a0\u591a\u5c11\uff08\u5373\\(\\max (size-2\\times \u5339\u914d\u6570,0)\\)\uff09\u3002</p> <p>\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u6c42\u6700\u5927\u70b9\u6743\u72ec\u7acb\u96c6\uff0c\u53ef\u4ee5\u8f6c\u6362\u6210\u6240\u6709\u70b9\u6743\u4e4b\u548c-\u6700\u5c0f\u5272\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=1e5+10,mod=998244353,inf=0x3f3f3f3f;\n\nstruct dinic{\n    struct edge{\n        int v,nxt,f;\n    }e[N*2];\n    int h[N],ecnt=1,cur[N];\n    void addedge(int x,int y,int f){\n        e[++ecnt]={y,h[x],f};\n        h[x]=ecnt;\n    }\n    void link(int x,int y,int f){\n    //  cout&lt;&lt;\"link \"&lt;&lt;x&lt;&lt;' '&lt;&lt;y&lt;&lt;' '&lt;&lt;f&lt;&lt;hvie;\n        addedge(x,y,f);\n        addedge(y,x,0);\n    }\n    int s,t,n;\n    int d[N];\n    bool bfs(){\n        queue&lt;int&gt;q;\n        q.push(s);\n        rep(i,0,n) d[i]=inf;\n        d[s]=0;\n        while(!q.empty()){\n            int x=q.front();q.pop();for(int i=h[x];i;i=e[i].nxt){\n                int y=e[i].v; if(e[i].f&gt;0&amp;&amp;d[y]&gt;d[x]+1){\n                    d[y]=d[x]+1;q.push(y);\n                }\n            }\n        }\n        return d[t]&lt;inf;\n    }\n    int dfs(int x,int flow){\n        if(x==t) return flow;\n        int delta=0;\n        for(int &amp;i=cur[x];i;i=e[i].nxt){\n            int y=e[i].v;if(e[i].f&gt;0&amp;&amp;d[y]==d[x]+1){\n                delta=dfs(y,min(flow,e[i].f));\n                if(delta&gt;0){\n                    e[i].f-=delta;\n                    e[i^1].f+=delta;\n                    return delta;\n                }\n            }\n        }\n        return 0;\n    }\n    ll calc(){\n        ll ans=0;\n        while(bfs()){\n            for(int i=0;i&lt;=n;i++) cur[i]=h[i];\n            while(int path=dfs(s,inf)){\n                ans+=path;\n            }\n        }\n        return ans;\n    }\n}dnc;\n\nint n,m;\nint col[105][105],ccnt=0;\nchar g[105][105],mb[105][105];\nint val[10005],cl[10005];\npii dir[]={{0,1},{1,0},{0,-1},{-1,0}};\nbool in(int x,int y){return 1&lt;=x&amp;&amp;x&lt;=n&amp;&amp;1&lt;=y&amp;&amp;y&lt;=m;}\nvoid solve(){\n    n=yh(),m=yh();\n    rep(i,1,n) scanf(\"%s\",g[i]+1);\n    rep(i,1,n) scanf(\"%s\",mb[i]+1);\n    queue&lt;pii&gt;q;\n    int ori=0;\n    rep(i,1,n)rep(j,1,m)ori+=g[i][j]==mb[i][j];\n    rep(i,1,n)rep(j,1,m)if(!col[i][j]){\n        col[i][j]=++ccnt;\n        q.push({i,j});\n        cl[ccnt]=g[i][j]-'0';\n        while(!q.empty()){\n            int x=q.front().fi,y=q.front().se;q.pop();\n            val[ccnt]+=1-(g[x][y]==mb[x][y])*2;\n            for(int k=0;k&lt;4;k++){\n                int xi=x+dir[k].fi,yi=y+dir[k].se;\n                if(in(xi,yi)&amp;&amp;g[xi][yi]==g[x][y]&amp;&amp;!col[xi][yi]){\n                    col[xi][yi]=ccnt;\n                    q.push({xi,yi});\n                }\n            }\n        }\n    }\n    int S,T;\n    dnc.s=S=ccnt+1;\n    dnc.t=T=ccnt+2;\n    dnc.n=ccnt+2;\n    //rep(i,1,n)rep(j,1,m)cout&lt;&lt;col[i][j]&lt;&lt;\" \\n\"[j==m];\n    ll ans=0;\n    //rep(i,1,ccnt)cout&lt;&lt;i&lt;&lt;\":\"&lt;&lt;val[i]&lt;&lt;endl;\n    for(int i=1;i&lt;=ccnt;i++)if(val[i]&gt;0){\n        ans+=val[i];\n        if(cl[i]==0) dnc.link(S,i,val[i]);\n        else dnc.link(i,T,val[i]);\n    }\n    for(int i=1;i&lt;=n;i++)for(int j=1;j&lt;=m;j++)if(g[i][j]=='0'){\n        for(int k=0;k&lt;4;k++){\n            int ii=i+dir[k].fi,jj=j+dir[k].se;\n            if(in(ii,jj)&amp;&amp;col[i][j]!=col[ii][jj]){\n                dnc.link(col[i][j],col[ii][jj],inf);\n            }\n        }\n    }\n\n    cout&lt;&lt;n*m-(ori+(ans-dnc.calc()))&lt;&lt;hvie;\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>F. to Pay Respects</p> <p>\u6709\u4e00\u4e2a\u65e0\u9650\u8840\u7684\u602a\u517d\uff0c\u4e00\u5171\\(N\\)\u4e2a\u56de\u5408\uff0c\u6bcf\u56de\u5408\u602a\u517d\u53ef\u80fd\u4f1a\u91ca\u653e\u56de\u8840\u6280\u80fd\uff0c\u4f7f\u81ea\u5df1\u7684\u56de\u8840\u5806\u53e0\uff08\u8bb0\u4e3a\\(r\\)\uff09+1\u3002</p> <p>\u4f60\u53ef\u4ee5\u653e\u6700\u591a\\(K\\)\u6b21\u6280\u80fd\uff0c\u6bcf\u6b21\u91ca\u653e\u6280\u80fd\u53ef\u4ee5\u5c06\u602a\u517d\u7684\u4e2d\u6bd2\u5806\u53e0\uff08\u8bb0\u4e3a\\(p\\))+1\uff0c\u6b64\u65f6\u5982\u679c\u602a\u517d\u6709\u56de\u8840\u5806\u53e0\uff0c\u4f1a\u4f7f\u56de\u8840\u5806\u53e0(r)\\(-1\\)\uff0c\u540c\u65f6\u6bcf\u56de\u5408\u53ef\u4ee5\u666e\u653b\u4e00\u4e0b\uff0c\u9020\u6210\\(X\\)\u70b9\u4f24\u5bb3\u3002</p> <p>\u6bcf\u56de\u5408\u7ed3\u675f\u540e\uff0c\u602a\u517d\u8840\u91cf\u4f1a\u51cf\u5c11\\(X+p\\times P-r\\times R\\)\uff0c\\(P\\)\u548c\\(R\\)\u662f\u7ed9\u5b9a\u5e38\u6570\u3002</p> <p>\u6c42\\(N\\)\u56de\u5408\u540e\uff0c\u602a\u517d\u7684\u8840\u91cf\u6700\u591a\u80fd\u51cf\u5c11\u591a\u5c11\u3002</p> <p>\\(1\\leq N,X,P,R\\leq 10^6, 0\\leq K\\leq N\\)</p> <p>\u8003\u8651\u6bcf\u4e2a\u5806\u53e0\u7684\u8d21\u732e\uff0c\u6bcf\u6b21\u589e\u52a0\u56de\u8840\u5806\u53e0\uff0c\u76f8\u5f53\u4e8e\u540e\u7f00\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a-1\u7684\u8d21\u732e\uff0c\u6bcf\u6b21\u589e\u52a0\u4e2d\u6bd2\u5806\u53e0\u5219\u662f\u540e\u7f00\u6bcf\u4e2a\u4f4d\u7f6e\u6709+1\u7684\u8d21\u732e\u3002</p> <p>\u5982\u679c\u8fd9\u56de\u5408\u602a\u517d\u653e\u6280\u80fd\uff0c\u90a3\u4e48\u6b64\u65f6\u91ca\u653e\u6280\u80fd\u7684\u8d21\u732e\u662f \\((P+R)\\times (N-i+1)\\) \u3002\u5982\u679c\u6ca1\u653e\u6280\u80fd\uff0c\u4e14\\(r\\)\u4e3a0\uff0c\u5219\u8d21\u732e\u662f \\(P\\times(N-i+1)\\)\uff0c\u7136\u800c\u5b9e\u9645\u4e0a\uff0c\u540c\u4e00\u7c7b\u7684\u8d21\u732e\u9009\u62e9\u7684\u4f4d\u7f6e\u5c3d\u91cf\u9760\u524d\u6bd4\u8f83\u597d\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6709\u201c\u9009\u4e86\u6ca1\u653e\u6280\u80fd\u7684\u4f4d\u7f6e\u5374\u8d21\u732e*(P+R)\u201d\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u53ef\u4ee5\u9009\u62e9\u65e9\u81f3\u521a\u653e\u6280\u80fd\u7684\u65f6\u5019\u3002\u6700\u540e\u6c42\u524d\\(k\\)\u5927\u5373\u53ef\u3002</p> <p>\u7b54\u6848\u662f\\(Nx-\u5168\u90e8r\u7684\u8d21\u732e+\u81ea\u5df1\u9009\u62e9\u7684\u8d21\u732e\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=1e6+10,mod=998244353;\n\nint n,X,R,P,K;\nll ans;\nchar s[N];\n\nvoid solve(){\n    n=yh(),X=yh(),R=yh(),P=yh(),K=yh();\n    scanf(\"%s\",s+1);\n    vector&lt;ll&gt;con;\n    ll ans=n*X;\n    rep(i,1,n){\n        if(s[i]=='1'){\n            con.pb((n-i+1)*(P+R));\n            ans-=(n-i+1)*R;         \n        }\n        else{\n            con.pb((n-i+1)*P);\n        }\n    }\n    sort(con.begin(),con.end(),greater&lt;ll&gt;());\n    for(int i=0;i&lt;K;i++){\n        ans+=con[i];\n    }\n    cout&lt;&lt;ans&lt;&lt;hvie;\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>H. Werewolves</p> <p>\u4e00\u68f5\\(n\\)\u4e2a\u8282\u70b9\u7684\u65e0\u6839\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e2a\u989c\u8272\\(c_i\\)\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u8fde\u901a\u5b50\u56fe\uff0c\u5176\u4e2d\u67d0\u4e2a\u989c\u8272\u7684\u4e2a\u6570\u4e25\u683c\u5927\u4e8e\u5176\u4e2d\u70b9\u6570\u7684\u4e00\u534a\uff0c\u7b54\u6848\u5bf9998244353\u53d6\u6a21\u3002</p> <p>\\(1\\leq n\\leq 3000, 1\\leq c_i\\leq n\\)</p> <p>\u8fd9\u4e2a\u9898\u8003\u5bdf\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4f30\u8ba1\u3002</p> <p>\u9996\u5148\u5982\u679c\u6211\u4eec\u56fa\u5b9a\u989c\u8272\uff0c\u628a\u8be5\u989c\u8272\u7684\u70b9\u6743\u8bbe\u4e3a+1\uff0c\u5176\u4ed6\u989c\u8272\u8bbe\u4e3a-1\uff0c\u76f8\u5f53\u4e8e\u6c42\u591a\u5c11\u4e2a\u8fde\u901a\u5b50\u56fe\u7684\u70b9\u6743\u548c\u5927\u4e8e0\u3002</p> <p>\u8bbe\\(dp[x][sum]\\)\u8868\u793a\u89c4\u5b9a\u9009\u62e9x\uff0c\u9009\u62e9x\u7684\u5b50\u6811\uff0c\u4e14\u8fde\u901a\u5b50\u56fe\u70b9\u6743\u548c\u4e3a\\(sum\\)\u7684\u65b9\u6848\u6570\u3002</p> <p>\u8003\u8651\u6811\u4e0a\u80cc\u5305\uff1a</p> <p>\\(dp'[x][s_1+s_2]+=dp[x][s_1]\\times dp[y][s_2]\\)</p> <p>\u5bb9\u91cf\u4e0a\u9650\u662f\\(cnt[color]\\)\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f\\(O(n\\times \\sum cnt[i])=O(n^2)\\)</p> <p>K. Amazing Tree</p> <p>\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6c42\u4e00\u4e2a\u540e\u5e8f\u904d\u5386\uff08\u5373\u5148\u8f93\u51fa\u6bcf\u68f5\u5b50\u6811\uff0c\u6700\u540e\u8f93\u51fa\u6839\uff09\uff0c\u4f7f\u5f97\u5b57\u5178\u5e8f\u6700\u5c0f\u3002</p> <p>\\(n\\leq 2\\times 10^5\\)</p> <p>\u8003\u8651\u7b2c\u4e00\u4e2a\u8f93\u51fa\u7684\u503c\u4f1a\u662f\u4ec0\u4e48\uff0c\u4e0d\u96be\u53d1\u73b0\u4e00\u5b9a\u662f\u4e00\u4e2a\u53f6\u5b50\uff0c\u800c\u4e14\u662f\u53f6\u5b50\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u628a\u5b83\u8f6c\u6362\u4e3a\u6839\uff0c\u90a3\u4e48\u5bf9\u4e8e\u904d\u5386\u7684\u8d77\u70b9\u6765\u8bf4\uff0c\u6211\u4eec\u4e00\u5b9a\u9009\u62e9\u5b83\u7684\u513f\u5b50\uff08\u8fd9\u6837\u7b2c\u4e00\u4e2a\u904d\u5386\u7684\u5b50\u6811\u5c31\u662f\u8fd9\u4e2a\u6700\u5c0f\u7684\u53f6\u5b50\uff09\u3002</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u8003\u8651\u662f\u5426\u9700\u8981\u628a\u8d77\u70b9\u5f80\u53f6\u5b50\u79fb\u52a8\uff0c\u4ee5\u53ca\u5f80\u54ea\u4e2a\u53f6\u5b50\u79fb\u52a8\u3002\u5047\u5982\u73b0\u5728\u6839\u5728\\(x\\)\uff0c\u90a3\u4e48\u73b0\u5728\u540e\u5e8f\u904d\u5386\u4e2d\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u5c31\u4f1a\u662f\\(x\\)\uff0c\u5982\u679c\u6211\u4eec\u628a\u6839\u79fb\u52a8\u5230\\(v\\)\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u539f\u672c\u904d\u5386\u987a\u5e8f\u4e2d\\(x\\)\u7684\u4f4d\u7f6e\u4f1a\u66ff\u6362\u4e3a\\(x\\)\u5b50\u6811\u4e2d\u9664\u4e86\\(v\\)\u5b50\u6811\u7684\u67d0\u4e2a\u53f6\u5b50\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002\u90a3\u4e48\u663e\u7136\uff0c\u5982\u679c\\(x\\)\u5b50\u6811\u4e2d\u6709\u6bd4\u5b83\u66f4\u5c0f\u7684\u53f6\u5b50\uff0c\u5c31\u4f1a\u628a\u6839\u5f80\u4e0b\u79fb\uff0c\u800c\u4e14\u4f1a\u79fb\u52a8\u5230\u53f6\u5b50\u6700\u5c0f\u503c\u6700\u5927\u7684\u90a3\u9897\u5b50\u6811\u4e2d\u3002</p> <p>\u8fd9\u6837\u5f97\u5230\u6839\u4ee5\u540e\uff0c\u6211\u4eec\u518d\u5bf9\u6811dfs\uff0c\u6bcf\u6b21\u904d\u5386\u4f1a\u9009\u62e9\u53f6\u5b50\u6700\u5c0f\u7684\u5b50\u6811\u4f18\u5148\u904d\u5386\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=2e5+10,mod=998244353,inf=1e9;\n\nint n,rt,frt;\nint du[N],f[N];//f=min_leaf\nvector&lt;int&gt;G[N],ans;\n\nvoid dfs(int x,int fa){\n    if(du[x]==1 &amp;&amp; fa){\n        f[x]=x;\n        return;\n    }\n    for(auto v:G[x]){\n        if(v==fa) continue;\n        dfs(v,x);\n        f[x]=min(f[x],f[v]);\n    }\n}\nvoid dfs1(int x,int fa){//frt=x;\n    frt=x;\n    if(du[x]==1) return;\n    int tmx=-inf,tid=0;\n    for(auto v:G[x]){\n        if(v==fa) continue;\n        if(tmx&lt;f[v]) tmx=f[v],tid=v;\n    }\n    if(tmx&gt;x) dfs1(tid,x);\n}\nvoid dfs2(int x,int fa){\n    sort(G[x].begin(),G[x].end(),[&amp;](int x,int y){return f[x]&lt;f[y];});\n    for(auto v:G[x]){\n        if(v==fa) continue;\n        dfs2(v,x);\n    }\n    ans.pb(x);\n}\n\nvoid clear(){\n    for(int i=0;i&lt;=n;++i){\n        du[i]=0;f[i]=inf;\n        G[i].clear();\n    }\n    ans.clear();\n}\n\nvoid solve(){\n    n=read();clear();\n    for(int i=1;i&lt;n;++i){\n        int u=read(),v=read();\n        G[u].pb(v);G[v].pb(u);\n        ++du[u];++du[v];\n    }\n    for(int i=1;i&lt;=n;++i){\n        if(du[i]==1){\n            rt=i;\n            break;\n        }\n    }\n    dfs(rt,0);\n    dfs1(G[rt][0],rt);\n    dfs(frt,0);\n    dfs2(frt,0);\n    //cout&lt;&lt;\"rt:\"&lt;&lt;rt&lt;&lt;\" \"&lt;&lt;frt&lt;&lt;hvie;\n    for(auto v:ans) printf(\"%d \",v);\n    puts(\"\");\n}\n\nsigned main(){\n    for(int cas=read();cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"vp/cf-gym-103483/","title":"2021-2022 Russia Team Open, High School Programming Contest (VKOSHP XXII)","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 16, solved 10/12</p> </li> </ul> <p>A.Natives</p> <p>\u7b7e\u5230\u9898\uff0c\u8f93\u51fa\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\u524d\\(\\lfloor \\frac n 2 \\rfloor\\)\u4e2a\u6570\u7684\u548c\u5373\u53ef\u3002</p> <p>C.How Many Strings Are Less</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\\(s\\)\u548c\\(n\\)\u4e2a\u6a21\u5f0f\u4e32\\(k_i\\)\uff0c\\(Q\\)\u6b21\u64cd\u4f5c\u6bcf\u6b21\u5c06\\(s\\)\u4e2d\u4ece\u7b2c\\(p_i\\)\u5f00\u59cb\u5f80\u540e\u7684\u6240\u6709\u5b57\u7b26\u53d8\u6210\\(c_i\\)\uff0c\u95ee\u6bcf\u6b21\u64cd\u4f5c\u540e\\(s\\)\u4e25\u683c\u5927\u4e8e\u591a\u5c11\u4e2a\u6a21\u5f0f\u4e32\u3002</p> <p>\\(n,Q,|s|,\\sum|k_i|\\leq 10^6\\)</p> <p>\u9996\u5148\u6211\u4eec\u8003\u8651\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\u600e\u4e48\u505a\uff0c\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u505a\u6cd5\u662f\u5bf9\u6a21\u5f0f\u4e32\u5efa\u7acb\u5b57\u5178\u6811\uff0c\u8bb0\u5f55\u5b57\u5178\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7ecf\u8fc7\u7684\u4e32\u7684\u4e2a\u6570\u548c\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u7ed3\u5c3e\u7684\u4e32\u7684\u4e2a\u6570\u3002\u7edf\u8ba1\u7b54\u6848\u65f6\u7528\\(s\\)\u5728Trie\u4e0a\u5339\u914d\u5e76\u7d2f\u8ba1\u4e2a\u6570\u5373\u53ef\u3002</p> <p>\u663e\u7136\uff0c\u6211\u4eec\u5efa\u7acbTrie\u6811\u540e\u518ddfs\u4e00\u904d\uff0c\u8fd8\u53ef\u4ee5\u7edf\u8ba1\u51fa\uff0c\u5bf9Trie\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\uff0c\u5c0f\u4e8e\u8fd9\u4e2a\u8282\u70b9\u8868\u793a\u7684\u4e32\u7684\u6a21\u5f0f\u4e32\u6709\u591a\u5c11\u4e2a\u3002</p> <p>\u90a3\u4e48\u5982\u679c\u6211\u4eec\u77e5\u9053\\(s\\)\u80fd\u591f\u5339\u914d\u5230Trie\u6811\u4e0a\u54ea\u4e2a\u8282\u70b9\uff0c\u4e14\u77e5\u9053\\(s\\)\u5931\u914d\u7684\u662f\u54ea\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u901f\u7edf\u8ba1\u7b54\u6848\u3002</p> <p>\u8003\u8651\u4e00\u6b21\u4fee\u6539\uff0c\u8bbe\u5f53\u524d\\(s\\)\u5728Trie\u4e0a\u5339\u914d\u5230\u4e86\u7b2c\\(l\\)\u4e2a\u5b57\u7b26\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u6709\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u82e5\\(l&lt;p+1\\)\uff0c\u5219\u8bf4\u660e\u8fd9\u6b21\u4fee\u6539\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\uff0c\u56e0\u4e3a\u8fd9\u5e76\u4e0d\u5f71\u54cd\\(s\\)\u5931\u914d\u7684\u5b57\u7b26</li> <li>\u82e5\\(l==p+1\\)\uff0c\u5219\u8bf4\u660e\u9700\u8981\u4ece\u8fd9\u4e2a\u8282\u70b9\u4e00\u76f4\u5f80\\(c\\)\u8df3</li> <li>\u82e5\\(l&gt;p+1\\)\uff0c\u5219\u8bf4\u660e\u9700\u8981\u4ece\u8fd9\u4e2a\u8282\u70b9\u5f80\u6839\u8d70\\(l-(p+1)\\)\u6b65\uff0c\u518d\u4e00\u76f4\u5f80\\(c\\)\u8df3</li> </ul> <p>\u4e0d\u96be\u60f3\u5230\u53ef\u4ee5\u9884\u5904\u7406\u51fa\\(nc[x][c]\\)\u8868\u793aTrie\u4e0a\u7684\\(x\\)\u8282\u70b9\uff0c\u4e00\u76f4\u5339\u914d\\(c\\)\u80fd\u6700\u7ec8\u5339\u914d\u5230\u7684\u8282\u70b9\u662f\u54ea\u4e2a\u3002\u8fd9\u6837\u6211\u4eec\u627e\u5230\u4fee\u6539\u7684\u8282\u70b9\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f80\u4e0b\u8df3\u3002\u800c\u5f80\u4e0a\u8df3\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7528\u500d\u589e\u8df3fa\u5b9e\u73b0\u3002</p> <p>\u590d\u6742\u5ea6\\(O(26n+(n+Q)\\log n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=1e6+100;\nint ans[N][26];//now x,if append c,the ans\nint n,Q;\nint cur,lens,nowd,nowc;\n\nnamespace Trie{\n    int m=1;\n    int c[N][26],nc[N][26],cnt[N],cntend[N],dep[N],fa[22][N];\n    void insert(char *s,int n){\n        int now=1;\n        for(int i=0;i&lt;n;++i){\n            int t=s[i]-'a';\n            if(!c[now][t]) c[now][t]=++m;\n            now=c[now][t]; \n            ++cnt[now];\n        }\n\n        ++cntend[now];\n    }\n    void dfs(int x,int dp,int sum){\n        dep[x]=dp;\n        for(int i=0;i&lt;26;++i){\n            ans[x][i]=sum+cntend[x];\n            if(c[x][i]){\n                fa[0][c[x][i]]=x;\n                dfs(c[x][i],dp+1,sum+cntend[x]);\n                sum+=cnt[c[x][i]];\n                if(dep[c[x][i]]&lt;=lens) nc[x][i]=nc[c[x][i]][i];\n            }\n            else{\n                if(dep[x]&lt;=lens) nc[x][i]=x;\n            }\n            if(dep[x]==lens) nc[x][i]=x;\n        }\n    }\n    void init(){\n        for(int j=1;j&lt;22;++j) for(int i=1;i&lt;=m;++i){\n            fa[j][i]=fa[j-1][fa[j-1][i]];\n        }\n    }\n    int jump(int now,int stp){\n        for(int i=0;i&lt;22;++i){\n            if(stp&amp;(1&lt;&lt;i)) now=fa[i][now];\n        }\n        return now;\n    }\n};\nusing namespace Trie;\n\nchar s[N],ss[N];\n\nvoid solve(){\n    n=read();Q=read();\n    scanf(\"%s\",s);lens=strlen(s);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%s\",ss);\n        insert(ss,strlen(ss));\n    }\n    dfs(1,0,0);\n    init();\n\n    cur=1;nowd=0;nowc=0;\n    for(int i=0;i&lt;lens;++i){\n        int t=s[i]-'a';\n        if(!c[cur][t]){\n            break;\n        }\n        nowd++;cur=c[cur][t];\n    }\n    nowc=(nowd==lens?0:s[nowd]-'a');\n    if(nowd==lens) printf(\"%d\\n\",ans[cur][0]-cntend[cur]);\n    else printf(\"%d\\n\",ans[cur][s[nowd]-'a']);\n\n    //printf(\"%d %d\\n\",cur,nowd);\n\n    while(Q--){\n        char zc[2];\n        int p=read(),ch;scanf(\"%s\",zc);ch=zc[0]-'a';\n        if(p&gt;nowd+1){\n            //printf(\"here!\\n\");\n        }\n        else if(p==nowd+1){\n            cur=nc[cur][ch];nowc=ch;nowd=dep[cur];\n        }\n        else{\n            //printf(\"jump!!:%d %d\\n\",cur,nowd-p+1);\n            cur=jump(cur,nowd-p+1);cur=nc[cur][ch];\n            nowc=ch;nowd=dep[cur];\n        }\n        if(nowd==lens) printf(\"%d\\n\",ans[cur][0]-cntend[cur]);\n        else printf(\"%d\\n\",ans[cur][nowc]);\n\n        //printf(\"%d %d\\n\",cur,nowd);\n    }\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>H.Lots of Parabolas</p> <p>\u7ed9\u5b9a\\(n\\)\u6761\u5f62\u5982\\(ax^2+bx+c\\)\u7684\u4e8c\u6b21\u66f2\u7ebf\uff0c\u6c42\u4e00\u4e2a\u70b9\u4f7f\u5f97\u5b83\u5728\u6240\u6709\u66f2\u7ebf\u7684\u5f00\u53e3\u8303\u56f4\u5185\uff08\u4e0d\u5305\u62ec\u8fb9\u754c\uff09\uff0c\u70b9\u4fdd\u8bc1\u5b58\u5728\u3002</p> <p>\\(n\\leq 10^5,|a|,|b|,|c|\\leq 10^9,a\\neq 0\\)</p> <p>\u5982\u56fe\uff0c\u7ea2\u8272\u90e8\u5206\u4e3a\\(a&gt;0\\)\u7684\u66f2\u7ebf\u4ea4\uff0c\u84dd\u8272\u90e8\u5206\u4e3a\\(a&lt;0\\)\u7684\u66f2\u7ebf\u4ea4\u3002</p> <p></p> <p>\u4e0d\u96be\u53d1\u73b0\u5bf9\u6240\u6709\\(a&gt;0\\)\u7684\u66f2\u7ebf\uff0c\u5f00\u53e3\u7684\u4ea4\u662f\u4e00\u4e2a\u51f8\u51fd\u6570\\(f(x)\\)\uff1b\u5bf9\u6240\u6709\\(a&lt;0\\)\u7684\u66f2\u7ebf\uff0c\u5f00\u53e3\u7684\u4ea4\u4e5f\u662f\u4e00\u4e2a\u51f8\u51fd\u6570\\(g(x)\\)\u3002\u8bbe\u6c42\u7684\u70b9\\(p(x_p,y_p)\\)\uff0c\u663e\u7136\u6709\\(f(x_p)&lt;y_p&lt;g_(x_p)\\)\u3002\u800c\\(h(x)=f(x)-g(x)\\)\u53c8\u662f\u4e00\u4e2a\u51f8\u51fd\u6570\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u4e09\u5206\u51fa\\(h(x)\\)\u7684\u6700\u5c0f\u503c\u7684\\(x\\)\uff0c\u7136\u540e\\(x_p=\\frac {f(x)+g(x)} 2\\)\u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log |W|)\\)</p> <p>I.Wheel of Fortune</p> <p>\u731c\u5355\u8bcd\u6e38\u620f\uff0c\u6709\\(n\\)\u4e2a\u957f\u5ea6\u4e3a\\(L\\)\u7684\u5b57\u7b26\u4e32\u4e3a\u53ef\u80fd\u7684\u7b54\u6848\u3002\u4f60\u6bcf\u6b21\u53ef\u4ee5\u8be2\u95ee\u4e00\u4e2a\u5b57\u6bcd\uff0c\u82e5\u7b54\u6848\u5b57\u7b26\u4e32\u4e2d\u6709\u8fd9\u4e2a\u5b57\u6bcd\uff0c\u5219\u544a\u8bc9\u4f60\u8fd9\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\uff1b\u82e5\u6ca1\u6709\u5219\u8f93\u3002\u95ee\u4f60\u662f\u5426\u4e00\u5b9a\u80fd\u83b7\u80dc\u3002</p> <p>\\(L\\leq 10^6,n\\leq 10^5 \\sum |s|\\leq 10^6\\)</p> <p>\u5b9e\u9645\u4e0a\u662f\u4e2a\u6a21\u62df\u9898\u3002</p> <p>\u663e\u7136\u6bcf\u6b21\u8be2\u95ee\u8981\u4fdd\u8bc1\u5f53\u524d\u53ef\u80fd\u7684\u7b54\u6848\u96c6\u5408\u91cc\u6bcf\u4e2a\u4e32\u90fd\u6709\u8fd9\u4e2a\u5b57\u6bcd\uff0c\u800c\u5728\u8be2\u95ee\u5b8c\u8fd9\u4e2a\u5b57\u6bcd\u4ee5\u540e\uff0c\u4f1a\u5c06\u8fd9\u4e2a\u96c6\u5408\u6309\u7167\u5b57\u6bcd\u51fa\u73b0\u7684\u4f4d\u7f6e\u5206\u6210\u82e5\u5e72\u4e2a\u66f4\u5c0f\u7684\u96c6\u5408\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u96c6\u5408size&gt;1\uff0c\u4e14\u6ca1\u6709\u672a\u77e5\u7684\u76f8\u540c\u7684\u5b57\u6bcd\u4e86\uff0c\u90a3\u4e48\u5b58\u5728\u731c\u4e0d\u4e2d\u7684\u53ef\u80fd\uff0c\u76f4\u63a5\u8f93\u51faNO\u3002\u5982\u679c\u96c6\u5408size=1\u8bf4\u660e\u8fd9\u6761\u8def\u7ebf\u53ef\u884c\u3002</p> <p>\u540c\u65f6\u4e0d\u96be\u53d1\u73b0\u4efb\u610f\u731c\u5b57\u6bcd\u7684\u987a\u5e8f\u4e0d\u5f71\u54cd\u7ed3\u679c\uff0c\u6240\u4ee5\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u6a21\u62df\u9898\u3002</p> <p>\u6bcf\u4e2a\u4e32\u5bf9\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u4f1a\u5206\u914d\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\\(O(26n)\\)\uff0c\u5b9e\u73b0\u4e0a\u53ef\u4ee5\u7528map, vector\\ &gt;\u8fd9\u79cd\u4e1c\u897f\u3002 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=1e6+10;\nint n,m;\nbool hv[N][26];\nstring st[N];\n\nvoid solve(const vector&lt;int&gt;&amp;now,const set&lt;int&gt;&amp;alp){\n    if(now.size()==1) return;\n    int d=-1;\n    for(auto v:alp){\n        bool flag=1;\n        for(auto s:now){\n            if(!hv[s][v]){\n                flag=0;\n                break;\n            }\n        }\n        if(flag){\n            d=v;\n            break;\n        }\n    }\n    if(d==-1){\n        puts(\"NO\");\n        exit(0);\n    }\n    map&lt;vector&lt;int&gt;,vector&lt;int&gt; &gt;mp;\n    for(auto s:now){\n        vector&lt;int&gt;tmp;\n        for(int i=0;i&lt;m;++i){\n            if(st[s][i]-'a'==d) tmp.pb(i);\n        }\n        mp[tmp].pb(s);\n    }\n\n    set&lt;int&gt;nlp;\n    for(auto v:alp) nlp.insert(v);\n    nlp.erase(d);\n\n    for(auto v:mp){\n        solve(v.se,nlp);\n    }\n}\n\nvoid solve(){\n    m=read();n=read();\n    vector&lt;int&gt;now;\n    set&lt;int&gt;alp;\n    for(int i=0;i&lt;26;++i) alp.insert(i);\n    for(int i=1;i&lt;=n;++i){\n        cin&gt;&gt;st[i];\n        for(int j=0;j&lt;m;++j) hv[i][st[i][j]-'a']=1;\n        now.pb(i);\n    }\n    solve(now,alp);\n    puts(\"YES\");\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>Problem L. Birthday</p> <p>\u6709 \\(n\\) \u5f20\u5361\u7247\u653e\u5728\u684c\u5b50\u4e0a\uff0c\u6bcf\u5f20\u5361\u7247\u4e00\u9762\u5199\u7740 \\(a_i\\)\uff0c\u53e6\u4e00\u9762\u5199\u7740 \\(b_i\\)\u3002\u6bcf\u5f20\u5361\u7247\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4e00\u9762\u671d\u4e0a\uff0c\u533a\u95f4 \\([l,r]\\) \u7684\u6743\u503c \\(f(l,r)\\) \u4e3a\u7b2c \\(l\\sim r\\) \u5f20\u5361\u7247\u671d\u4e0a\u90a3\u9762\u7684\u6570\u503c\u4e4b\u548c\uff0c\u4f46\u5982\u679c\u548c\u662f \\(k\\) \u7684\u500d\u6570\uff0c\u5219\u6743\u503c\u4f1a\u88ab\u5f3a\u5236\u7f6e \\(0\\)\u3002</p> <p>\u6c42 \\(\\sum\\limits_{l=1}^{n}{\\sum\\limits_{r=l}^{n}{f(l,r)}}\\)\uff0c\u7b54\u6848\u5bf9 \\(10^9+7\\) \u53d6\u6a21\u3002\u6bcf\u4e2a\u533a\u95f4\u6743\u503c\u7684\u8ba1\u7b97\u662f\u72ec\u7acb\u7684\uff0c\u5373\u5728\u7edf\u8ba1\u4e0d\u540c\u533a\u95f4\u65f6\uff0c\u540c\u4e00\u5f20\u5361\u7247\u7684\u72b6\u6001\u4e0d\u5fc5\u76f8\u540c\u3002</p> <p>\\(n\\leq 5\\times 10^5,k\\leq 10^9\\)</p> <p>SOL1:</p> <p>\u5982\u679c\u6ca1\u6709 \\(k\\) \u7684\u500d\u6570\u7684\u9650\u5236\uff0c\u663e\u7136\u6bcf\u5f20\u5361\u7247\u90fd\u4f1a\u9009\u62e9\u8f83\u5927\u7684\u90a3\u9762\u671d\u4e0a\uff08\u4e0d\u59a8\u5047\u8bbe \\(a_i\\geq b_i\\) \uff09\u3002</p> <p>\u73b0\u5728\u8003\u8651\u90a3\u4e9b\u548c\u662f \\(k\\) \u7684\u500d\u6570\u7684\u533a\u95f4\uff08\u79f0\u4e3a\u4e0d\u5408\u6cd5\u7684\u533a\u95f4\uff09\uff0c\u6211\u4eec\u5c1d\u8bd5\u5c06\u5176\u4e2d\u4e00\u5f20\u5361\u7247\u7ffb\u9762\uff0c\u4f7f\u5b83\u4e0d\u518d\u662f \\(k\\) \u7684\u500d\u6570\u3002</p> <p>\u79c9\u6301\u7740\u8981\u8ba9\u533a\u95f4\u548c\u6700\u5927\u7684\u76ee\u6807\uff0c\u6211\u4eec\u4f1a\u9009\u62e9 \\(a_i-b_i\\) \u4e0d\u662f \\(k\\) \u7684\u500d\u6570\u4e14\u6700\u5c0f\u7684\u90a3\u4e2a\u3002</p> <p>\u8bbe\u5f53\u524d\u533a\u95f4 \\([L,R]\\) \u4e2d\u7684\u201c\u8fd9\u5f20\u201d\u5361\u7247\u4e3a \\(p\\)\uff0c\u5219\u8be5\u533a\u95f4\u5185\u7684\u4e0d\u5408\u6cd5\u533a\u95f4 \\([l,r](L\\leq l\\leq p\\leq r\\leq R)\\)\uff0c\u90fd\u4f1a\u9009\u62e9\u5c06\u8fd9\u5f20\u5361\u7ffb\u9762\uff0c\u4ece\u800c\u53d8\u5f97\u5408\u6cd5\u3002</p> <p>\u800c\u5361\u7247 \\(p\\) \u7ffb\u9762\u540e\uff0c\u533a\u95f4 \\([L,R]\\) \u88ab\u5206\u6210\u4e86\u4e24\u4e2a\u5c0f\u533a\u95f4\uff0c\\([L,p-1]\\) \u548c \\([p+1,R]\\)\uff0c\u9012\u5f52\u8fdb\u53bb\u5904\u7406\u5373\u53ef\u3002</p> <p>\u4f46\u662f\uff0c\u5361\u7247 \\(p\\) \u53ef\u80fd\u5e76\u4e0d\u5b58\u5728\uff0c\u5373\u6240\u6709 \\(a_i-b_i\\) \u90fd\u662f \\(k\\) \u7684\u500d\u6570\uff0c\u6b64\u65f6\u4efb\u4f55\u5361\u7247\u7ffb\u9762\u90fd\u65e0\u6cd5\u6539\u53d8\u533a\u95f4\u7684\u5408\u6cd5\u6027\uff08\u6ce8\u610f\u8fd9\u4e0d\u4ee3\u8868\u8fd9\u4e2a\u533a\u95f4\u7684\u6240\u6709\u5b50\u533a\u95f4\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u4f8b\u5982 \\(a=[3,1,3],b=[3,1,3]\\) \uff0c\u6b64\u65f6\u4ecd\u7136\u5b58\u5728\u5408\u6cd5\u7684\u533a\u95f4\uff0c\u4f8b\u5982 \\([2,2]\\) \uff0c\u53ea\u662f\u5b50\u533a\u95f4 \\([1,1],[3,3]\\) \u4e0d\u5408\u6cd5\u7684\u72b6\u51b5\u65e0\u6cd5\u6539\u53d8\u4e86\uff0c\u9700\u8981\u5c06\u5b83\u4eec\u7684\u6743\u503c\u6e05\u96f6\uff09\uff0c\u6b64\u65f6\u9700\u8981\u7edf\u8ba1\u8be5\u533a\u95f4\u5185\u7684\u6240\u6709\u4e0d\u5408\u6cd5\u533a\u95f4\u7684\u6743\u503c\u548c\uff0c\u5e76\u76f4\u63a5\u9000\u51fa\u3002</p> <p>\u5361\u7247 \\(p\\) \u5f88\u597d\u627e\uff0c\u7528ST\u8868\u9884\u5904\u7406\u7136\u540e\u533a\u95f4RMQ\u67e5\u8be2\u5373\u53ef\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4 \\([L,R]\\)\uff0c\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u548c\u4e3a \\(k\\) \u7684\u500d\u6570\u7684\u5b50\u533a\u95f4 \\([l,r]\\) \u6ee1\u8db3 \\(l\\leq p\\leq r\\)\u3002</p> <p>\u5bf9\u5e8f\u5217\u505a\u524d\u7f00\u548c \\(psum\\)\uff08\u5bf9 \\(k\\) \u53d6\u4f59\uff09\uff0c\u82e5 \\(psum[r]=psum[l-1]\\) \uff0c\u5219\u533a\u95f4 \\([l,r]\\) \u7684\u548c\u662f \\(k\\) \u7684\u500d\u6570\u3002</p> <p>\u90a3\u4e48\u7528 <code>std::map</code> \\(cntpsum\\) \u8bb0\u5f55 \\([L,R]\\) \u4e2d\u6bcf\u4e2a\u524d\u7f00\u548c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5b50\u533a\u95f4 \\([l,r]\\) \u7684\u4e2a\u6570\u53ef\u4ee5\u8fd9\u4e48\u7edf\u8ba1\u51fa\u6765\uff1a</p> <ul> <li>\u5728 \\(cntpsum\\) \u4e2d\u5220\u9664 \\(psum[L\\sim p]\\)</li> <li>\u679a\u4e3e \\(psum[L-1\\sim p]\\)\uff0c\u7d2f\u8ba1\u5f53\u524d\u503c\u5728 \\(cntpsum\\) \u4e2d\u7684\u51fa\u73b0\u6b21\u6570</li> </ul> <p>\u4f46\u662f\u5b83\u7684\u64cd\u4f5c\u6b21\u6570\u662f \\(O(p-L)\\) \u7684\uff0c\u82e5\u6bcf\u6b21 \\(p=R\\)\uff0c\u590d\u6742\u5ea6\u5c06\u9000\u5316\u4e3a\u533a\u95f4\u957f\u5ea6\uff0c\u8fd9\u65e0\u6cd5\u63a5\u53d7\u3002</p> <p>\u90a3\u4e48\u505a\u540e\u7f00\u548c \\(ssum\\)\uff0c\u901a\u8fc7\u4e0e\u524d\u7f00\u548c\u7edf\u8ba1\u5b8c\u5168\u5bf9\u79f0\u7684\u540e\u7f00\u548c\u7edf\u8ba1\u7684\u65b9\u6cd5\uff0c\u5373\u53ef\u901a\u8fc7 \\(ssum[p\\sim R+1]\\) \u51fa\u73b0\u7684\u6b21\u6570\u5f97\u5230\u5b50\u533a\u95f4\u7684\u4e2a\u6570\u3002</p> <p>\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e\u5de6\u53f3\u533a\u95f4\u54ea\u4e2a\u66f4\u5c0f\uff0c\u7075\u6d3b\u9009\u62e9\u7528\u524d\u7f00\u548c\u7edf\u8ba1\u6216\u8005\u540e\u7f00\u548c\u7edf\u8ba1\uff0c\u6b64\u65f6\u7684\u64cd\u4f5c\u6b21\u6570\u662f \\(\\min(r-p+1,p-l+1)\\leq \\frac{R-L+1}{2}\\)\uff0c\u4e0d\u4f1a\u8d85\u8fc7\u533a\u95f4\u5927\u5c0f\u7684\u4e00\u534a\uff01</p> <p>\u7c7b\u4f3c\u7684\uff0c\u7531\u4e8e\u6211\u4eec\u9700\u8981\u5f97\u5230\u5f53\u524d\u533a\u95f4\u7684\u524d\u540e\u7f00\u548c\u51fa\u73b0\u6b21\u6570\u7684<code>map</code> \\(cntpsum/cntssum\\)\uff0c\u9012\u5f52\u5230\u4e0b\u4e00\u5c42\u65f6\uff0c\u6839\u636e\u5b50\u533a\u95f4\u7684\u5927\u5c0f\uff0c\u5b83\u4eec\u7684<code>map</code>\u4f1a\u6709\u4e24\u79cd\u6765\u6e90\uff08\u5047\u8bbe \\([L,p-1]\\) \u66f4\u5927\uff09\uff1a</p> <ul> <li>\u5bf9\u4e8e \\([L,p-1]\\)\uff0c\u5c06\\([L,R]\\) \u7684 <code>map</code> \u4e2d\u5220\u53bb \\(ssum[p\\sim R]\\) \u548c \\(psum[p\\sim R]\\) </li> <li>\u5bf9\u4e8e \\([p+1,R]\\)\uff0c\u5f00\u4e00\u4e2a\u65b0\u7684 <code>map</code>\uff0c\u5e76\u5c06 \\(ssum[p+1\\sim R]\\) \u548c \\(psum[p+1\\sim R]\\) \u9010\u4e2a\u63d2\u5165</li> </ul> <p>\u8fd9\u6837\u4e5f\u80fd\u4fdd\u8bc1\u64cd\u4f5c\u6b21\u6570\u4e0d\u8d85\u8fc7\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\u3002</p> <p>\u590d\u6742\u5ea6\u4e3a\u5e38\u6570\u6781\u5927\u7684 \\(O(n\\log{n})\\) \u6216\u8005 \\(O(n\\log^2{n})\\) \uff1f</p> <p>\u53cd\u6b632000ms\u7684\u65f6\u9650\u51e0\u4e4e\u662f\u8d34\u7740\u8fc7\u7684\uff081900+ms\uff09\uff0c\u7a0d\u5fae\u4f18\u5316\u4e86\u4e00\u4e0b\u8dd1\u5230\u4e861700ms\uff0c\u8fd8\u662f\u5f88\u6162\uff08\u961f\u53cb\u7b2c\u4e8c\u5929\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u7edf\u8ba1\u53ea\u8dd1\u4e86700ms\uff09\u3002</p> <p>\u5343\u4e07\u8bb0\u5f97\u5173\u540c\u6b65\uff0c\u597d\u4e45\u6ca1\u6709\u5927\u6570\u636e\u8f93\u5165\u4e86\uff0c5e5\u7684\u8f93\u5165<code>cin</code> \u6839\u672c\u9876\u4e0d\u4f4f\uff0c\u8bfb\u5165\u5c31T\u4e86\u3002</p> <p></p> <p>SOL2:</p> <p>\u8fd9\u91cc\u662f\u770b\u4e0a\u53bb\u6bd4\u8f83\u597d\u5199\u7684\u505a\u6cd5\u3002</p> <p>\u9996\u5148\u8fd8\u662f\u5bf9\\(b_i\\)\u505a\u524d\u7f00\u548c\\(sum_i\\)\uff0c\u7136\u540e\u6c42\u4e00\u904d\u5047\u8bbe\u5168\u53d6\\(b_i\\)\u7684\u7b54\u6848\u3002\u8bb0\\(d_i=(b_i-a_i)\\%K?(b_i-a_i):\\inf\\)\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\\(sum_i\\equiv sum_j (\\text{mod }K)\\)\u7684\\((i,j)\\)\uff0c\u5b9e\u9645\u4e0a\u8d21\u732e\u5c31\u662f\u5c06\\([i+1,j]\\)\u91cc\u9762\u6700\u5c0f\u7684\\(d_i\\)\u51cf\u53bb\uff0c\u4f46\u82e5\\(d_i=\\inf\\)\uff0c\u5c31\u662f\u51cf\u53bb\\((sum_j-sum_i)\\)\u3002</p> <p>\u6309\\(sum_i\\%K\\)\u5206\u7ec4\uff0c\u5047\u8bbe\u6709\\(m\\)\u4e2a\u4f4d\u7f6e\\(p_i\\)\uff0c\u5bf9\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\\(mind_i\\)\uff0c\u4e00\u5171\\(m-1\\)\u4e2a\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7st\u8868\u7b80\u5355\u5b9e\u73b0\u3002\uff08\u8fd9\u91cc\u4e0b\u6807\u90fd\u4ece1\u5f00\u59cb\uff09</p> <p>\u63a5\u4e0b\u6765\u8003\u8651\u6bcf\u4e2a\\(mind_i\\)\u7684\u8d21\u732e\u533a\u95f4\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u5355\u8c03\u6808\u95ee\u9898\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\\(mind_{l[i]}\\leq mind_i,mind_{r[i]}&lt;mind_i\\)\u3002</p> <p>\u82e5\\(mind_i&lt;\\inf\\)\uff0c\u5219\\(mind_i\\)\u7684\u8d21\u732e\u6b21\u6570\u4e3a\uff1a</p> \\[(r[i]-i+1)\\cdot (i-l[i]+1)\\] <p>\u5426\u5219\u6211\u4eec\u9700\u8981\u5feb\u901f\u8ba1\u7b97\u6bcf\u4e2a\\(sum_{p_i}\\)\u9700\u8981\u51cf\u53bb\u7684\u8d21\u732e\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u5bf9\\(sum_{p_i}\\)\u505a\u524d\u7f00\u548c\\(ssum_i\\)\uff08\u4e0b\u6807\\(1\\sim m\\)\uff09\uff0c\u90a3\u4e48\u51cf\u53bb\u7684\u8d21\u732e\u4e3a\uff1a</p> \\[(ssus_{r[i]+1}-ssum[i])\\cdot (i-l[i]+1)(ssum[i]-ssum[l[i]-1])\\cdot (r[i]-i+1)\\] <p>\u5b9e\u9645\u4e0a\u5c31\u662f\uff08\u53f3\u8fb9sum\u548c\\(\\times\\)\u5de6\u8fb9\u7aef\u70b9\u4e2a\u6570-\u5de6\u8fb9sum\u548c\\(\\times\\)\u53f3\u8fb9\u7aef\u70b9\u4e2a\u6570\uff09\u3002</p> <p>\u7531\u4e8e\u6bcf\u4e2a\\(sum_i\\)\u53ea\u5728\u4e00\u7ec4\u4e2d\u88ab\u7edf\u8ba1\u8d21\u732e\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u662f\\(O(n\\log n)\\)\uff0c\u74f6\u9888\u5728st\u8868\u6c42\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5176\u4ed6\u90e8\u5206\u90fd\u662f\\(O(n)\\)\u7684\u3002</p> <pre><code>//sol1\n#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MOD = 1e9 + 7;\nusing ll = long long;\n\nstruct mint {\n    int n;\n    mint() : n(0) { ; }\n    mint(ll m) {\n        if (m &lt; 0 || MOD &lt;= m) {\n            m %= MOD;\n\n            if (m &lt; 0)\n                m += MOD;\n        }\n\n        n = m;\n    }\n    operator int() {\n        return n;\n    }\n};\nbool operator==(mint a, mint b) {\n    return a.n == b.n;\n}\nmint operator+=(mint &amp;a, mint b) {\n    a.n += b.n;\n\n    if (a.n &gt;= MOD)\n        a.n -= MOD;\n\n    return a;\n}\nmint operator-=(mint &amp;a, mint b) {\n    a.n -= b.n;\n\n    if (a.n &lt; 0)\n        a.n += MOD;\n\n    return a;\n}\nmint operator*=(mint &amp;a, mint b) {\n    a.n = ((ll)a.n * b.n) % MOD;\n    return a;\n}\nmint operator+(mint a, mint b) {\n    return a += b;\n}\nmint operator-(mint a, mint b) {\n    return a -= b;\n}\nmint operator*(mint a, mint b) {\n    return a *= b;\n}\nmint operator^(mint a, ll n) {\n    if (n == 0)\n        return mint(1);\n\n    mint res = (a * a) ^ (n / 2);\n\n    if (n % 2)\n        res = res * a;\n\n    return res;\n}\nll inv(ll a, ll p) {\n    return (a == 1 ? 1 : (1 - p * inv(p % a, a)) / a + p);\n}\nmint operator/(mint a, mint b) {\n    return a * mint(inv(b, MOD));\n}\nmint operator/=(mint &amp;a, mint b) {\n    a = a / b;\n    return a;\n}\n\nint main() {\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    int n, k;\n    cin &gt;&gt; n &gt;&gt; k;\n\n    vector&lt;int&gt; a(n + 1), b(n + 1), c(n + 1);\n\n    for (int i = 1, x, y; i &lt;= n; ++i) {\n        cin &gt;&gt; x &gt;&gt; y;\n        a[i] = max(x, y) - min(x, y);\n        b[i] = max(x, y);\n        c[i] = (bool)(a[i] % k);\n    }\n\n    vector&lt;int&gt; bin(20), lg(n + 1);\n    bin[0] = 1;\n\n    for (int i = 1; i &lt; 20; ++i)\n        bin[i] = bin[i - 1] * 2;\n\n    for (int i = 2; i &lt;= n; ++i)\n        lg[i] = lg[i / 2] + 1;\n\n    auto f = vector(lg[n] + 1, vector(n + 1, 0));\n\n    auto getMin = [&amp;](int x, int y) {\n        if (c[x] &amp;&amp; c[y])\n            return a[x] &lt; a[y] ? x : y;\n\n        return c[x] ? x : y;\n    };\n\n    for (int i = 1; i &lt;= n; ++i)\n        f[0][i] = i;\n\n    for (int i = 1; i &lt;= lg[n]; ++i) {\n        for (int j = 1; j + bin[i] - 1 &lt;= n; ++j) {\n            f[i][j] = getMin(f[i - 1][j], f[i - 1][j + bin[i - 1]]);\n        }\n    }\n\n    auto queryMin = [&amp;](int l, int r) {\n        int k = lg[r - l + 1];\n        return getMin(f[k][l], f[k][r - bin[k] + 1]);\n    };\n\n    unordered_map&lt;int, int&gt; pre, suf;\n    vector&lt;int&gt; psum(n + 2), ssum(n + 2);\n\n    for (int i = 1; i &lt;= n; ++i) {\n        psum[i] = (psum[i - 1] + b[i]) % k;\n        pre[psum[i]]++;\n    };\n\n    for (int i = n; i &gt;= 1; --i) {\n        ssum[i] = (ssum[i + 1] + b[i]) % k;\n        suf[ssum[i]]++;\n    }\n\n    auto remove = [&amp;](unordered_map&lt;int, int&gt; &amp;pre, unordered_map&lt;int, int&gt; &amp;suf, int l, int r) {\n        for (int i = l; i &lt;= r; ++i) {\n            --pre[psum[i]];\n            --suf[ssum[i]];\n        }\n    };\n\n    vector&lt;mint&gt; bsum(n + 1), asum(n + 1);\n\n    for (int i = 1; i &lt;= n; ++i) {\n        bsum[i] = bsum[i - 1] + mint(b[i]);\n        asum[i] = asum[i - 1] + bsum[i];\n    }\n\n    function&lt;mint(int, int, unordered_map&lt;int, int&gt;&amp;, unordered_map&lt;int, int&gt;&amp;)&gt; dfs = [&amp;](int l, int r, unordered_map&lt;int, int&gt; &amp;pre, unordered_map&lt;int, int&gt; &amp;suf) -&gt; mint {\n        if (l &gt; r)\n            return 0;\n\n        int p = queryMin(l, r);\n\n        if (a[p] % k == 0) {\n            unordered_map&lt;int, mint&gt; mp, cnt;\n\n            for (int i = l; i &lt;= r; ++i) {\n                mp[psum[i]] += bsum[i];\n                cnt[psum[i]] += mint(1);\n            }\n\n            mint ans = mp[psum[l - 1]] - cnt[psum[l - 1]] * bsum[l - 1];\n\n            for (int i = l; i &lt;= r; ++i) {\n                ans += mp[psum[i]] - cnt[psum[i]] * bsum[i];\n\n                mp[psum[i]] -= bsum[i];\n                cnt[psum[i]] -= mint(1);\n            }\n\n            return ans;\n        }\n\n        int lsz = p - l, rsz = r - p;\n        mint cnt = 0, ans = 0, val = a[p];;\n        unordered_map&lt;int, int&gt; mpp, mps;\n\n        if (lsz &gt; rsz) {\n            remove(pre, suf, p, r);\n            ++pre[psum[l - 1]];\n\n            for (int i = p; i &lt;= r; ++i)\n                cnt += mint(pre[psum[i]]);\n\n            --pre[psum[l - 1]];\n            ans += dfs(l, p - 1, pre, suf);\n\n            for (int i = p + 1; i &lt;= r; ++i)\n                mps[ssum[i]]++, mpp[psum[i]]++;\n\n            ans += dfs(p + 1, r, mpp, mps);\n        } else {\n            remove(pre, suf, l, p);\n            ++suf[ssum[r + 1]];\n\n            for (int i = l; i &lt;= p; ++i)\n                cnt += suf[ssum[i]];\n\n            --suf[ssum[r + 1]];\n            ans += dfs(p + 1, r, pre, suf);\n\n            for (int i = l; i &lt; p; ++i)\n                mps[ssum[i]]++, mpp[psum[i]]++;\n\n            ans += dfs(l, p - 1, mpp, mps);\n        }\n\n        return ans + cnt * val;\n    };\n\n    mint ans = 0, sum = asum[n];\n\n    for (int i = 1; i &lt;= n; ++i) {\n        ans += sum - mint(n - i + 1) * bsum[i - 1];\n        sum -= bsum[i];\n    }\n\n    cout &lt;&lt; ans - dfs(1, n, pre, suf) &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <pre><code>//sol2\n#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define int long long\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint read(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=5e5+10,mod=1e9+7,inf=0x3f3f3f3f3f3f3f3f;\nint n,K,ans;\nint a[N],b[N],sum[N],Log[N],fc[22];\nint st[22][N];\nunordered_map&lt;int,vector&lt;int&gt; &gt;mp;\n\nint upm(int x){return (x%mod+mod)%mod;}\nvoid up(int &amp;x,int y){x=upm(x+y);}\n\nint getmin(int l,int r){\n    int t=Log[r-l+1];\n    return min(st[t][l],st[t][r-fc[t]+1]);\n}\n\nint val[N],lm[N],rm[N],sums[N];\nstack&lt;int&gt;s;\nint calc(const vector&lt;int&gt;&amp;vec){\n    int ret=0,cnt=0;\n    for(int i=0;i&lt;(int)vec.size()-1;++i) \n        val[++cnt]=getmin(vec[i]+1,vec[i+1]);\n    sums[1]=sum[vec[0]];\n    for(int i=1;i&lt;(int)vec.size();++i)\n        sums[i+1]=upm(sums[i]+sum[vec[i]]);\n    while(!s.empty()) s.pop();\n    val[0]=-inf;s.push(0);\n    for(int i=1;i&lt;=cnt;++i){\n        while(!s.empty() &amp;&amp; val[s.top()]&gt;=val[i]) s.pop();\n        lm[i]=s.top()+1;s.push(i);\n    }\n    while(!s.empty()) s.pop();\n    val[cnt+1]=-inf;s.push(cnt+1);\n    for(int i=cnt;i&gt;=1;--i){\n        while(!s.empty() &amp;&amp; val[s.top()]&gt;val[i]) s.pop();\n        rm[i]=s.top()-1;s.push(i);\n    }\n    for(int i=1;i&lt;=cnt;++i){\n        if(val[i]==inf){\n            int cr=upm(sums[rm[i]+1]-sums[i])*(i-lm[i]+1)%mod;\n            int cl=upm(sums[i]-sums[lm[i]-1])*(rm[i]-i+1)%mod;\n            up(ret,-cr);up(ret,cl);\n        }\n        else{\n            int tim=(rm[i]-i+1)*(i-lm[i]+1);\n            up(ret,-tim%mod*val[i]%mod);   \n        }\n    }\n    return ret;\n}\n\nvoid solve(){\n    fc[0]=1;\n    for(int i=1;i&lt;22;++i) fc[i]=fc[i-1]&lt;&lt;1;\n    for(int i=2;i&lt;N;++i) Log[i]=Log[i&gt;&gt;1]+1;\n\n    n=read();K=read();\n    for(int i=1;i&lt;=n;++i){\n        a[i]=read(),b[i]=read();\n        if(a[i]&lt;b[i]) swap(a[i],b[i]);\n        b[i]=a[i]-b[i];\n    }\n\n    mp[0].pb(0);\n    for(int i=1;i&lt;=n;++i){\n        sum[i]=sum[i-1]+a[i];\n        mp[sum[i]%K].pb(i);\n    }\n\n    int ans=0;\n    for(int i=1;i&lt;=n;++i){\n        sum[i]%=mod;\n        up(ans,sum[i]*(2*i-n)%mod);\n        if(b[i]%K) st[0][i]=b[i];\n        else st[0][i]=inf;\n    }\n    for(int j=1;j&lt;21;++j) for(int i=1;i&lt;=n-fc[j]+1;++i){\n        st[j][i]=min(st[j-1][i],st[j-1][i+fc[j-1]]);\n    }\n    for(auto v:mp){\n        up(ans,calc(v.se));\n    }\n    printf(\"%lld\\n\",ans);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"vp/cf-gym-103931/","title":"2022 Shanghai Collegiate Programming Contest","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 69, solved 6/14</p> </li> </ul> <p>\u72b6\u6001\u5f88\u5dee\uff0c\u4e00\u5806\u9898\u80fd\u5f00\u4f46\u662f\u6ca1\u5f00\u51fa\u6765\u3002</p> <p>L. Last Warning of the Competition Finance Officer</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\\(s\\)\u548c\\(n\\)\u4e2a\u5339\u914d\u4e32\\(t_i\\)\uff0c\u5339\u914d\u4e32\u6709\u6743\u503c\\(w_i\\)\uff0c\u5b9a\u4e49\u4e00\u4e2a\u4e32\u7684\u4ef7\u503c\u4e3a\uff0c\u9009\u62e9\u4e32\u4e2d\u4efb\u610f\u4e0d\u76f8\u4ea4\u5b50\u4e32\u7684\u4ef7\u503c\u4e58\u79ef\u4e4b\u548c\uff0c\u540c\u65f6\u8981\u6c42\u5b50\u4e32\u662f\u5339\u914d\u4e32\u4e4b\u4e00\uff0c\u7a7a\u4e32\u7684\u4ef7\u503c\u4e3a1\u3002\u6c42\\(s\\)\u7684\u6bcf\u4e2a\u524d\u7f00\u7684\u4ef7\u503c\uff0c\u5bf9998244353\u53d6\u6a21\u3002</p> <p>\\(n,|s|,\\sum |t_i|\\leq 2\\times10^5\\)</p> <p>\u6211\u4eec\u8bbe\\(f_i\\)\u8868\u793a\u524d\u7f00\\(i\\)\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u6709\u4e00\u4e2a\u663e\u7136\u7684\u8f6c\u79fb\uff1a</p> \\[ f_i=\\sum f_jw_k \\] <p>\u5176\u4e2d\\([j+1,i]\\)\u662f\u7b2c\\(k\\)\u4e2a\u5339\u914d\u4e32\u3002</p> <p>\u8fd9\u6837\u663e\u7136\u662f\\(n^2\\)\u7684\uff0c\u4f46\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684trick\u662f\u5339\u914d\u4e32\u81f3\u591a\u53ea\u6709\\(\\log\\)\u79cd\u4e0d\u540c\u7684\u957f\u5ea6\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u957f\u5ea6\uff0c\u7528\u54c8\u5e0c\u5224\u65ad\u7ed3\u5c3e\u3002\u590d\u6742\u5ea6\u662f\\(O(n\\sqrt n\\cdot \\log n)\\)\u7684\uff0c\u6709\u4e2a\u54c8\u5e0c\u7684\\(\\log\\)\uff0c\u800c\u4e14\u5e38\u6570\u5f88\u5927\uff0c\u5e76\u4e0d\u80fd\u901a\u8fc7\u3002</p> <p>\u8003\u8651\u8fd9\u4e2a\u5339\u914d\u7684\u8fc7\u7a0b\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u5efa\u7acbAC\u81ea\u52a8\u673a\uff0c\\(s\\)\u5728\u81ea\u52a8\u673a\u4e0a\u5339\u914d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u8981\u4ece\u5f53\u524d\u70b9\u4e00\u76f4\u8df3fail\u5c31\u80fd\u83b7\u5f97\u6240\u6709\u7684\u5339\u914d\u60c5\u51b5\u3002\u4f46\u662f\u66b4\u529b\u8df3\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5f80\u4e0a\u8df3\u80fd\u8df3\u5230\u7684\u6700\u8fd1\u7684\u5339\u914d\u4e32\u7684\u4f4d\u7f6e\u662f\u54ea\u3002\u8fd9\u6837\u6211\u4eec\u5229\u7528\u8fd9\u4e2a\u4fe1\u606f\u8df3\u5c31\u662f\\(O(n\\sqrt n)\\)\u7684\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define int long long\n#define hvie '\\n'\n#define read yh\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\n\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int N=4e5+10,M=27,mod=998244353;\n\nstruct ACM{\n    int cnt=1;\n    int ch[N][M],val[N],fail[N],len[N],preed[N];\n    void insert(char *s,int v){\n        int m=strlen(s+1),now=0;\n        for(int i=1;i&lt;=m;++i){\n            int c=s[i]-'a';\n            if(!ch[now][c]) ch[now][c]=++cnt;\n            len[ch[now][c]]=len[now]+1;\n            now=ch[now][c];\n        }\n        val[now]=v;\n    }\n    void build(){\n        queue&lt;int&gt;q;\n        for(int i=0;i&lt;26;++i){\n            if(ch[0][i]) q.push(ch[0][i]),fail[ch[0][i]]=0;\n        }\n        fail[1]=0;\n        while(!q.empty()){\n            int u=q.front();q.pop();\n            for(int i=0;i&lt;26;++i){\n                if(ch[u][i]) fail[ch[u][i]]=ch[fail[u]][i],q.push(ch[u][i]);\n                else ch[u][i]=ch[fail[u]][i];\n            }\n            if(val[fail[u]]) preed[u]=fail[u];\n            else preed[u]=preed[fail[u]]; \n        }\n    }\n}T;\n\nint n,val[N],f[N];\nchar s[N],t[N];\n\nsigned main(){\n    scanf(\"%s\",s+1);scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%s\",t+1);scanf(\"%lld\",&amp;val[i]);\n        T.insert(t,val[i]);\n    }\n    T.build();\n    //puts(\"!!\");\n    n=strlen(s+1);f[0]=1;\n    for(int i=1,now=0;i&lt;=n;++i){\n        f[i]=f[i-1];\n        now=T.ch[now][s[i]-'a'];\n        for(int j=now;j;j=T.preed[j]){\n            f[i]+=T.val[j]*f[i-T.len[j]];\n            f[i]%=mod;\n        }\n\n    }\n    for(int i=1;i&lt;=n;++i) printf(\"%lld \",f[i]);\n    return 0;\n}\n</code></pre> <p>I. It Takes Two of Two</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u521d\u59cbn\u4e2a\u70b9\uff0c\u6ca1\u6709\u8fde\u8fb9\u7684\u56fe\u3002\u6bcf\u6b21\u64cd\u4f5c\uff0c\u968f\u673a\u9009\u62e9\u4e24\u4e2a\u70b9(u,v)\uff0c\u5176\u4e2du,v\u90fd\u662f\u4ece1..n\u4e2d\u7b49\u6982\u7387\u62bd\u6837\u5f97\u5230\u7684\u3002\u5982\u679cu\u548cv\u7684\u5ea6\u6570\u90fd\u5c0f\u4e8e2\uff0c\u800c\u4e14u\u4e0d\u7b49\u4e8ev\uff0c\u800c\u4e14u\u548cv\u6ca1\u6709\u8fc7\u8fde\u8fb9\uff0c\u5c31\u8fde\u4e0a\uff0c\u5426\u5219\u4e0d\u4ea7\u751f\u5f71\u54cd\u3002\u95ee\u671f\u671b\u591a\u5c11\u6b21\u80fd\u591f\u8ba9\u6574\u4e2a\u56fe\u4e0d\u80fd\u518d\u64cd\u4f5c\u3002 n\u4e0d\u8d85\u8fc7200</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6574\u4e2a\u56fe\u8981\u4e48\u5168\u662f\u73af\u957f\\(\\ge3\\)\u7684\u73af\uff0c\u8981\u4e48\u9664\u4e86\u8fd9\u4e9b\u73af\u4ee5\u5916\u53ea\u6709\u4e00\u4e2a\u5b64\u7acb\u70b9\u3001\u6216\u8005\u53ea\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u7684\u94fe\uff0c\u5c31\u6ca1\u6cd5\u518d\u64cd\u4f5c\u4e86\u3002\u6ce8\u610f\u5230\\(n\\le 200\\)\uff0c\u800c\u4e14\u7b54\u6848\u662f\u6d6e\u70b9\u6570\uff0c\u5c31\u4e0d\u8981\u60f3\u7740\u76f4\u63a5\u5199\u5f0f\u5b50\u51fa\u6765\u4e86\u3002\u53ef\u4ee5\u8003\u8651\\(O(n^3)\\)\u7684dp\uff0c\u8bbe\\(f(n,s,l)\\)\u8868\u793a\u6709\\(n\\)\u4e2a\u5b64\u7acb\u70b9\uff0c\\(s\\)\u4e2a\u957f\u4e3a1\u7684\u94fe\uff0c\\(l\\)\u4e2a\u957f\u5ea6\u5927\u4e8e1\u7684\u94fe\u7684\u60c5\u51b5\u4e0b\u7684\u671f\u671b\u64cd\u4f5c\u6b21\u6570\u3002\u7b54\u6848\u5219\u662f\\(f(n,0,0)\\)</p> <p>\u8bbe\u6709\u6548\u8f6c\u79fb\u7684\u8d21\u732e\u662f\\(ans\\)\uff0c\u65e0\u6548\u8f6c\u79fb\u7684\u65b9\u6848\u6570\u662f\\(rem\\)\uff0c\u90a3\u4e48\u6709\uff1a $$ f(n,s,l)=1+\\frac{rem}{n^2}f(n,s,l)+ans\\ f(n,s,l)=\\frac{n^2+n^2\\cdot ans}{n^2-rem} $$</p> <p>\u8003\u8651ans\u7684\u6210\u5206\uff0c\u5c31\u662f\u8003\u8651\u600e\u4e48\u628a\\(n,s,l\\) \u4e4b\u95f4\u7ec4\u5408\u8d77\u6765\uff0c\u6709\\((n,n)\\rightarrow s\\), \\((n,s)\\rightarrow s\\),  \\((n,l)\\rightarrow l\\), \\((s,s)\\rightarrow l\\), \\((s,l)\\rightarrow l\\), \\((l,l)\\rightarrow\\)\u73af, \\((l,l')\\rightarrow l\\)\u8fd9\u51e0\u79cd\u8f6c\u79fb\u3002\u540c\u65f6\u8bb0\u4e00\u4e0b\u6709\u6548\u8f6c\u79fb\u7684\u65b9\u6848\u6570\u3002</p> <p>\u6240\u4ee5\u72b6\u6001\u6570\\(O(n^3)\\)\uff0c\u8f6c\u79fb\\(O(1)\\)\uff0c\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u53ef\u4ee5\u89e3\u51b3\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\nbool vis[205][205][205];\ndb f[205][205][205];\nint N;\ndb dp(int n,int s,int l){\n    if(vis[n][s][l]) return f[n][s][l];\n    if(n==0&amp;&amp;s==0&amp;&amp;l==0) return 0.0;\n    if(n==1&amp;&amp;s==0&amp;&amp;l==0) return 0.0;\n    if(n==0&amp;&amp;s==1&amp;&amp;l==0) return 0.0;\n    vis[n][s][l]=1;\n    db ans=N*N;\n    //n,n\n    int rem=N*N;\n    if(n&gt;=2){\n        ans+=(n*(n-1))*dp(n-2,s+1,l);\n        rem-=n*(n-1);\n    }\n    //n,s\n    if(n&amp;&amp;s){\n        ans+=n*s*4*dp(n-1, s-1, l+1);\n        rem-=n*s*4;\n    }\n    //s,s\n    if(s&gt;=2){\n        ans+=(2*s)*(2*s-2)*dp(n,s-2,l+1);\n        rem-=(2*s)*(2*s-2);\n    }\n    //n,l\n    if(n){\n        ans+=n*4*l*dp(n-1, s, l);\n        rem-=n*4*l;\n    }\n    //s,l\n    if(s){\n        ans+=2*(2*s*2*l)*dp(n,s-1,l);\n        rem-=2*(2*s*2*l);\n    }\n    //l,l\n    if(l){\n        if(l&gt;=2){\n            ans+=(2*l)*(2*l-2)*dp(n,s,l-1);\n            rem-=2*l*(2*l-2);\n        }\n        ans+=(2*l)*dp(n,s,l-1);\n        rem-=2*l;\n    }\n    return f[n][s][l]=ans/(N*N-rem);\n}\n\nsigned main(){\n    N=yh();\n    cout&lt;&lt;fixed&lt;&lt;setprecision(9)&lt;&lt;dp(N,0,0)&lt;&lt;hvie;\n    return 0;\n}\n</code></pre> <p>B. Bracket Query</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570n\u548cq\u4e2a\u8981\u6c42\uff0c\u8981\u4f60\u6784\u9020\u4e00\u4e2a\u5408\u6cd5\u7684\u957f\u5ea6\u4e3an\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u5e76\u4e14\u6ee1\u8db3q\u4e2a\u8981\u6c42\uff1a[li,ri]\u4e2d\u7684\u5de6\u62ec\u53f7\u6570-\u53f3\u62ec\u53f7\u6570=ci\uff0c\u5982\u679c\u53ef\u884c\u8f93\u51fa\u65b9\u6848\uff0c\u5426\u5219\u8f93\u51fa\"?\" , \\(n\\le 5000, q\\le 5e5\\)</p> <p>\u8bbe\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u6709\u4e2a\u53d8\u91cf\\(a_i\\)\uff0c\u5982\u679c\u4ed6\u662f\u5de6\u62ec\u53f7\u5c31\u662f+1\uff0c\u5426\u5219\u662f\\(-1\\)\uff0c\u5176\u524d\u7f00\u548c\u5c31\u8981\u6ee1\u8db3\u8981\u6c42\uff1a $$ s_0=0\\ s_i-s_{i-1}=\\pm 1\\ s_n-s_0=0\\ s_i-s_0\\ge 0\\ s_{r_i}-s_{l_i-1}=c_i\\ $$ \u5176\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff0c\u53ef\u4ee5\u6539\u5199\u6210\\(-1\\le s_i-s_{i-1}\\le 1\\)\u3002 \u8fd9\u662f\u56e0\u4e3a\u57fa\u4e8e\u8fd9\u79cd\u4e0d\u7b49\u5f0f\u6765\u8fde\u8fb9\uff0c\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u8fb9\u7684\u8fb9\u6743\u90fd\u662f\u5947\u6570\uff0c\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u8dd1\u51fa\u6765\u7684\u89e3\u7684\u76f8\u90bb\u4f4d\u7f6e\u5947\u5076\u6027\u4e5f\u4e0d\u4e00\u6837\u3002\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\\(s_i=s_{i-1}\\)\u7684\u60c5\u51b5\u3002</p> <p>\u7136\u800c\uff0cq\u592a\u5927\uff0c\u5982\u679c\u786c\u8fde\u7684\u8bdd\uff0c\u8dd1\u6700\u77ed\u8def\u4f1aT\u3002 \u6ce8\u610f\u5230\u6bcf\u4e2a\u8be2\u95ee\u662f\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u7b49\u5f0f\uff0c\u5c31\u53ef\u4ee5\u501f\u52a9\u5e26\u6743\u5e76\u67e5\u96c6\uff0c\u7ef4\u62a4\u5230\u6839\u7684\u5dee\u3002\u5982\u679cq\u5bf9\u5e94\u7684\u4e24\u7aef\u7684\u503c\u5df2\u7ecf\u5728\u540c\u4e00\u96c6\u5408\uff0c\u5219\u68c0\u67e5\u4e0b\u4ed6\u4eec\u7684\u5dee\u662f\u4e0d\u662f\u5bf9\u7684\u3002</p> <p>\u8fd9\u6837\u8fde\u8fb9\u7684\u603b\u6b21\u6570\u5c31\u53ea\u6709\\(O(n)\\)\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\nint n,m;\nint d[maxn];\nvector&lt;pii&gt;adj[maxn];\nint f[maxn];\nll len[maxn];\nint getf(int x){\n    if(f[x]==x) return len[x]=0,x;\n    int fa=getf(f[x]);\n    len[x]+=len[f[x]];\n    return f[x]=fa;\n}\n\nint dis[maxn];\n\nint addeq(int x,int y,int c){\n    //a[y]-a[x]=c\n    int fx=getf(x),fy=getf(y);\n    if(fx==fy){\n        if(len[y]-len[x]!=c){\n            return -1;\n        }\n    }\n    else{\n        f[fx]=fy;\n        len[fx]=len[y]-len[x]-c;\n        adj[x].pb({y,c});\n        adj[y].pb({x,-c});\n    }\n    return 0;\n}\nbool inq[maxn];\nint cnt[maxn];\n\nsigned main(){\n    n=yh(),m=yh();\n    rep(i,1,n){\n        adj[i-1].pb({i,1});\n        adj[i].pb({i-1,1});\n        adj[i].pb({0,0});\n    }\n    rep(i,0,n){\n        f[i]=i;\n        len[i]=0;\n    }\n    addeq(0,n,0);\n    rep(i,1,m){\n        int l=yh(),r=yh(),c=yh();\n        if(addeq(l-1,r,c)==-1) cout&lt;&lt;\"?\\n\",exit(0);\n    }\n    rep(i,0,n) dis[i]=0x3f3f3f3f;\n    queue&lt;int&gt;q;\n    dis[0]=0;\n    inq[0]=1;\n    q.push(0);\n    while(!q.empty()){\n        int x=q.front();q.pop();\n        inq[x]=0;\n        for(auto[y,w]:adj[x]){\n            if(dis[y]&gt;dis[x]+w){\n                dis[y]=dis[x]+w;\n                if(!inq[y]){\n                    q.push(y);\n                    if(++cnt[y]&gt;n+100){\n                        cout&lt;&lt;\"?\\n\";exit(0);\n                    }\n                    inq[y]=1;\n                }\n            }\n        }\n    }\n    cout&lt;&lt;\"! \";\n\n    rep(i,1,n){\n        // cout&lt;&lt;i&lt;&lt;\":\"&lt;&lt;dis[i]&lt;&lt;hvie;\n        cout&lt;&lt;(dis[i]-dis[i-1]&gt;0?'(':')');\n        // cout&lt;&lt;i&lt;&lt;\":\"&lt;&lt;dis[i]&lt;&lt;hvie;\n    }cout&lt;&lt;hvie;\n\n    return 0;\n}\n/*\nlen[y]-(len[x]+?)=d\n?=len[y]-len[x]-d\n*/\n</code></pre> <p>!!!note\"C. Coffee Overdose\"</p> <pre><code>\u4f60\u73b0\u5728\u7cbe\u529b\u503c\u4e3aS\uff0c\u6709\u4e00\u4e2a\u53c2\u6570C\u3002\u4f60\u6bcf\u5de5\u4f5c\u5355\u4f4d\u65f6\u95f4\uff0c\u4f1a\u8ba9\u5b8c\u6210\u5ea6+S\uff0c\u5e76\u4e14\u81ea\u5df1\u7684S-1\u3002\u4e5f\u53ef\u4ee5\u9009\u62e9\u559d\u5496\u5561\uff0c\u559d\u4e00\u6b21\u5496\u5561\u4f1a\u5728\u4e4b\u540e\u7684\u8fde\u7eedC\u4e2a\u5de5\u4f5c\u5355\u4f4d\u65f6\u95f4\u8ba9\u7cbe\u529b\u4fdd\u6301\u5728S\uff0cC\u6bb5\u65f6\u95f4\u540e\u7cbe\u529b\u4e0b\u964d\u4e3aS-C-1\u3002S&lt;=0\u65f6\u4e0d\u80fd\u518d\u5de5\u4f5c\u3002\u95ee\u6700\u591a\u591a\u5c11\u5b8c\u6210\u5ea6\u3002S,C&lt;=17280\uff0c1e5\u8be2\u95ee\n</code></pre> <p>\u9996\u5148\u6709\u4e24\u4e2a\u7ed3\u8bba\uff1a 1. \u559d\u5496\u5561\u65f6\uff0c\u5e94\u8be5\u6ee1\u8db3\\(S\\le \\frac{C(C+1)}2\\) 2. \u5982\u679c\u8981\u559d\u5496\u5561\uff0c\u5c31\u8981\u8fde\u7eed\u559d</p> <p>\u8fd9\u6837\uff0c\u5047\u8bbe\u6700\u540e\u4e00\u6b21\u559d\u5496\u5561\u65f6\uff0c\u4f53\u529b\u503c\u4e3aS\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b21\u559d\u5496\u5561\u7684\u65f6\u5019\u5c31\u6ee1\u8db3: $$ x+k(C+1)\\le \\min(\\frac{C(C+1)}2, S)\\ k=\\lfloor\\frac{up-x}{C+1}\\rfloor $$ \u7b54\u6848\u4e3a\uff1a $$ C(\\frac{(x+x+k(C+1))(k+1)}{2})+\\sum_{y=x+k(C+1)+1}^S y $$ \u662f\u4e2a\u5173\u4e8ex\u7684\u4e8c\u6b21\u51fd\u6570\uff08k\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff09\u3002 \u800c\\(x\\)\u7684\u53d6\u503c\u662f\\(1..C+1\\)\uff0c\u6240\u4ee5\\(k\\)\u7684\u503c\u6700\u591a\u53ea\u6709\u4e24\u79cd\u3002\u628a\\(x\\)\u6309\u7167k\u7684\u53d6\u503c\u6765\u5206\u6bb5\uff0c\u4e24\u6bb5\u5206\u522b\u4e09\u5206\u6216\u8005\u76f4\u63a5\u6c42\uff0c\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define rep(i,a,b) for(int i=(a),i##ss=(b);i&lt;=i##ss;i++)\n#define dwn(i,a,b) for(int i=(a),i##ss=(b);i&gt;=i##ss;i--)\n#define rng(i,a,b) for(int i=(a);i&lt;(b);i++)\n#define deb(x) cerr&lt;&lt;(#x)&lt;&lt;\":\"&lt;&lt;(x)&lt;&lt;'\\n'\n#define pb push_back\n#define mkp make_pair\n#define fi first\n#define se second\n#define hvie '\\n'\nusing namespace std;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\nint yh(){\n    int ret=0;bool f=0;char c=getchar();\n    while(!isdigit(c)){if(c==EOF)return -1;if(c=='-')f=1;c=getchar();}\n    while(isdigit(c))ret=(ret&lt;&lt;3)+(ret&lt;&lt;1)+(c^48),c=getchar();\n    return f?-ret:ret;\n}\nconst int maxn=3e5+5;\nint c,s;\nint up;\nint calc(int x){\n    // x+k*(c+1)&lt;=min(c(c+1)/2,s)\n    int k=(up-x)/(c+1);\n    //x x+(c+1) x+2(c+1) ... x+k*(c+1)\n    int lim=x+k*(c+1)+1;\n    // s, .. , lim\n    int ans2=0;\n    if(s&gt;=lim){\n        ans2=(s+lim)*(s-lim+1)/2;\n    }\n    return c*(x+x+k*(c+1))*(k+1)/2ll+ans2;\n}\n\nint fen(int l,int r){\n    int ans=0;\n    while(l+10&lt;=r){\n        int mid=(l+r)/2,rmid=(mid+r)/2;\n        if(calc(mid)&lt;calc(rmid)) l=mid;\n        else r=rmid;\n    }\n    rep(i,l,r) ans=max(ans,calc(i));\n    return ans;\n}\n\nsigned main(){\n    //x=1..c+1\n    dwn(_,yh(),1){\n        s=yh(),c=yh();\n        if(s&lt;=c){\n            cout&lt;&lt;s*c&lt;&lt;hvie;\n            continue;\n        }\n        up=min(c*(c+1)/2,s);\n        int pt=up-up/(c+1)*(c+1);\n        int ans=max(fen(1,pt),fen(pt+1,c+1));\n        cout&lt;&lt;ans&lt;&lt;hvie;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"vp/nowcoder-32708/","title":"The 2021 ICPC Asia Kunming Regional Programming Contest","text":"<ul> <li> <p>\u6bd4\u8d5b\u94fe\u63a5\uff1alink</p> </li> <li> <p>Rank 24, solved 6/13</p> </li> </ul> <p>B.Blocks</p> <p>\u6709\u4e00\u4e2a\u5de6\u4e0b\u89d2\u4e3a\\((0,0)\\)\uff0c\u53f3\u4e0a\u89d2\u4e3a\\((H,W)\\)\u7684\u7f51\u683c\u77e9\u5f62\uff0c\u6709\\(n\\)\u4e2a\u5b50\u77e9\u5f62\u5de6\u4e0b\u89d2\u683c\u70b9\u4e3a\\((x_{1,i},y_{1,i})\\)\uff0c\u53f3\u4e0a\u89d2\u683c\u70b9\u4e3a\\((x_{2,i},y_{2,i})\\)\u3002\u73b0\u5728\u6bcf\u6b21\u4ece\u8fd9\\(n\\)\u4e2a\u5b50\u77e9\u5f62\u91cc\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5168\u6d82\u9ed1\uff0c\u76f4\u5230\u6574\u4e2a\u5927\u77e9\u5f62\u88ab\u6d82\u9ed1\uff0c\u6c42\u671f\u671b\u6b65\u6570\uff0c\u6216\u8f93\u51fa-1\u8868\u793a\u4e0d\u53ef\u80fd\u3002</p> <p>\\(n\\leq 10\\)</p> <p>\u9996\u5148\u8fd9\u4e2a\u4e1c\u897f\u7ed9\u7684\u662f\u683c\u70b9\uff0c\u6d82\u7684\u662f\u91cc\u9762\u7684\u683c\u5b50\uff0c\u8fd9\u91cc\u6ca1\u8bfb\u6e05\u695a\u5361\u4e86\u5f88\u4e45\u3002\u7b80\u5355\u7684\u5904\u7406\u65b9\u5f0f\u662f\u53d8\u6210\u5de6\u95ed\u53f3\u5f00\u8fd9\u6837\u3002</p> <p>\u89c2\u5bdf\u5230\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u5176\u5b9e\u5f88\u5bb9\u6613\u5f80\u72b6\u538b\u4e0a\u60f3\uff0c\u4e00\u4e2a\u76f4\u89c2\u7684\u60f3\u6cd5\u662f\u8bbe\\(f[s]\\)\u8868\u793a\\(s\\)\u8fd9\u4e2a\u72b6\u6001\u5168\u6d82\u8fc7\u7684\u671f\u671b\u6b65\u6570\uff0c\u7136\u540e\u8003\u8651\u80fd\u8f6c\u79fb\u5230\u54ea\u91cc\uff0c\u5176\u5b9e\u5c31\u662f\u679a\u4e3e\u6bcf\u4e2a\u77e9\u5f62\uff0c\u7136\u540e\u5b83\u53ef\u4ee5\u8f6c\u79fb\u5230\\(f[s|(1&lt;&lt;i)]\\)\u3002</p> <p>\u8fd9\u6837\u5199\u51fa\u6765\u4ee5\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u5f62\u5982\uff1a</p> \\[f[s]=\\frac 1 n((f[s_1]+1)+(f[s_2]+1)+\\cdots)\\] <p>\u5de6\u53f3\u4e24\u8fb9\u53ef\u4ee5\u540c\u65f6\u4e58\u4ee5\\(n\\)\u3002\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u662f\u4e2aDAG\uff0c\u4e8e\u662f\u6309\u7167\u62d3\u6251\u5e8f\u8f6c\u79fb\u5373\u53ef\u3002\u5f53\u7136\u4f1a\u6709\u81ea\u5df1\u8f6c\u79fb\u5230\u81ea\u5df1\u7684\u53ef\u80fd\u6027\uff0c\u4e0d\u8fc7\u4e5f\u53ea\u9700\u8981\u79fb\u5411\u5373\u53ef\u3002</p> <p>\u4f46\u662f\u6309\u7167\u4e0a\u9762\u8fd9\u4e48\u505a\u662f\u51fa\u4e0d\u6765\u7ed3\u679c\u7684\uff0c\u56e0\u4e3a\u4f60\u4f1a\u53d1\u73b0\u6709\u591a\u4e2a\u7ec8\u6001\uff08\u67d0\u4e9b\\(s\\)\u80fd\u4f7f\u6574\u4e2a\u77e9\u5f62\u6d82\u9ed1\uff09\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5012\u8fc7\u6765\u8003\u8651\uff0c\u4ece\u7ec8\u6001\u51fa\u53d1\u5f80\\(f[0]\\)\u63a8\u3002</p> <p>\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u5f0f\u5b50\u66f4\u52a0\u4f18\u7f8e\u4e86\uff0c\u56e0\u4e3a\u73b0\u5728\u4e00\u4e2a\u70b9\u7684\u65b9\u7a0b\u4e00\u5b9a\u6070\u597d\u6709\\(n\\)\u9879\uff01\uff08\u8003\u8651\u5230\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u662f\u7ec8\u6001\uff0c\u90a3\u5b83\u80fd\u9009\u62e9\\(n\\)\u4e2a\u77e9\u5f62\u4e2d\u7684\u4e00\u4e2a\uff0c\u90a3\u4e48\u73b0\u5728\u5c31\u4f1a\u5f62\u5982\uff09</p> \\[f[s]=1+\\frac 1 n(f[s_1]+f[s_2]+\\cdots)\\] <p>\u4e0b\u9762\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u6c42\u67d0\u4e2a\u72b6\u6001\u662f\u5426\u662f\u7ec8\u6001\u3002\u4f46\u662f\u5176\u5b9e\u8fd9\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u5b9e\u5728\u662f\u592a\u5c0f\u4e86\uff0c\u6240\u4ee5\u5750\u6807\u79bb\u6563\u5316\u4ee5\u540e\u66b4\u529b\u6d82\u8272\u5c31\u884c\u3002</p> <p>\u6700\u540e\u590d\u6742\u5ea6\u5927\u6982\u662f\\(O(n^32^n)\\)\u6216\u8005\u5176\u4ed6\u5565\u6837\u7684\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=22,M=1055,mod=998244353;\nint f[M],W,H,n,S[M],ans,cnt[M];\narray&lt;int,4&gt;a[N];\n\nint qpow(int x,int y){\n    int ret=1;\n    for(;y;y&gt;&gt;=1,x=x*x%mod)\n        if(y&amp;1) ret=ret*x%mod;\n    return ret;\n}\n\nint mp[N][N],A[M],du[M],core[M][M];\nvector&lt;pii&gt;G[M];\nvoid color(int i){\n    for(int x=a[i][0]+1;x&lt;=a[i][2];++x)\n        for(int y=a[i][1]+1;y&lt;=a[i][3];++y) mp[x][y]=1;\n}\nint getarea(){\n    int ret=0;\n    for(int i=1;i&lt;=W;++i) for(int j=1;j&lt;=H;++j)\n        if(mp[i][j]) ++ret;\n    return ret;\n}\n\nqueue&lt;int&gt;q;\nvoid topsort(){\n    for(int i=0;i&lt;(1&lt;&lt;n);++i) if(S[i]==(W-1)*(H-1)){\n        q.push(i),f[i]=0;\n        //cout&lt;&lt;\"ending \"&lt;&lt;i&lt;&lt;endl;\n    }\n    while(!q.empty()){\n        int x=q.front();q.pop();\n        //printf(\"%lld %lld %lld\\n\",x,f[x],S[x]);\n        //cout&lt;&lt;x&lt;&lt;\" \"&lt;&lt;n-__builtin_popcount(x)&lt;&lt;\" \"&lt;&lt;A[x]&lt;&lt;endl;\n        for(auto v:G[x]){\n            //cout&lt;&lt;x&lt;&lt;\" \"&lt;&lt;v.fi&lt;&lt;\" val:\"&lt;&lt;v.se&lt;&lt;endl;\n            f[v.fi]+=v.se*f[x]%mod;\n            f[v.fi]%=mod;\n            --du[v.fi];\n            if(!du[v.fi]){\n                q.push(v.fi);\n                f[v.fi]=(f[v.fi]+n)%mod;\n                f[v.fi]=f[v.fi]*qpow(n-__builtin_popcount(v.fi),mod-2)%mod;\n            }\n        }\n    }\n    printf(\"%lld\\n\",f[0]);\n}\n\nvoid solve(){\n    n=read();W=read();H=read();\n    vector&lt;int&gt;dx,dy;\n    for(int i=1;i&lt;=n;++i){\n        int x1=yh(),y1=yh(),x2=yh(),y2=yh();\n        //cout&lt;&lt;\"!!\"&lt;&lt;x1&lt;&lt;\" \"&lt;&lt;y1&lt;&lt;\" \"&lt;&lt;x2&lt;&lt;\" \"&lt;&lt;y2&lt;&lt;endl;\n        a[i]={x1,y1,x2,y2};\n        dx.pb(x1);\n        dx.pb(x2);\n        dy.pb(y1);\n        dy.pb(y2);\n    }\n    dx.pb(-1);dy.pb(-1);\n    dx.pb(0);dy.pb(0);\n    dx.pb(W);dy.pb(H);\n    sort(dx.begin(),dx.end());\n    sort(dy.begin(),dy.end());\n    dx.resize(unique(dx.begin(),dx.end())-dx.begin());\n    dy.resize(unique(dy.begin(),dy.end())-dy.begin());\n    rep(i,1,n){\n        auto [x,y,z,w]=a[i];\n        x=lower_bound(dx.begin(),dx.end(),x)-dx.begin();\n        z=lower_bound(dx.begin(),dx.end(),z)-dx.begin();\n        y=lower_bound(dy.begin(),dy.end(),y)-dy.begin();\n        w=lower_bound(dy.begin(),dy.end(),w)-dy.begin();\n        a[i]={x,y,z,w};\n    }\n    W=lower_bound(dx.begin(),dx.end(),W)-dx.begin();\n    H=lower_bound(dy.begin(),dy.end(),H)-dy.begin();\n    int lim=(1&lt;&lt;n);\n    for(int s=0;s&lt;lim;++s){\n        memset(mp,0,sizeof(mp));\n        for(int i=0;i&lt;n;++i) if(s&amp;(1&lt;&lt;i)){\n            color(i+1);\n        }\n        S[s]=getarea();\n        //cout&lt;&lt;s&lt;&lt;\" \"&lt;&lt;S[s]&lt;&lt;\" \"&lt;&lt;W*H&lt;&lt;endl;\n    }\n    if(S[lim-1]!=(W-1)*(H-1)){\n        puts(\"-1\");\n        return;\n    }\n    for(int s=0;s&lt;lim;++s){\n        if(S[s]==(W-1)*(H-1)) continue;\n        for(int i=0;i&lt;n;++i) ++core[s][s|(1&lt;&lt;i)];\n    }\n    for(int s=0;s&lt;lim;++s){\n        for(int ls=0;ls&lt;lim;++ls){\n            if(core[s][ls] &amp;&amp; s!=ls) G[ls].pb(mkp(s,core[s][ls])),++du[s];\n        }\n        A[s]=n-core[s][s];\n    }\n    topsort();\n    for(int i=0;i&lt;lim;++i) G[i].clear();\n    memset(core,0,sizeof(core));\n    memset(du,0,sizeof(du));\n    memset(A,0,sizeof(A));\n    memset(f,0,sizeof(f));\n}\n\nsigned main(){\n    for(int cas=read();cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>E.Easy String Problem</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(n\\)\u7684\u5b57\u7b26\u96c6\u5927\u5c0f\u4e5f\u4e3a\\(n\\)\u7684\u5b57\u7b26\u4e32\uff0c\\(q\\)\u4e2a\u72ec\u7acb\u7684\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u5982\u679c\u5c06\u5b57\u7b26\u4e32\u5220\u53bb\u5305\u62ec\\([l_i,r_i]\\)\u7684\u4efb\u610f\u5b50\u4e32\uff0c\u53ef\u4ee5\u5f97\u5230\u591a\u5c11\u4e2a\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\\(n,q\\leq 10^5\\)</p> <p>\u8fd9\u4e2a\u9898\u6bd4\u8d5b\u7684\u65f6\u5019\u4e00\u770b\u5c31\u4e0d\u662f\u4e00\u4e2a\u4f20\u7edf\u7684\u5b57\u7b26\u4e32\u9898\uff0c\u4e8e\u662f\u6ca1\u5f00\u3002\u8d5b\u540e\u60f3\u4e86\u633a\u4e45\u624d\u60f3\u5230\u7684\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u8fd9\u4e9b\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u7531\u4e8e\u6211\u4eec\u5220\u9664\u7684\u662f\u5305\u542b\\([l,r]\\)\u7684\u5b50\u4e32\uff0c\u90a3\u4e48\u6700\u540e\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u4e00\u6bb5\u524d\u7f00+\u4e00\u6bb5\u540e\u7f00\u3002\u8003\u8651\u5982\u4f55\u53bb\u91cd\uff0c\u4e00\u4e2a\u6bd4\u8f83\u7b80\u660e\u7684\u65b9\u5f0f\u662f\uff0c\u6211\u4eec\u5c3d\u91cf\u5728\u524d\u9762\u5339\u914d\u5b57\u7b26\u4e32\uff0c\u76f4\u5230\u4e0d\u80fd\u5339\u914d\u624d\u5728\u540e\u9762\u627e\u3002\u5f53\u6211\u4eec\u5339\u914d\u5230\\(i\\)\uff0c\u5982\u679c\u6211\u4eec\\(s[i]\\)\u8fd9\u4e2a\u5b57\u7b26\u6ca1\u6709\u5728\u524d\u9762\u9009\u62e9\uff0c\u800c\u662f\u5728\u540e\u9762\u9009\u62e9\u4e86\uff08\u5373\u5220\u9664\\([i,?]\\)\u8fd9\u6bb5\uff09\uff0c\u7b97\u91cd\u7684\u6b21\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u5728\u540e\u9762\u51fa\u73b0\u7684\u6b21\u6570\u3002</p> <p>\u8fd9\u6837\u5206\u6790\uff0c\u4e0d\u96be\u53d1\u73b0\u603b\u7684\u7b97\u91cd\u6b21\u6570\u5c31\u662f\u5de6\u53f3\u533a\u95f4\u6bcf\u7c7b\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u7684\u4e58\u79ef\u3002\u4e5f\u5373\uff1a</p> \\[\\sum_{i=1}^n cntl[i]\\times cntr[i]\\] <p>\u8fd9\u662f\u4e00\u4e2a\u83ab\u961f\u7684\u7ecf\u5178\u95ee\u9898\u3002</p> <p>\u6700\u540e\u518d\u7528\u603b\u53ef\u9009\u533a\u95f4\u4e2a\u6570\u51cf\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\sqrt n)\\)</p> <p>G.Glass Bead Game</p> <p>\u6709\\(n\\)\u4e2a\u8c46\u5b50\uff0c\u6bcf\u8f6e\u4f1a\u9009\u62e9\u4e00\u4e2a\u8c46\u5b50\u653e\u5230\u6700\u524d\u9762\uff0c\u7b2c\\(i\\)\u4e2a\u8c46\u5b50\u88ab\u9009\u4e2d\u7684\u6982\u7387\u662f\\(p_i\\)\uff0c\u6ee1\u8db3\\(\\sum p_i=1\\)\u3002\u5bf9\u4e8e\u4e00\u6b21\u79fb\u52a8\uff0c\u82e5\u5f53\u524d\u5b83\u662f\u7b2c\\(i\\)\u4e2a\uff0c\u5219\u4ee3\u4ef7\u662f\\(i-1\\)\u3002\u95ee\u65e0\u9650\u8f6e\u4e4b\u540e\uff0c\u8fdb\u884c\u4e00\u8f6e\u7684\u671f\u671b\u4ee3\u4ef7\u3002</p> <p>\\(n\\leq 100\\)</p> <p>\u7b80\u5355\u6982\u7387\u9898\uff0c\u770b\u5230\u5c31\u79d2\u4e86\u3002</p> <p>\u7531\u671f\u671b\u7684\u7ebf\u6027\u6027\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u8981\u8003\u8651\u7684\u5c31\u662f\u5bf9\u4e8e\u7b2c\\(i\\)\u4e2a\u8c46\u5b50\uff0c\u5b83\u7684\u671f\u671b\u6392\u540d\u662f\u591a\u5c11\uff0c\u7136\u540e\u6c42\u4e2a\u548c\u5373\u53ef\u3002</p> <p>\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u53c8\u53ef\u4ee5\u8f6c\u5316\u4e3a\u65e0\u9650\u8f6e\u540e\u6bcf\u4e2a\u8c46\u5b50\u5728\u5b83\u524d\u9762\u7684\u6982\u7387\u548c\uff0c\u4e5f\u5373\uff1a</p> \\[E[i]=\\sum_{j\\neq i} p[\u7b2cj\u4e2a\u8c46\u5b50\u5728\u7b2ci\u4e2a\u8c46\u5b50\u524d\u9762]\\] <p>\u7136\u540e\u56e0\u4e3a\u662f\u65e0\u9650\u8f6e\uff0c\u8fd9\u4e2a\u4e1c\u897f\u76f8\u5f53\u4e8e\u53ea\u7528\u8003\u8651\u4e0a\u4e00\u8f6e\u9009\u4e86\\(i\\)\u8fd8\u662f\u9009\u4e86\\(j\\)\u3002\u6211\u4eec\u4e0d\u9700\u8981\u8003\u8651\u5176\u4ed6\u7684\u8c46\u5b50\uff0c\u5b83\u4eec\u4e0d\u5f71\u54cd\\(i\\)\u548c\\(j\\)\u3002\u800c\u5f53\u53ea\u6709\u5b83\u4eec\u4e24\u4e2a\u7684\u65f6\u5019\uff0c\u663e\u7136\u8fd9\u4e2a\u6982\u7387\u5c31\u662f\\(\\frac {p_j} {p_i+p_j}\\)\u3002</p> <p>\u7136\u540e\u5c31\u6ca1\u6709\u7136\u540e\u4e86\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n^2)\\)</p> <p>I.Interval Mex</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\\(a_i\\)\uff0c\\(q\\)\u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\\([l_i,r_i]\\)\u7684\u6240\u6709\u5b50\u533a\u95f4\u4e2d\\(\\text{mex}\\)\u7684\u7b2c\\(k\\)\u5c0f\u503c\u662f\u591a\u5c11\u3002</p> <p>\\(n,q\\leq 10^5\\)\uff0c\u7a7a\u95f4\u9650\u523664MB</p> <p>\u8fd9\u4e2a\u7a7a\u95f4\u9650\u5236\u8fd8\u662f\u6709\u70b9\u9634\u95f4\u7684\u3002</p> <p>\u9996\u5148\u4e0d\u59a8\u8003\u8651\u5355\u4e2a\u8be2\u95ee\\([1,n]\\)\u600e\u4e48\u505a\u3002\u9996\u5148\u8fd9\u4e2a\\(\\text{mex}\\)\u663e\u7136\u662f\u53ef\u4ee5\u4e8c\u5206\u7684\uff0c\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u4e8c\u5206\u51fa\u7684\u503c\u4e3a\\(m\\)\u3002\u8bbe\\(p_{i,j}\\)\u4e3a\\(j\\)\u8fd9\u4e2a\u6570\u5b57\u5728\\(\\leq i\\)\u51fa\u73b0\u7684\u6700\u9760\u53f3\u7684\u4f4d\u7f6e\uff08\u5982\u679c\u6ca1\u6709\u5c31\u4e3a0\uff09\uff0c\u518d\u8bbe\\(t_{i}=\\min_{0\\leq j&lt;m}\\{p_{i,j}\\}\\)\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u5982\u679c\u6211\u4eec\u4ee5\\(i\\)\u4e3a\u53f3\u7aef\u70b9\uff0c\u6ee1\u8db3\\(\\text{mex}\\geq m\\)\u7684\u533a\u95f4\u4e2a\u6570\u5c31\u662f\\(t_i\\)\u3002</p> <p>\u8003\u8651\u600e\u4e48\u8ba1\u7b97\u8fd9\u4e2a\\(t_i\\)\uff0c\u6211\u4eec\u679a\u4e3e\\(j=0\\dots m-1\\)\uff0c\u8003\u8651\\(j\\)\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\\(b_1,\\dots b_c\\)\uff0c\u7136\u540e\u4ee4\\(b_0=0,b_{c+1}=n+1\\)\uff0c\u8bbe\u521d\u59cb\\(t_i\\)\u5747\u4e3a\\(n+1\\)\uff0c\u90a3\u4e48\u6709</p> \\[\\forall b_k\\leq i\\leq b_{k+1},t_i=\\min\\{t_i,b_k\\}\\] <p>\u663e\u7136\\(t_i\\)\u662f\u5355\u8c03\u9012\u589e\u7684\u4e00\u4e2a\u5e8f\u5217\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u505a\u7684\u5b9e\u9645\u4e0a\u662f\u533a\u95f4\u5bf9\u4e00\u4e2a\u6570\u53d6\\(\\min\\)\u64cd\u4f5c\uff0c\u7136\u540e\u8fd8\u8981\u6c42\u533a\u95f4\u548c\u3002</p> <p>\u518d\u8003\u8651\u5230\u533a\u95f4\\([L,R]\\)\uff0c\u5176\u5b9e\u548c\u524d\u9762\u7c7b\u4f3c\u5904\u7406\uff0c\u53ea\u662f\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\uff0c\u6ee1\u8db3\\(\\text{mex}\\geq m\\)\u7684\u533a\u95f4\u603b\u4e2a\u6570\u5c31\u662f\\(\\sum_{i&lt;R,t_i\\geq L}(t_i-L+1)\\)\u3002\u4e8e\u662f\u6211\u4eec\u8fd8\u8981\u652f\u6301\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u4ee5\u4fbf\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\\(t_i\\)\u4ece\u54ea\u5f00\u59cb\u3002</p> <p>\u4ee5\u4e0a\uff0c\u652f\u6301\u5bf9\u4e00\u4e2a\u6570\u53d6\\(\\min\\)\uff0c\u533a\u95f4\u548c\uff0c\u533a\u95f4\u6700\u5927\u503c\uff0c\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u7ebf\u6bb5\u6811\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u989d\u5916\u7ef4\u62a4\u6b21\u5927\u503c\u548c\u6700\u5927\u503c\u4e2a\u6570\u6765\u5b9e\u73b0\uff0c\u5177\u4f53\u6765\u8bf4\uff1a</p> <ul> <li> <p>\u5f53\\(max\\leq v\\)\u65f6\uff0c\u663e\u7136\u8fd9\u4e00\u6b21\u4fee\u6539\u4e0d\u4f1a\u5bf9\u8fd9\u4e2a\u8282\u70b9\u4ea7\u751f\u5f71\u54cd\uff0c\u76f4\u63a5\u9000\u51fa\u3002</p> </li> <li> <p>\u5f53\\(smax&lt;v&lt;max\\)\u65f6\uff0c\u663e\u7136\u8fd9\u4e00\u6b21\u4fee\u6539\u53ea\u4f1a\u5f71\u54cd\u5230\u6240\u6709\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6211\u4eec \u628a\\(sum\\)\u52a0\u4e0a\\(cnt\\cdot (v-max)\\)\uff0c\u628a \\(max\\) \u66f4\u65b0\u4e3a\\(x\\) \uff0c\u6253\u4e0a\u6807\u8bb0\u7136\u540e\u9000\u51fa\u3002</p> </li> <li> <p>\u5f53\\(smax&gt;x\\)\u65f6\uff0c\u9012\u5f52\u5904\u7406\u3002</p> </li> </ul> <p>\u63a5\u4e0b\u6765\u8003\u8651\\(q\\)\u4e2a\u8be2\u95ee\uff0c\u57fa\u4e8e\u524d\u9762\u7684\u4e8c\u5206\u60f3\u6cd5\uff0c\u6211\u4eec\u76f4\u63a5\u8003\u8651\u6574\u4f53\u4e8c\u5206\u5373\u53ef\u3002</p> <p>\u6bcf\u4e00\u6b21\u4e8c\u5206\u540e\uff0c\u8d21\u732e\u7684\u7edf\u8ba1\u4e0e\u5c0f\u4e8e\\(mid\\)\u7684\u6240\u6709\u6570\u5b57\u51fa\u73b0\u7684\u4f4d\u7f6e\u6709\u5173\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58$\\log $\u68f5\u7ebf\u6bb5\u6811\u72b6\u6001\uff0c\u4ee5\u4fbf\u5b8c\u6210\u5de6\u8fb9\u7684\u5904\u7406\u4ee5\u540e\u7ee7\u627f\u9012\u5f52\u5230\u53f3\u8fb9\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u4e2a\u4e1c\u897f\u7684\u7a7a\u95f4\u53ea\u670964MB\uff0c\u663e\u7136\u5f00\u4e0d\u4e0b\u3002</p> <p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u548c\u5de7\u5999\u7684\u64cd\u4f5c\u662f\u628a\u6574\u4f53\u4e8c\u5206\u5199\u6210\u975e\u9012\u5f52\u5f62\u5f0f\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u8be2\u95ee\u5f53\u524d\u7684\u4e8c\u5206\u533a\u95f4\\([l_i,r_i]\\)\uff0c\u7136\u540e\u6309\u7167\\(mid_i\\)\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u8fd8\u662f\u50cf\u6b63\u5e38\u4e00\u6837\u626b\u4e00\u904d\u7edf\u8ba1\u7b54\u6848\u3002</p> <p>\u4e8b\u5b9e\u4e0a\u5bf9\u4e8e\u6bcf\u5c42\u4e8c\u5206\uff0c\u7ebf\u6bb5\u6811\u7684\u5f62\u6001\u53d8\u5316\u90fd\u4e00\u6a21\u4e00\u6837\uff0c\u4e0d\u540c\u7684\u53ea\u662f\u6bcf\u4e2a\u8be2\u95ee\u7684\u8be2\u95ee\u65f6\u95f4\u3002\u8fd9\u662f\u4e00\u79cd\u901a\u7528\u7684\u65b9\u6cd5\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log^2n)\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\n\ntypedef long double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=1e5+10;\nconst db eps=1e-8,pi=acos(-1);\nint n,Q;\nint ans[N];\n\nstruct Seg{\n    #define ls (x&lt;&lt;1)\n    #define rs (x&lt;&lt;1|1)\n    #define mid ((l+r)&gt;&gt;1)\n\n    int c[N&lt;&lt;2],mx[N&lt;&lt;2],smx[N&lt;&lt;2],sum[N&lt;&lt;2],cnt[N&lt;&lt;2];\n\n    void pushup(int x){\n        sum[x]=sum[ls]+sum[rs];\n        mx[x]=max(mx[ls],mx[rs]);\n        cnt[x]=0;\n        if(mx[ls]==mx[rs]){\n            cnt[x]=cnt[ls]+cnt[rs];smx[x]=max(smx[ls],smx[rs]);\n        }\n        else{\n            if(mx[ls]&gt;mx[rs]){\n                cnt[x]=cnt[ls];smx[x]=max(smx[ls],mx[rs]);\n            }\n            else{\n                cnt[x]=cnt[rs];smx[x]=max(smx[rs],mx[ls]);\n            }\n        }\n    }\n    void pushdown(int x){\n        if(mx[ls]&gt;mx[x]){\n            sum[ls]-=(mx[ls]-mx[x])*cnt[ls];\n            mx[ls]=mx[x];\n        }\n        if(mx[rs]&gt;mx[x]){\n            sum[rs]-=(mx[rs]-mx[x])*cnt[rs];\n            mx[rs]=mx[x];\n        }\n    }\n    void build(int x,int l,int r){\n        mx[x]=cnt[x]=sum[x]=0;smx[x]=-1;\n        if(l==r){\n            sum[x]=mx[x]=n+1;cnt[x]=1;smx[x]=-1;\n            return;\n        }\n        build(ls,l,mid);build(rs,mid+1,r);\n        pushup(x);\n    }\n    void updatemin(int x,int l,int r,int L,int R,int v){\n        if(mx[x]&lt;=v) return;\n        if(L&lt;=l &amp;&amp; r&lt;=R &amp;&amp; smx[x]&lt;v){\n            sum[x]-=(mx[x]-v)*cnt[x];mx[x]=v;\n            return;\n        }\n        pushdown(x);\n        if(L&lt;=mid) updatemin(ls,l,mid,L,R,v);\n        if(R&gt;mid) updatemin(rs,mid+1,r,L,R,v);\n        pushup(x);\n    }\n    int querypos(int x,int l,int r,int L,int R){\n        if(mx[x]&lt;L) return n+1;\n        if(l==r) return l;\n        pushdown(x);\n        if(mx[ls]&gt;=L) return querypos(ls,l,mid,L,R);\n        else if(R&gt;mid) return querypos(rs,mid+1,r,L,R);\n        return n+1;\n    }\n    int querysum(int x,int l,int r,int L,int R){\n        if(L&lt;=l &amp;&amp; r&lt;=R) return sum[x];\n        pushdown(x);\n        int ret=0;\n        if(L&lt;=mid) ret+=querysum(ls,l,mid,L,R);\n        if(R&gt;mid) ret+=querysum(rs,mid+1,r,L,R);\n        return ret; \n    }\n    #undef ls\n    #undef rs\n    #undef mid\n}T;\n\nstruct node{\n    int l,r,mid,ql,qr,k,id;\n}q[N];\nvector&lt;int&gt;G[N];\n\nint C2(int x){return x*(x+1)/2;}\nvoid solve(vector&lt;int&gt;&amp;vec){\n    vector&lt;int&gt;res;\n    sort(vec.begin(),vec.end(),[&amp;](int x,int y){\n        return q[x].mid&lt;q[y].mid;\n    });\n    T.build(1,1,n);\n\n    int now=0,m=vec.size();\n    for(int i=0;i&lt;=n &amp;&amp; now&lt;m;++i){\n        int las=n+1;\n        for(auto p:G[i]){\n            T.updatemin(1,1,n,p,las-1,p);\n            las=p;\n        }\n        if(las&gt;1){\n            T.updatemin(1,1,n,1,las-1,0);\n        }\n        for(;now&lt;m &amp;&amp; q[vec[now]].mid==i;++now){\n            int t=vec[now];\n            int p=T.querypos(1,1,n,q[t].ql,q[t].qr),hv=0;\n            if(p&lt;=q[t].qr) hv=T.querysum(1,1,n,p,q[t].qr)-(q[t].ql-1)*(q[t].qr-p+1);\n\n            hv=C2(q[t].qr-q[t].ql+1)-hv;\n            //printf(\"nowfind:%lld %lld %lld %lld\\n\",t,p,hv,(q[t].ql-1)*(q[t].qr-p+1));\n            if(hv&lt;q[t].k){\n                q[t].l=q[t].mid+1;\n                q[t].mid=(q[t].r+q[t].l)&gt;&gt;1;\n            }\n            else{\n                q[t].r=q[t].mid-1;ans[t]=q[t].mid;\n                q[t].mid=(q[t].r+q[t].l)&gt;&gt;1;\n            }\n            if(q[t].l&lt;=q[t].r) res.pb(t);\n        }\n    }\n    /*puts(\"\\nres:\");\n    for(auto v:res) printf(\"%lld \",v);\n    puts(\"\\nvec:\");\n    for(auto v:vec) printf(\"l:%lld r:%lld %lld\\n\",q[v].l,q[v].r,v);\n    puts(\"\");*/\n    swap(res,vec);\n}\n\nvector&lt;int&gt;vec;\nvoid solve(){\n    n=read();Q=read();\n    for(int i=1;i&lt;=n;++i) G[read()].pb(i);\n    for(int i=0;i&lt;=n;++i) reverse(G[i].begin(),G[i].end());\n    for(int i=1;i&lt;=Q;++i){\n        q[i].ql=read();q[i].qr=read();q[i].k=read();q[i].id=i;\n        q[i].l=0;q[i].r=q[i].qr-q[i].ql+1;q[i].mid=(q[i].l+q[i].r)&gt;&gt;1;\n        vec.pb(i);\n    }\n    for(;vec.size();){\n        solve(vec);\n    }\n    for(int i=1;i&lt;=Q;++i) printf(\"%lld\\n\",ans[i]);\n}\n\nsigned main(){\n    for(int cas=1;cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>J.Just Another String Problem</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\\(s\\)\uff0c\u548c\u4e00\u4e2a\u6570\u7ec4\\(a\\)\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u96c6\u5408\uff0c\u8981\u6c42\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u540e\u7f00\uff0c\u5176\u4e2d\u957f\u5ea6\u4e3a\\(i\\)\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u8d21\u732e\\(a_i\\)\u3002\u4e00\u4e2a\u96c6\u5408\u7684\u4ef7\u503c\u662f\u5176\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u7684\u8d21\u732e\u548c\u3002\\(q\\)\u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\\(s\\)\u7684\u4e00\u4e2a\u524d\u7f00\u5b50\u4e32\\(s_i\\)\uff0c\u5728\u5176\u4e2d\u9009\u62e9\u4e0d\u8d85\u8fc7\\(k_i\\)\u4e2a\u4e32\u7ec4\u6210\u96c6\u5408\uff0c\u95ee\u96c6\u5408\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\\(|s|,q\\leq 2\\times10^5,a_i\\leq 10^9\\)\uff0c\u591a\u7ec4\u6570\u636e\u3002</p> <p>\u5176\u5b9e\u8fd9\u662f\u4e00\u4e2a\u5927\u6c34\u9898\uff0c\u73b0\u573a\u8d5b\u6ca1\u4eba\u505a\uff0cvp\u7684\u65f6\u5019\u7ebf\u6bb5\u6811\u5199\u9519\u4e86\u5bc4\u4e86\u3002</p> <p>\u89c2\u5bdf\u5230\u96c6\u5408\u4e2d\u9009\u62e9\u7684\u5b57\u7b26\u4e32\u6709\u8fd9\u4e2a\u540e\u7f00\u5173\u7cfb\u7684\u9650\u5236\uff0c\u8054\u60f3\u5230\u5728SAM\u7684parent\u6811\u4e0a\uff0c\u7236\u8282\u70b9\u7684endpos\u662f\u6240\u6709\u5b50\u8282\u70b9endpos\u7684\u5e76\uff0c\u800c\u4e14\u7236\u8282\u70b9\u7684\u957f\u5ea6\u4e00\u5b9a\u5c0f\u4e8e\u5b50\u8282\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u5b9e\u9645\u4e0a\u6700\u4f18\u7684\u9009\u62e9\u5c31\u662fparent\u6811\u4e0a\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u3002\u73b0\u5728\u6709\u8fd9\u4e2a\\(k_i\\)\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u7b80\u5355\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u957f\u5ea6\u6709\u591a\u5c11\u4e2a\u4ee5\u53ca\u4ef7\u503c\u548c\u5373\u53ef\u3002</p> <p>\u4e8b\u5b9e\u4e0a\u6211\u4eec\u4e0d\u9700\u8981\u6784\u5efa\u51faSAM\u540e\u518d\u590d\u6742\u5730\u79bb\u7ebf\uff0c\u5728extend\u6bcf\u4e2a\u5b57\u7b26\u540e\u7236\u5b50\u5173\u7cfb\u4e5f\u6ee1\u8db3\u8fd9\u4e2a\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u6709\u513f\u5b50\uff0c\u7136\u540e\u987a\u4fbf\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p> <p>\u590d\u6742\u5ea6\\(O(n\\log n)\\)</p> <p>\u5176\u5b9eKMP\u6811\u597d\u50cf\u5c31\u80fd\u505a\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u4e0d\u8fc7\u6ca1\u6709\u5199\u3002</p> <pre><code>/*SAM*/\n#include&lt;bits/stdc++.h&gt;\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\n#define rep(i,l,r) for(int i=(l),i##end=(r);i&lt;=i##end;i++)\n#define dwn(i,l,r) for(int i=(l),i##end=(r);i&gt;=i##end;i--)\n#define forn(i,n) for(int i=0;i&lt;(n);i++)\n#define hvie '\\n'\n#define read yh\n#define int long long\nusing namespace std;\n\ntypedef double db;\ntypedef pair&lt;int,int&gt; pii;\ntypedef long long ll;\n\nint yh(){\n    int ret=0,f=0;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=1;c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    return f?-ret:ret;\n}\n\nconst int N=4e5+10,mod=998244353;\nint n,Q;\nint val[N],ans[N];\n\nstruct Seg{\n    #define ls (x&lt;&lt;1)\n    #define rs (x&lt;&lt;1|1)\n    #define mid ((l+r)&gt;&gt;1)\n    int cnt[N&lt;&lt;2],sum[N&lt;&lt;2];\n    void build(int x,int l,int r){\n        cnt[x]=sum[x]=0;\n        if(l==r) return;\n        build(ls,l,mid);build(rs,mid+1,r);\n    }\n    void pushup(int x){\n        cnt[x]=cnt[ls]+cnt[rs];\n        sum[x]=sum[ls]+sum[rs];\n    }\n    void update(int x,int l,int r,int p,int v){\n        if(!p) return;\n        if(l==r){\n            cnt[x]+=v;sum[x]=cnt[x]*val[l];\n            return;\n        }\n        if(p&lt;=mid) update(ls,l,mid,p,v);\n        else update(rs,mid+1,r,p,v);\n        pushup(x);\n    }\n    int query(int x,int l,int r,int K){\n        if(cnt[x]&lt;=K) return sum[x];\n        if(l==r) return K*val[l];\n        if(cnt[rs]&gt;=K) return query(rs,mid+1,r,K);\n        return sum[rs]+query(ls,l,mid,K-cnt[rs]);\n    }\n    #undef mid\n    #undef ls\n    #undef rs\n}T;\n\n\n\nstruct SAM{\n    int sz,las;\n    int mx[N],fa[N],son[N],ch[N][26];\n    void init(){\n        for(int i=0;i&lt;=sz;++i){\n            mx[i]=fa[i]=son[i]=0;\n            memset(ch[i],0,sizeof(ch[i]));\n        }\n        sz=las=1;\n    }\n    void updatefa(int x,int f){\n        if(fa[x]){\n            --son[fa[x]];\n            if(!son[fa[x]]) T.update(1,1,n,mx[fa[x]],1);\n        }\n        fa[x]=f;\n        if(f){\n            ++son[f];\n            if(son[f]==1) T.update(1,1,n,mx[f],-1);\n        }\n    }\n    void extend(int x){\n        int p,q,np,nq;\n        p=las;las=np=++sz;mx[np]=mx[p]+1;\n        T.update(1,1,n,mx[np],1);\n        for(;p &amp;&amp; !ch[p][x];p=fa[p]) ch[p][x]=np;\n        if(!p) updatefa(np,1);\n        else{\n            q=ch[p][x];\n            if(mx[q]==mx[p]+1){\n                updatefa(np,q);\n            }\n            else{\n                nq=++sz;mx[nq]=mx[p]+1;T.update(1,1,n,mx[nq],1);\n                memcpy(ch[nq],ch[q],sizeof(ch[q]));\n                updatefa(nq,fa[q]);updatefa(q,nq);updatefa(np,nq);\n                for(;ch[p][x]==q;p=fa[p]) ch[p][x]=nq;\n            }\n        }\n    }\n}S;\n\nchar s[N];\nvector&lt;pii&gt;q[N];\nvoid solve(){\n    n=read();Q=read();scanf(\"%s\",s+1);\n    for(int i=1;i&lt;=n;++i) val[i]=read();\n    for(int i=1;i&lt;=Q;++i){\n        int l=read(),k=read();\n        q[l].pb(mkp(i,k));\n    }\n    T.build(1,1,n);S.init();\n    for(int i=1;i&lt;=n;++i){\n        S.extend(s[i]-'a');\n        for(auto v:q[i]) ans[v.fi]=T.query(1,1,n,v.se);\n    }\n    for(int i=1;i&lt;=Q;++i) printf(\"%lld\\n\",ans[i]);\n    for(int i=0;i&lt;=n;++i) q[i].clear();\n}\n\nsigned main(){\n    for(int cas=read();cas--;){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"}]}